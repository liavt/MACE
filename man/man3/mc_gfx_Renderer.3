.TH "mc::gfx::Renderer" 3 "Sat Apr 8 2017" "Version Alpha" "MACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mc::gfx::Renderer \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Renderer\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBflagResize\fP ()"
.br
.ti -1c
.RI "virtual void \fBresize\fP (const \fBSize\fP width, const \fBSize\fP height)"
.br
.ti -1c
.RI "virtual void \fBinit\fP (const \fBSize\fP \fBoriginalWidth\fP, const \fBSize\fP \fBoriginalHeight\fP)"
.br
.ti -1c
.RI "virtual void \fBinitEntity\fP (\fBGraphicsEntity\fP *en, const \fBIndex\fP protocol)"
.br
.ti -1c
.RI "virtual void \fBsetUp\fP (\fBos::WindowModule\fP *win)"
.br
.ti -1c
.RI "void \fBqueue\fP (\fBGraphicsEntity\fP *e, const \fBIndex\fP protocol)"
.br
.ti -1c
.RI "\fBSize\fP \fBnumberOfProtocols\fP ()"
.br
.ti -1c
.RI "virtual void \fBtearDown\fP (\fBos::WindowModule\fP *win)"
.br
.ti -1c
.RI "virtual void \fBrenderFrame\fP (\fBos::WindowModule\fP *win)"
.br
.ti -1c
.RI "virtual void \fBcheckInput\fP (\fBos::WindowModule\fP *win)"
.br
.ti -1c
.RI "virtual void \fBcleanEntity\fP (\fBGraphicsEntity\fP *en, const \fBIndex\fP protocol)"
.br
.ti -1c
.RI "virtual void \fBdestroy\fP ()"
.br
.ti -1c
.RI "virtual void \fBdestroyEntity\fP (\fBGraphicsEntity\fP *en, const \fBIndex\fP protocol)"
.br
.ti -1c
.RI "virtual void \fBclearBuffers\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetRefreshColor\fP (const float r, const float g, const float b, const float a=1\&.0f)"
.br
.ti -1c
.RI "void \fBsetRefreshColor\fP (const \fBColor\fP &c)"
.br
.ti -1c
.RI "template<typename T > \fBIndex\fP \fBregisterProtocol\fP ()"
.br
.ti -1c
.RI "\fBSize\fP \fBgetOriginalWidth\fP () const "
.br
.ti -1c
.RI "\fBSize\fP \fBgetOriginalHeight\fP () const "
.br
.ti -1c
.RI "\fBSize\fP \fBgetWidth\fP () const "
.br
.ti -1c
.RI "\fBSize\fP \fBgetHeight\fP () const "
.br
.ti -1c
.RI "\fBSize\fP \fBgetSamples\fP () const "
.br
.ti -1c
.RI "\fBVector\fP< float, 2 > \fBgetWindowRatios\fP () const "
.br
.ti -1c
.RI "\fBRenderQueue\fP \fBgetRenderQueue\fP () const "
.br
.ti -1c
.RI "\fBIndex\fP \fBgetEntityIndex\fP () const "
.br
.ti -1c
.RI "bool \fBisResized\fP () const "
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBpushEntity\fP (\fBIndex\fP protocol, \fBGraphicsEntity\fP *entity)"
.br
.ti -1c
.RI "void \fBpushProtocol\fP (\fBRenderImpl\fP *protocol)"
.br
.ti -1c
.RI "virtual void \fBgenerateFramebuffer\fP (const \fBSize\fP &width, const \fBSize\fP &height)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBRenderQueue\fP \fBrenderQueue\fP = \fBRenderQueue\fP()"
.br
.ti -1c
.RI "std::vector< \fBRenderImpl\fP * > \fBprotocols\fP = std::vector<\fBRenderImpl\fP*>()"
.br
.ti -1c
.RI "\fBSize\fP \fBoriginalWidth\fP = 0"
.br
.ti -1c
.RI "\fBSize\fP \fBoriginalHeight\fP = 0"
.br
.ti -1c
.RI "\fBSize\fP \fBsamples\fP = 1"
.br
.ti -1c
.RI "bool \fBresized\fP"
.br
.ti -1c
.RI "\fBVector\fP< float, 2 > \fBwindowRatios\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "void \fBssl::init\fP (const \fBSize\fP &, const \fBSize\fP &)"
.br
.ti -1c
.RI "void \fBssl::bindEntity\fP (const \fBGraphicsEntity\fP *en, \fBogl::ShaderProgram\fP &prog)"
.br
.ti -1c
.RI "void \fBssl::checkInput\fP (\fBos::WindowModule\fP *win)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBTodo\fP
.RS 4
add function to change how many samples msaa uses 
.RE
.PP

.PP
Definition at line 195 of file Renderer\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void mc::gfx::Renderer::checkInput (\fBos::WindowModule\fP * win)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::cleanEntity (\fBGraphicsEntity\fP * en, const \fBIndex\fP protocol)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::clearBuffers ()\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::destroy ()\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::destroyEntity (\fBGraphicsEntity\fP * en, const \fBIndex\fP protocol)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "void mc::gfx::Renderer::flagResize ()"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::generateFramebuffer (const \fBSize\fP & width, const \fBSize\fP & height)\fC [protected]\fP, \fC [virtual]\fP"

.SS "\fBIndex\fP mc::gfx::Renderer::getEntityIndex () const"

.SS "\fBSize\fP mc::gfx::Renderer::getHeight () const"

.SS "\fBSize\fP mc::gfx::Renderer::getOriginalHeight () const"

.SS "\fBSize\fP mc::gfx::Renderer::getOriginalWidth () const"

.SS "\fBRenderQueue\fP mc::gfx::Renderer::getRenderQueue () const"

.SS "\fBSize\fP mc::gfx::Renderer::getSamples () const"

.SS "\fBSize\fP mc::gfx::Renderer::getWidth () const"

.SS "\fBVector\fP<float, 2> mc::gfx::Renderer::getWindowRatios () const"

.SS "virtual void mc::gfx::Renderer::init (const \fBSize\fP originalWidth, const \fBSize\fP originalHeight)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::initEntity (\fBGraphicsEntity\fP * en, const \fBIndex\fP protocol)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "bool mc::gfx::Renderer::isResized () const"

.SS "\fBSize\fP mc::gfx::Renderer::numberOfProtocols ()"

.SS "void mc::gfx::Renderer::pushEntity (\fBIndex\fP protocol, \fBGraphicsEntity\fP * entity)\fC [protected]\fP"

.SS "void mc::gfx::Renderer::pushProtocol (\fBRenderImpl\fP * protocol)\fC [protected]\fP"

.SS "void mc::gfx::Renderer::queue (\fBGraphicsEntity\fP * e, const \fBIndex\fP protocol)"

.SS "template<typename T > \fBIndex\fP mc::gfx::Renderer::registerProtocol ()\fC [inline]\fP"

.PP
Definition at line 285 of file Renderer\&.h\&.
.SS "virtual void mc::gfx::Renderer::renderFrame (\fBos::WindowModule\fP * win)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::resize (const \fBSize\fP width, const \fBSize\fP height)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::setRefreshColor (const float r, const float g, const float b, const float a = \fC1\&.0f\fP)\fC [virtual]\fP"

.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "void mc::gfx::Renderer::setRefreshColor (const \fBColor\fP & c)"

.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::setUp (\fBos::WindowModule\fP * win)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "virtual void mc::gfx::Renderer::tearDown (\fBos::WindowModule\fP * win)\fC [virtual]\fP"

.PP
\fBWarning:\fP
.RS 4
This should only be used internally or by advanced users\&. Misuse can cause undefined behavior 
.RE
.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SH "Friends And Related Function Documentation"
.PP 
.SS "void \fBssl::bindEntity\fP (const \fBGraphicsEntity\fP * en, \fBogl::ShaderProgram\fP & prog)\fC [friend]\fP"

.SS "void \fBssl::checkInput\fP (\fBos::WindowModule\fP * win)\fC [friend]\fP"

.SS "void \fBssl::init\fP (const \fBSize\fP &, const \fBSize\fP &)\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBSize\fP mc::gfx::Renderer::originalHeight = 0\fC [protected]\fP"

.PP
Definition at line 321 of file Renderer\&.h\&.
.SS "\fBSize\fP mc::gfx::Renderer::originalWidth = 0\fC [protected]\fP"

.PP
Definition at line 320 of file Renderer\&.h\&.
.SS "std::vector<\fBRenderImpl\fP*> mc::gfx::Renderer::protocols = std::vector<\fBRenderImpl\fP*>()\fC [protected]\fP"

.PP
Definition at line 318 of file Renderer\&.h\&.
.SS "\fBRenderQueue\fP mc::gfx::Renderer::renderQueue = \fBRenderQueue\fP()\fC [protected]\fP"

.PP
Definition at line 317 of file Renderer\&.h\&.
.SS "bool mc::gfx::Renderer::resized\fC [protected]\fP"

.PP
Definition at line 325 of file Renderer\&.h\&.
.SS "\fBSize\fP mc::gfx::Renderer::samples = 1\fC [protected]\fP"

.PP
Definition at line 323 of file Renderer\&.h\&.
.SS "\fBVector\fP<float, 2> mc::gfx::Renderer::windowRatios\fC [protected]\fP"

.PP
Definition at line 327 of file Renderer\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MACE from the source code\&.
