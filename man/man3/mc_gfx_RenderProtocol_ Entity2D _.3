.TH "mc::gfx::RenderProtocol< Entity2D >" 3 "Fri Nov 25 2016" "Version Alpha" "MACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mc::gfx::RenderProtocol< Entity2D > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Entity2D\&.h>\fP
.PP
Inherits \fBmc::gfx::RenderImpl\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBresize\fP (const \fBSize\fP width, const \fBSize\fP height)"
.br
.ti -1c
.RI "void \fBinit\fP (const \fBSize\fP originalWidth, const \fBSize\fP originalHeight)"
.br
.ti -1c
.RI "void \fBsetUp\fP (\fBos::Window\fP *win, \fBRenderQueue\fP *queue)"
.br
.ti -1c
.RI "void \fBrender\fP (\fBos::Window\fP *win, \fBEntity\fP *entity)"
.br
.ti -1c
.RI "void \fBtearDown\fP (\fBos::Window\fP *win, \fBRenderQueue\fP *queue)"
.br
.ti -1c
.RI "void \fBdestroy\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<>
.br
class mc::gfx::RenderProtocol< Entity2D >"

.PP
Definition at line 39 of file Entity2D\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void \fBmc::gfx::RenderProtocol\fP< \fBEntity2D\fP >::destroy ()\fC [virtual]\fP"

.PP
Implements \fBmc::gfx::RenderImpl\fP\&.
.SS "void \fBmc::gfx::RenderProtocol\fP< \fBEntity2D\fP >::init (const \fBSize\fP originalWidth, const \fBSize\fP originalHeight)\fC [virtual]\fP"

.PP
Implements \fBmc::gfx::RenderImpl\fP\&.
.SS "void \fBmc::gfx::RenderProtocol\fP< \fBEntity2D\fP >::render (\fBos::Window\fP * win, \fBEntity\fP * entity)\fC [virtual]\fP"

.PP
Implements \fBmc::gfx::RenderImpl\fP\&.
.SS "void \fBmc::gfx::RenderProtocol\fP< \fBEntity2D\fP >::resize (const \fBSize\fP width, const \fBSize\fP height)\fC [virtual]\fP"

.PP
Implements \fBmc::gfx::RenderImpl\fP\&.
.SS "void \fBmc::gfx::RenderProtocol\fP< \fBEntity2D\fP >::setUp (\fBos::Window\fP * win, \fBRenderQueue\fP * queue)\fC [virtual]\fP"

.PP
Implements \fBmc::gfx::RenderImpl\fP\&.
.SS "void \fBmc::gfx::RenderProtocol\fP< \fBEntity2D\fP >::tearDown (\fBos::Window\fP * win, \fBRenderQueue\fP * queue)\fC [virtual]\fP"

.PP
Implements \fBmc::gfx::RenderImpl\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MACE from the source code\&.
