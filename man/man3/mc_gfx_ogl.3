.TH "mc::gfx::ogl" 3 "Sat Jan 14 2017" "Version Alpha" "MACE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mc::gfx::ogl \- Contains various abstractions for OpenGL\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBuffer\fP"
.br
.RI "\fIRepresents a buffer of memory in the GPU\&. \fP"
.ti -1c
.RI "class \fBCopyReadBuffer\fP"
.br
.RI "\fISpecial buffer with no extra semantics to be used as a proxy in copying\&. \fP"
.ti -1c
.RI "class \fBCopyWriteBuffer\fP"
.br
.RI "\fISpecial buffer with no extra semantics to be used as a proxy in copying\&. \fP"
.ti -1c
.RI "class \fBElementBuffer\fP"
.br
.RI "\fIStores element indices to save vertex data\&. \fP"
.ti -1c
.RI "class \fBFrameBuffer\fP"
.br
.RI "\fIRepresents an OpenGL Framebuffer \fBObject\fP which allows rendering to a non-screen location\&. \fP"
.ti -1c
.RI "class \fBObject\fP"
.br
.RI "\fIRepresents a OpenGL object in memory\&. \fP"
.ti -1c
.RI "class \fBPixelPackBuffer\fP"
.br
.RI "\fISpecial buffer that excels at asynchronous pixel transfer operations\&. \fP"
.ti -1c
.RI "class \fBPixelUnpackBuffer\fP"
.br
.RI "\fISpecial buffer that excels at asynchronous pixel transfer operations\&. \fP"
.ti -1c
.RI "class \fBQueryObject\fP"
.br
.RI "\fISpecial object that is used for asynchronous queries of information from the GPU\&. \fP"
.ti -1c
.RI "class \fBRenderBuffer\fP"
.br
.RI "\fIRepresents a render buffer for use with a `FrameBuffer\&. \fP"
.ti -1c
.RI "class \fBShader\fP"
.br
.RI "\fIRepresents a shader object in OpenGL\&. \fP"
.ti -1c
.RI "class \fBShaderProgram\fP"
.br
.ti -1c
.RI "class \fBTexture\fP"
.br
.ti -1c
.RI "class \fBUniformBuffer\fP"
.br
.RI "\fIStores uniform data for a shader in the form of a buffer\&. \fP"
.ti -1c
.RI "class \fBVertexArray\fP"
.br
.ti -1c
.RI "class \fBVertexBuffer\fP"
.br
.RI "\fIStores vertex data for a `VertexArray\&. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBGLError\fP = \fBException\fP"
.br
.ti -1c
.RI "using \fBShaderError\fP = \fBException\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBcheckGLError\fP (const \fBIndex\fP line=0, const char *file='Unknown file')"
.br
.ti -1c
.RI "void \fBcheckGLError\fP (const \fBIndex\fP line, const std::string &file)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Contains various abstractions for OpenGL\&. 

Assume that any class in this namespace requires an OpenGL context\&. 
.PP
OpenGL abstractions will only implement functionality from OpenGL 3\&.3, as that is what \fBMACE\fP supports\&. 
.PP
Most of the abstractions have very minimal extra work\&. Most of the time they are direct bindings to the actual OpenGL function\&. However, some classes like \fC\fBShaderProgram\fP\fP do a lot of bookkeeping to make it easier to use\&. 
.PP
The documentation for classes in the \fCogl\fP namespace assumes that you understand the underlying OpenGL concepts\&. A link to a page about the OpenGL concept is usually present\&. 
.PP
Each abstraction follows a very similar syntax and style to make it easier to understand\&. 
.PP
\fBSee also:\fP
.RS 4
\fBObject\fP 
.PP
\fBBuffer\fP 
.RE
.PP
\fBTodo\fP
.RS 4
create a ReadableBuffer class with functions like glReadPixels 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "using \fBmc::gfx::ogl::GLError\fP = typedef \fBException\fP"

.PP
Definition at line 47 of file OGL\&.h\&.
.SS "using \fBmc::gfx::ogl::ShaderError\fP = typedef \fBException\fP"

.PP
Definition at line 49 of file OGL\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void mc::gfx::ogl::checkGLError (const \fBIndex\fP line = \fC0\fP, const char * file = \fC'Unknown file'\fP)"

.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SS "void mc::gfx::ogl::checkGLError (const \fBIndex\fP line, const std::string & file)"

.PP

.PP
\fBAttention:\fP
.RS 4
This uses an OpenGL function and must be called in a thread with an OpenGL context\&. Otherwise, an error will be thrown\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIGL_INVALID_OPERATION\fP If the current thread does not have an OpenGL context 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for MACE from the source code\&.
