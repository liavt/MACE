<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d7/de0/a00022" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::Font</compoundname>
    <includes refid="df/d13/a00085" local="no">Entity2D.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/de0/a00022_1af59e961b38dcb549d3b4262277f72fe4" prot="private" static="no" mutable="no">
        <type><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Font::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="290" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/de0/a00022_1a131c47b22d1293aea619bba256150c1b" prot="private" static="no" mutable="no">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Font::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="291" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d7/de0/a00022_ab907da5fcbee882984d7af883a6e3a3b_1ab907da5fcbee882984d7af883a6e3a3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/de0/a00022" kindref="compound">Font</ref></type>
        <definition>static Font mc::gfx::Font::loadFont</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>loadFont</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_aa187b2fac92651ceb87d9f706cade557_1aa187b2fac92651ceb87d9f706cade557" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/de0/a00022" kindref="compound">Font</ref></type>
        <definition>static Font mc::gfx::Font::loadFont</definition>
        <argsstring>(const char *name)</argsstring>
        <name>loadFont</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a690efd59c765cc02cadded9d5f21ed11_1a690efd59c765cc02cadded9d5f21ed11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/de0/a00022" kindref="compound">Font</ref></type>
        <definition>static Font mc::gfx::Font::loadFontFromMemory</definition>
        <argsstring>(const unsigned char *data, long int size)</argsstring>
        <name>loadFontFromMemory</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a9b810f02182a47d3a58f59794dc1bdd4_1a9b810f02182a47d3a58f59794dc1bdd4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d7/de0/a00022" kindref="compound">Font</ref></type>
        <definition>static Font mc::gfx::Font::loadFontFromMemory</definition>
        <argsstring>(const unsigned char data[N])</argsstring>
        <name>loadFontFromMemory</name>
        <param>
          <type>const unsigned char</type>
          <declname>data</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="262" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="262" bodyend="264"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/de0/a00022_ad8d194e0c7421d4d6ee942268555ee84_1ad8d194e0c7421d4d6ee942268555ee84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Font::Font</definition>
        <argsstring>(const Font &amp;f)</argsstring>
        <name>Font</name>
        <param>
          <type>const <ref refid="d7/de0/a00022" kindref="compound">Font</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_ab87c1a3756133093f6838e32115319c2_1ab87c1a3756133093f6838e32115319c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Font::Font</definition>
        <argsstring>(const Index id=0, const Size h=0)</argsstring>
        <name>Font</name>
        <param>
          <type>const <ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>h</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_affc95b243f751c087d634ca7e4693c4b_1affc95b243f751c087d634ca7e4693c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Font::Font</definition>
        <argsstring>(const Fonts f, const Size height=32)</argsstring>
        <name>Font</name>
        <param>
          <type>const <ref refid="d7/d12/a00126_afca32e5d8b95490f27ae181fcdfc6c6b_1afca32e5d8b95490f27ae181fcdfc6c6b" kindref="member">Fonts</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>height</declname>
          <defval>32</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a519923729ff68871ce1099bba0ab4dec_1a519923729ff68871ce1099bba0ab4dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Font::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a5b2de14319604376fca82d41214f5497_1a5b2de14319604376fca82d41214f5497" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Font::getCharacter</definition>
        <argsstring>(const wchar_t character, Letter &amp;let) const </argsstring>
        <name>getCharacter</name>
        <param>
          <type>const wchar_t</type>
          <declname>character</declname>
        </param>
        <param>
          <type><ref refid="df/d61/a00031" kindref="compound">Letter</ref> &amp;</type>
          <declname>let</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="d8/d84/a00001_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>cache characters </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_ae1205d951c9acdf61d301e9d190d2371_1ae1205d951c9acdf61d301e9d190d2371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Font::setSize</definition>
        <argsstring>(const Size height)</argsstring>
        <name>setSize</name>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_ab3fe63bd719b55860e2bdfeff63807e2_1ab3fe63bd719b55860e2bdfeff63807e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
        <definition>Size&amp; mc::gfx::Font::getSize</definition>
        <argsstring>()</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_ad7075781d64c8bbe498d8821f8300803_1ad7075781d64c8bbe498d8821f8300803" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
        <definition>const Size&amp; mc::gfx::Font::getSize</definition>
        <argsstring>() const </argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_addfb473d31193423717b76534db19419_1addfb473d31193423717b76534db19419" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Font::hasKerning</definition>
        <argsstring>() const </argsstring>
        <name>hasKerning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_ad8bdac5202b082eac094e70b619d5fe5_1ad8bdac5202b082eac094e70b619d5fe5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>&lt; unsigned int, 2 &gt;</type>
        <definition>Vector&lt;unsigned int, 2&gt; mc::gfx::Font::getKerning</definition>
        <argsstring>(const wchar_t prev, const wchar_t current) const </argsstring>
        <name>getKerning</name>
        <param>
          <type>const wchar_t</type>
          <declname>prev</declname>
        </param>
        <param>
          <type>const wchar_t</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_aa8b87c12495b91a7ee4bafdecdcd1699_1aa8b87c12495b91a7ee4bafdecdcd1699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Font::getID</definition>
        <argsstring>() const </argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a3885a76ecc2d8157b934e354d7e7a93c_1a3885a76ecc2d8157b934e354d7e7a93c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Font::operator==</definition>
        <argsstring>(const Font &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d7/de0/a00022" kindref="compound">Font</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a0e10985baf41656de23071ca30edd389_1a0e10985baf41656de23071ca30edd389" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Font::operator!=</definition>
        <argsstring>(const Font &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d7/de0/a00022" kindref="compound">Font</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="288" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="d8/d84/a00001_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>instead of using an id system add FT_Face </para></xrefdescription></xrefsect><xrefsect id="d7/d46/a00002_1_bug000001"><xreftitle>Bug</xreftitle><xrefdescription><para><ref refid="d7/d12/a00126_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0deea21507b40c80068eda19865706fdc2403" kindref="member">HorizontalAlignment::RIGHT</ref> misses the last letter in the width calculation </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="include/MACE/Graphics/Entity2D.h" line="256" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="256" bodyend="292"/>
    <listofallmembers>
      <member refid="d7/de0/a00022_a519923729ff68871ce1099bba0ab4dec_1a519923729ff68871ce1099bba0ab4dec" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>destroy</name></member>
      <member refid="d7/de0/a00022_ad8d194e0c7421d4d6ee942268555ee84_1ad8d194e0c7421d4d6ee942268555ee84" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>Font</name></member>
      <member refid="d7/de0/a00022_ab87c1a3756133093f6838e32115319c2_1ab87c1a3756133093f6838e32115319c2" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>Font</name></member>
      <member refid="d7/de0/a00022_affc95b243f751c087d634ca7e4693c4b_1affc95b243f751c087d634ca7e4693c4b" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>Font</name></member>
      <member refid="d7/de0/a00022_a5b2de14319604376fca82d41214f5497_1a5b2de14319604376fca82d41214f5497" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>getCharacter</name></member>
      <member refid="d7/de0/a00022_aa8b87c12495b91a7ee4bafdecdcd1699_1aa8b87c12495b91a7ee4bafdecdcd1699" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>getID</name></member>
      <member refid="d7/de0/a00022_ad8bdac5202b082eac094e70b619d5fe5_1ad8bdac5202b082eac094e70b619d5fe5" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>getKerning</name></member>
      <member refid="d7/de0/a00022_ab3fe63bd719b55860e2bdfeff63807e2_1ab3fe63bd719b55860e2bdfeff63807e2" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>getSize</name></member>
      <member refid="d7/de0/a00022_ad7075781d64c8bbe498d8821f8300803_1ad7075781d64c8bbe498d8821f8300803" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>getSize</name></member>
      <member refid="d7/de0/a00022_addfb473d31193423717b76534db19419_1addfb473d31193423717b76534db19419" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>hasKerning</name></member>
      <member refid="d7/de0/a00022_1a131c47b22d1293aea619bba256150c1b" prot="private" virt="non-virtual"><scope>mc::gfx::Font</scope><name>height</name></member>
      <member refid="d7/de0/a00022_1af59e961b38dcb549d3b4262277f72fe4" prot="private" virt="non-virtual"><scope>mc::gfx::Font</scope><name>id</name></member>
      <member refid="d7/de0/a00022_ab907da5fcbee882984d7af883a6e3a3b_1ab907da5fcbee882984d7af883a6e3a3b" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>loadFont</name></member>
      <member refid="d7/de0/a00022_aa187b2fac92651ceb87d9f706cade557_1aa187b2fac92651ceb87d9f706cade557" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>loadFont</name></member>
      <member refid="d7/de0/a00022_a690efd59c765cc02cadded9d5f21ed11_1a690efd59c765cc02cadded9d5f21ed11" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>loadFontFromMemory</name></member>
      <member refid="d7/de0/a00022_a9b810f02182a47d3a58f59794dc1bdd4_1a9b810f02182a47d3a58f59794dc1bdd4" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>loadFontFromMemory</name></member>
      <member refid="d7/de0/a00022_a0e10985baf41656de23071ca30edd389_1a0e10985baf41656de23071ca30edd389" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>operator!=</name></member>
      <member refid="d7/de0/a00022_a3885a76ecc2d8157b934e354d7e7a93c_1a3885a76ecc2d8157b934e354d7e7a93c" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>operator==</name></member>
      <member refid="d7/de0/a00022_ae1205d951c9acdf61d301e9d190d2371_1ae1205d951c9acdf61d301e9d190d2371" prot="public" virt="non-virtual"><scope>mc::gfx::Font</scope><name>setSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
