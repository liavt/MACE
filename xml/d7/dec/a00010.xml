<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d7/dec/a00010" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mc::gfx::Component</compoundname>
    <includes refid="d4/dca/a00048" local="no">Entity.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/dec/a00010_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::init</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="d2/de7/a00014" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when this <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> is added to the <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> via <ref refid="d2/de7/a00014_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is not called at <ref refid="d2/de7/a00014_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity::init()</ref>, instead it is called when the component is added to the <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput>. Keep that in mind. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/a00010_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool mc::gfx::Component::update</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="d2/de7/a00014" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d2/de7/a00014_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. </para><para>There is no function to remove a <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> so this is the only way for a <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> to be removed from an <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> </para><para><ref refid="d7/dec/a00010_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> will be called afterwards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether this <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> should be deleted or not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/a00010_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::destroy</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>destroy</name>
        <param>
          <type><ref refid="d2/de7/a00014" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d2/de7/a00014_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity::destroy()</ref> is called or the <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> is removed via <ref refid="d7/dec/a00010_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>, whichever comes first. </para>        </briefdescription>
        <detaileddescription>
<para>Once <ref refid="d7/dec/a00010_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> is called, it is immediately removed from the <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput>. Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/dec/a00010_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::clean</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>clean</name>
        <param>
          <type><ref refid="d2/de7/a00014" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d2/de7/a00014_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e" kindref="member">Entity::clean()</ref> is called and it was dirty. </para>        </briefdescription>
        <detaileddescription>
<para>This is not required for inheritance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Can be plugged into an <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> to allow for additional functionality by listening to events. </para>    </briefdescription>
    <detaileddescription>
<para>Instead of extending an existing <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> subclass, you should prefer using a <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> to not interfere with custom <ref refid="d2/de7/a00014_a14defaca92f04c32b892cbc08263d3ac_1a14defaca92f04c32b892cbc08263d3ac" kindref="member">Entity::onRender()</ref> and similar functions. </para><para>Similarly to all objects in MACE, <ref refid="d7/dec/a00010_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" kindref="member">Component::init(Entity*)</ref> is always called and <ref refid="d7/dec/a00010_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> is also always called. </para><para>Contains virtual functions for every event in an <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> which each have 1 parameter - the <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput> being acted on. </para><para>You are required to implement <ref refid="d7/dec/a00010_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" kindref="member">Component::init(Entity*)</ref>, <ref refid="d7/dec/a00010_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>, and <ref refid="d7/dec/a00010_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref>. There are additional functions which are optional to implement. </para><para>There is no function to remove a <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> from an <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Entity</ref></computeroutput>. Instead, the <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> decides when to be removed from <ref refid="d7/dec/a00010_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>. This makes sure that the <computeroutput><ref refid="d7/dec/a00010" kindref="compound">Component</ref></computeroutput> completes whatever task it was trying to do. <simplesect kind="see"><para><ref refid="d2/de7/a00014_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="include/MACE/Graphics/Entity.h" line="49" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="49" bodyend="80"/>
    <listofallmembers>
      <member refid="d7/dec/a00010_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe" prot="public" virt="virtual"><scope>mc::gfx::Component</scope><name>clean</name></member>
      <member refid="d7/dec/a00010_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" prot="public" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>destroy</name></member>
      <member refid="d7/dec/a00010_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" prot="public" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>init</name></member>
      <member refid="d7/dec/a00010_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" prot="public" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
