<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d2/d79/a00051" kind="class" language="C++" prot="public">
    <compoundname>mc::os::Serial</compoundname>
    <includes refid="d4/d3e/a00116" local="no">Serial.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d79/a00051_1a3412d4eb295d0af4021cf0d13f3e007c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mc::os::Serial::connected</definition>
        <argsstring></argsstring>
        <name>connected</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="77" column="1" bodyfile="include/MACE/Utility/Serial.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d79/a00051_a1151487373933fc5ef206ac9aa441ba6_1a1151487373933fc5ef206ac9aa441ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::os::Serial::Serial</definition>
        <argsstring>()</argsstring>
        <name>Serial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a0deaeef35be6fbbaa4fc81b9c15bb28e_1a0deaeef35be6fbbaa4fc81b9c15bb28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::os::Serial::Serial</definition>
        <argsstring>(const char *port, const Size baudRate=9600)</argsstring>
        <name>Serial</name>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>baudRate</declname>
          <defval>9600</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a0eb2568e2f139f2cae4d71ed9483b645_1a0eb2568e2f139f2cae4d71ed9483b645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::os::Serial::Serial</definition>
        <argsstring>(const std::string &amp;port, const Size baudRate=9600)</argsstring>
        <name>Serial</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>baudRate</declname>
          <defval>9600</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_aebe3d484c81f83a0267a012959700372_1aebe3d484c81f83a0267a012959700372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::os::Serial::~Serial</definition>
        <argsstring>()</argsstring>
        <name>~Serial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_ae570a3ba4e501aa6500d8b58f525f96c_1ae570a3ba4e501aa6500d8b58f525f96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::Serial::init</definition>
        <argsstring>(const char *port, const Size baudRate=9600)</argsstring>
        <name>init</name>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>baudRate</declname>
          <defval>9600</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a105e68f5b23caf1eb206407421c6aaea_1a105e68f5b23caf1eb206407421c6aaea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::Serial::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a5b96c6fa17e0904479977379b0db51e7_1a5b96c6fa17e0904479977379b0db51e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mc::os::Serial::read</definition>
        <argsstring>(char *buffer, Size bufferSize)</argsstring>
        <name>read</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a564de5cd8ae4013f117a933463517d2b_1a564de5cd8ae4013f117a933463517d2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int mc::os::Serial::read</definition>
        <argsstring>(char buffer[S])</argsstring>
        <name>read</name>
        <param>
          <type>char</type>
          <declname>buffer</declname>
          <array>[S]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="47" column="1" bodyfile="include/MACE/Utility/Serial.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_abb57cd59fb3c0076369bb3a7e96c1b25_1abb57cd59fb3c0076369bb3a7e96c1b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::Serial::write</definition>
        <argsstring>(const char *buffer, const Size bufferSize)</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a715762bf0071de2105cf1c22a70cdd98_1a715762bf0071de2105cf1c22a70cdd98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int mc::os::Serial::write</definition>
        <argsstring>(const char buffer[S])</argsstring>
        <name>write</name>
        <param>
          <type>const char</type>
          <declname>buffer</declname>
          <array>[S]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="53" column="1" bodyfile="include/MACE/Utility/Serial.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a53438e65e01f4655cb102d7a64aeecc9_1a53438e65e01f4655cb102d7a64aeecc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::Serial::write</definition>
        <argsstring>(const std::string &amp;port)</argsstring>
        <name>write</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a35922c0a773648ac362f49cc40ff3a0d_1a35922c0a773648ac362f49cc40ff3a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::Serial::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_aa10d54de100a76efdbfd7ec3bbad2986_1aa10d54de100a76efdbfd7ec3bbad2986" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::os::Serial::getAvailableCharacterAmount</definition>
        <argsstring>() const </argsstring>
        <name>getAvailableCharacterAmount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_aadf8dda15b9b79ffda0cdf18d56b60d8_1aadf8dda15b9b79ffda0cdf18d56b60d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::os::Serial::hasAvailable</definition>
        <argsstring>() const </argsstring>
        <name>hasAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_a5a531390da0a0a87c91f16c84bc0268f_1a5a531390da0a0a87c91f16c84bc0268f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::os::Serial::isConnected</definition>
        <argsstring>() const </argsstring>
        <name>isConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d79/a00051_adc46564f47ea9cbc417c91fee7daffda_1adc46564f47ea9cbc417c91fee7daffda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::os::Serial::isValid</definition>
        <argsstring>() const </argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Serial.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Opens up a serial communciation. </para>    </briefdescription>
    <detaileddescription>
<para>The serial connection will have no parity and a byte size of 8. The baud rate can be specified by the constructor. </para><para>Data will be sent and received raw, with no extra formatting. </para><para>The <computeroutput><ref refid="d2/d79/a00051" kindref="compound">Serial</ref></computeroutput> class is intended for communication to a microcontroller such as an Arduino. </para>    </detaileddescription>
    <location file="include/MACE/Utility/Serial.h" line="35" column="1" bodyfile="include/MACE/Utility/Serial.h" bodystart="35" bodyend="86"/>
    <listofallmembers>
      <member refid="d2/d79/a00051_1a3412d4eb295d0af4021cf0d13f3e007c" prot="private" virt="non-virtual"><scope>mc::os::Serial</scope><name>connected</name></member>
      <member refid="d2/d79/a00051_a105e68f5b23caf1eb206407421c6aaea_1a105e68f5b23caf1eb206407421c6aaea" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>destroy</name></member>
      <member refid="d2/d79/a00051_a35922c0a773648ac362f49cc40ff3a0d_1a35922c0a773648ac362f49cc40ff3a0d" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>flush</name></member>
      <member refid="d2/d79/a00051_aa10d54de100a76efdbfd7ec3bbad2986_1aa10d54de100a76efdbfd7ec3bbad2986" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>getAvailableCharacterAmount</name></member>
      <member refid="d2/d79/a00051_aadf8dda15b9b79ffda0cdf18d56b60d8_1aadf8dda15b9b79ffda0cdf18d56b60d8" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>hasAvailable</name></member>
      <member refid="d2/d79/a00051_ae570a3ba4e501aa6500d8b58f525f96c_1ae570a3ba4e501aa6500d8b58f525f96c" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>init</name></member>
      <member refid="d2/d79/a00051_a5a531390da0a0a87c91f16c84bc0268f_1a5a531390da0a0a87c91f16c84bc0268f" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>isConnected</name></member>
      <member refid="d2/d79/a00051_adc46564f47ea9cbc417c91fee7daffda_1adc46564f47ea9cbc417c91fee7daffda" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>isValid</name></member>
      <member refid="d2/d79/a00051_a5b96c6fa17e0904479977379b0db51e7_1a5b96c6fa17e0904479977379b0db51e7" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>read</name></member>
      <member refid="d2/d79/a00051_a564de5cd8ae4013f117a933463517d2b_1a564de5cd8ae4013f117a933463517d2b" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>read</name></member>
      <member refid="d2/d79/a00051_a1151487373933fc5ef206ac9aa441ba6_1a1151487373933fc5ef206ac9aa441ba6" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>Serial</name></member>
      <member refid="d2/d79/a00051_a0deaeef35be6fbbaa4fc81b9c15bb28e_1a0deaeef35be6fbbaa4fc81b9c15bb28e" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>Serial</name></member>
      <member refid="d2/d79/a00051_a0eb2568e2f139f2cae4d71ed9483b645_1a0eb2568e2f139f2cae4d71ed9483b645" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>Serial</name></member>
      <member refid="d2/d79/a00051_abb57cd59fb3c0076369bb3a7e96c1b25_1abb57cd59fb3c0076369bb3a7e96c1b25" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>write</name></member>
      <member refid="d2/d79/a00051_a715762bf0071de2105cf1c22a70cdd98_1a715762bf0071de2105cf1c22a70cdd98" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>write</name></member>
      <member refid="d2/d79/a00051_a53438e65e01f4655cb102d7a64aeecc9_1a53438e65e01f4655cb102d7a64aeecc9" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>write</name></member>
      <member refid="d2/d79/a00051_aebe3d484c81f83a0267a012959700372_1aebe3d484c81f83a0267a012959700372" prot="public" virt="non-virtual"><scope>mc::os::Serial</scope><name>~Serial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
