<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d2/de7/a00014" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::FrameBuffer</compoundname>
    <basecompoundref refid="d3/dfe/a00025" prot="public" virt="non-virtual">mc::gfx::Object</basecompoundref>
    <includes refid="dd/d32/a00041" local="no">Buffer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/de7/a00014_aee32d15d15704225a84465984a270ee7_1aee32d15d15704225a84465984a270ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <reimplements refid="d3/dfe/a00025_ab2fb38f2d3ec9640f61c730456538914_1ab2fb38f2d3ec9640f61c730456538914">init</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a6404eaa7e4edb031d364b166ad15df82_1a6404eaa7e4edb031d364b166ad15df82" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <reimplements refid="d3/dfe/a00025_a58c034fb6bdf87e3f0d312bd3a563e80_1a58c034fb6bdf87e3f0d312bd3a563e80">destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_ac66c5590c0d4b1d9cccb7552414ce11a_1ac66c5590c0d4b1d9cccb7552414ce11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::attachTexture</definition>
        <argsstring>(const GLenum &amp;target, const GLenum &amp;attachment, const GLuint &amp;textureID, const GLint &amp;level)</argsstring>
        <name>attachTexture</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>attachment</declname>
        </param>
        <param>
          <type>const GLuint &amp;</type>
          <declname>textureID</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a11149e3d4884c83e80828f4379848d93_1a11149e3d4884c83e80828f4379848d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::attachTexture1D</definition>
        <argsstring>(const GLenum &amp;target, const GLenum &amp;attachment, const GLenum &amp;texTarget, const GLuint &amp;textureID, const GLint &amp;level)</argsstring>
        <name>attachTexture1D</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>attachment</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>texTarget</declname>
        </param>
        <param>
          <type>const GLuint &amp;</type>
          <declname>textureID</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a47822d9f5c14b085e0527b288bab65de_1a47822d9f5c14b085e0527b288bab65de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::attachTexture2D</definition>
        <argsstring>(const GLenum &amp;target, const GLenum &amp;attachment, const GLenum &amp;texTarget, const GLuint &amp;textureID, const GLint &amp;level)</argsstring>
        <name>attachTexture2D</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>attachment</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>texTarget</declname>
        </param>
        <param>
          <type>const GLuint &amp;</type>
          <declname>textureID</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a133731106ba2c6c9356e624d98b50ca8_1a133731106ba2c6c9356e624d98b50ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::attachTextureLayer</definition>
        <argsstring>(const GLenum &amp;target, const GLenum &amp;attachment, const GLuint &amp;texture, const GLint &amp;level, const GLint &amp;layer)</argsstring>
        <name>attachTextureLayer</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>attachment</declname>
        </param>
        <param>
          <type>const GLuint &amp;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a134a6bd75a1b1da1e73e3760a65d729d_1a134a6bd75a1b1da1e73e3760a65d729d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::attachRenderbuffer</definition>
        <argsstring>(const GLenum &amp;target, const GLenum &amp;attachment, const RenderBuffer &amp;buffer)</argsstring>
        <name>attachRenderbuffer</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>attachment</declname>
        </param>
        <param>
          <type>const <ref refid="dc/d3c/a00028" kindref="compound">RenderBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a0ea0b4e1e018a2e599fc432ac6bf7606_1a0ea0b4e1e018a2e599fc432ac6bf7606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::setParameter</definition>
        <argsstring>(const GLenum &amp;paramName, const GLint &amp;value)</argsstring>
        <name>setParameter</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_aa49107301cfbb0c90986424781304adf_1aa49107301cfbb0c90986424781304adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::setDrawBuffers</definition>
        <argsstring>(const Size &amp;arrSize, const GLenum *buffers)</argsstring>
        <name>setDrawBuffers</name>
        <param>
          <type>const <ref refid="d9/da5/a00075_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>arrSize</declname>
        </param>
        <param>
          <type>const GLenum *</type>
          <declname>buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_ac3fd2dce3459a4b9ea24cb1aff17deae_1ac3fd2dce3459a4b9ea24cb1aff17deae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool mc::gfx::FrameBuffer::isCreated</definition>
        <argsstring>() const </argsstring>
        <name>isCreated</name>
        <reimplements refid="d3/dfe/a00025_ad729e7f4f11794cdfedec12fa46e2e76_1ad729e7f4f11794cdfedec12fa46e2e76">isCreated</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a1ea5631800390eb09b0ed72ee86461cc_1a1ea5631800390eb09b0ed72ee86461cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLenum</type>
        <definition>GLenum mc::gfx::FrameBuffer::checkStatus</definition>
        <argsstring>(const GLenum &amp;target)</argsstring>
        <name>checkStatus</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dfe/a00025_a9a59b47f57c7a7e83ee9d268f692cc4d_1a9a59b47f57c7a7e83ee9d268f692cc4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Object::bind</definition>
        <argsstring>() const </argsstring>
        <name>bind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dfe/a00025_af36391f915aeed8452b6f21e926932f2_1af36391f915aeed8452b6f21e926932f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Object::unbind</definition>
        <argsstring>() const </argsstring>
        <name>unbind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dfe/a00025_adcc524a5d4ce6e79e9c1893c0f935559_1adcc524a5d4ce6e79e9c1893c0f935559" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Object::getID</definition>
        <argsstring>() const </argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/de7/a00014_1a0cd48fa5f307e0c24487ffaca65b5ceb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::FrameBuffer::bindIndex</definition>
        <argsstring>(const Index &amp;id) const </argsstring>
        <name>bindIndex</name>
        <reimplements refid="d3/dfe/a00025_a45afac15d5bd595db56bad1a096befce_1a45afac15d5bd595db56bad1a096befce">bindIndex</reimplements>
        <param>
          <type>const <ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d3/dfe/a00025_a5c44ad260b3bd8a5825c434037d5f89f_1a5c44ad260b3bd8a5825c434037d5f89f" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Object::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="37" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="284">
        <label>mc::gfx::FrameBuffer</label>
        <link refid="d2/de7/a00014"/>
        <childnode refid="285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="285">
        <label>mc::gfx::Object</label>
        <link refid="d3/dfe/a00025"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="286">
        <label>mc::gfx::FrameBuffer</label>
        <link refid="d2/de7/a00014"/>
        <childnode refid="287" relation="public-inheritance">
        </childnode>
      </node>
      <node id="287">
        <label>mc::gfx::Object</label>
        <link refid="d3/dfe/a00025"/>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Buffer.h" line="119" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="119" bodyend="140"/>
    <listofallmembers>
      <member refid="d2/de7/a00014_a134a6bd75a1b1da1e73e3760a65d729d_1a134a6bd75a1b1da1e73e3760a65d729d" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>attachRenderbuffer</name></member>
      <member refid="d2/de7/a00014_ac66c5590c0d4b1d9cccb7552414ce11a_1ac66c5590c0d4b1d9cccb7552414ce11a" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>attachTexture</name></member>
      <member refid="d2/de7/a00014_a11149e3d4884c83e80828f4379848d93_1a11149e3d4884c83e80828f4379848d93" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>attachTexture1D</name></member>
      <member refid="d2/de7/a00014_a47822d9f5c14b085e0527b288bab65de_1a47822d9f5c14b085e0527b288bab65de" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>attachTexture2D</name></member>
      <member refid="d2/de7/a00014_a133731106ba2c6c9356e624d98b50ca8_1a133731106ba2c6c9356e624d98b50ca8" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>attachTextureLayer</name></member>
      <member refid="d3/dfe/a00025_a9a59b47f57c7a7e83ee9d268f692cc4d_1a9a59b47f57c7a7e83ee9d268f692cc4d" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>bind</name></member>
      <member refid="d2/de7/a00014_1a0cd48fa5f307e0c24487ffaca65b5ceb" prot="private" virt="virtual"><scope>mc::gfx::FrameBuffer</scope><name>bindIndex</name></member>
      <member refid="d2/de7/a00014_a1ea5631800390eb09b0ed72ee86461cc_1a1ea5631800390eb09b0ed72ee86461cc" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>checkStatus</name></member>
      <member refid="d2/de7/a00014_a6404eaa7e4edb031d364b166ad15df82_1a6404eaa7e4edb031d364b166ad15df82" prot="public" virt="virtual"><scope>mc::gfx::FrameBuffer</scope><name>destroy</name></member>
      <member refid="d3/dfe/a00025_adcc524a5d4ce6e79e9c1893c0f935559_1adcc524a5d4ce6e79e9c1893c0f935559" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>getID</name></member>
      <member refid="d3/dfe/a00025_a5c44ad260b3bd8a5825c434037d5f89f_1a5c44ad260b3bd8a5825c434037d5f89f" prot="protected" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>id</name></member>
      <member refid="d2/de7/a00014_aee32d15d15704225a84465984a270ee7_1aee32d15d15704225a84465984a270ee7" prot="public" virt="virtual"><scope>mc::gfx::FrameBuffer</scope><name>init</name></member>
      <member refid="d2/de7/a00014_ac3fd2dce3459a4b9ea24cb1aff17deae_1ac3fd2dce3459a4b9ea24cb1aff17deae" prot="public" virt="virtual"><scope>mc::gfx::FrameBuffer</scope><name>isCreated</name></member>
      <member refid="d2/de7/a00014_aa49107301cfbb0c90986424781304adf_1aa49107301cfbb0c90986424781304adf" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>setDrawBuffers</name></member>
      <member refid="d2/de7/a00014_a0ea0b4e1e018a2e599fc432ac6bf7606_1a0ea0b4e1e018a2e599fc432ac6bf7606" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>setParameter</name></member>
      <member refid="d3/dfe/a00025_af36391f915aeed8452b6f21e926932f2_1af36391f915aeed8452b6f21e926932f2" prot="public" virt="non-virtual"><scope>mc::gfx::FrameBuffer</scope><name>unbind</name></member>
      <member refid="d3/dfe/a00025_a4ea5dacb16804b43f4be8c2567bbd48b_1a4ea5dacb16804b43f4be8c2567bbd48b" prot="public" virt="virtual"><scope>mc::gfx::FrameBuffer</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
