<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dd/d1b/a00015" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mc::os::GraphicsContext</compoundname>
    <basecompoundref refid="da/d45/a00011" prot="public" virt="non-virtual">mc::gfx::Entity</basecompoundref>
    <derivedcompoundref refid="d6/d5b/a00026" prot="public" virt="non-virtual">mc::gfx::OpenGLContext</derivedcompoundref>
    <includes refid="d1/d22/a00057" local="no">Window.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d1b/a00015_a5bf0930980ac334749e25b018d795bca_1a5bf0930980ac334749e25b018d795bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::os::GraphicsContext::GraphicsContext</definition>
        <argsstring>()</argsstring>
        <name>GraphicsContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Window.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_af75545a821d2f12229c5ac8dd9c2e804_1af75545a821d2f12229c5ac8dd9c2e804" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::os::GraphicsContext::setUpWindow</definition>
        <argsstring>(Window *win)=0</argsstring>
        <name>setUpWindow</name>
        <reimplementedby refid="d6/d5b/a00026_a14a3a8344a8dd3701a347e0c0bc0a94f_1a14a3a8344a8dd3701a347e0c0bc0a94f">setUpWindow</reimplementedby>
        <param>
          <type><ref refid="d3/de7/a00039" kindref="compound">Window</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Window.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ad1aac84c3a7eb885dea963f933927890_1ad1aac84c3a7eb885dea963f933927890" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::os::GraphicsContext::init</definition>
        <argsstring>(Window *win)=0</argsstring>
        <name>init</name>
        <reimplementedby refid="d6/d5b/a00026_a5410cab90bdd71a580eebf43f1783962_1a5410cab90bdd71a580eebf43f1783962">init</reimplementedby>
        <param>
          <type><ref refid="d3/de7/a00039" kindref="compound">Window</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Window.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a2c0f996b9f1fd619f47ed994de9372c2_1a2c0f996b9f1fd619f47ed994de9372c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::os::GraphicsContext::render</definition>
        <argsstring>(Window *win)=0</argsstring>
        <name>render</name>
        <reimplementedby refid="d6/d5b/a00026_a0f7ef863a80a17e7413df08f57829589_1a0f7ef863a80a17e7413df08f57829589">render</reimplementedby>
        <param>
          <type><ref refid="d3/de7/a00039" kindref="compound">Window</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Window.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a4a0b5cf9cc16bfb53f6de4e5c8175997_1a4a0b5cf9cc16bfb53f6de4e5c8175997" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::os::GraphicsContext::destroy</definition>
        <argsstring>(Window *win)=0</argsstring>
        <name>destroy</name>
        <reimplementedby refid="d6/d5b/a00026_a51874930c7076ae05cc1709507085cb0_1a51874930c7076ae05cc1709507085cb0">destroy</reimplementedby>
        <param>
          <type><ref refid="d3/de7/a00039" kindref="compound">Window</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Window.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a62cfd31becef644b4dc2aa15770606ec_1a62cfd31becef644b4dc2aa15770606ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::os::GraphicsContext::update</definition>
        <argsstring>()=0</argsstring>
        <name>update</name>
        <reimplementedby refid="d6/d5b/a00026_a9adea8e8cdfb8280579f07861aeebb1e_1a9adea8e8cdfb8280579f07861aeebb1e">update</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Window.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a218b5342700073e394427b776b27659d_1a218b5342700073e394427b776b27659d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="da/dec/a00080_a86b7559895967af432c5c3db728bd0bc_1a86b7559895967af432c5c3db728bd0bc" kindref="member">System.init()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="da/d45/a00011_a11e2c30e2290cf406a864f8d66c129e4_1a11e2c30e2290cf406a864f8d66c129e4" kindref="member">customInit()</ref></computeroutput> </para><para>You should never override this function. Instead, override <computeroutput><ref refid="da/d45/a00011_a11e2c30e2290cf406a864f8d66c129e4_1a11e2c30e2290cf406a864f8d66c129e4" kindref="member">customInit()</ref></computeroutput> <simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput>ENTITY_INIT</computeroutput> is true, meaning <computeroutput><ref refid="da/d45/a00011_a218b5342700073e394427b776b27659d_1a218b5342700073e394427b776b27659d" kindref="member">init()</ref></computeroutput> has already been called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ab280eb11bbd47b9d618a41f7ba666090_1ab280eb11bbd47b9d618a41f7ba666090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="da/dec/a00080_a37d9b4e42bc96bddf835abd0bf3176bd_1a37d9b4e42bc96bddf835abd0bf3176bd" kindref="member">System.terminate()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="da/d45/a00011_a2d109385d78a2e806ae82d7258559d22_1a2d109385d78a2e806ae82d7258559d22" kindref="member">customDestroy()</ref></computeroutput>. Sets <computeroutput>ENTITY_INIT</computeroutput> to be false </para><para>You should never override this function. Instead, override <computeroutput><ref refid="da/d45/a00011_a2d109385d78a2e806ae82d7258559d22_1a2d109385d78a2e806ae82d7258559d22" kindref="member">customDestroy()</ref></computeroutput> <simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput>ENTITY_INIT</computeroutput> is false, meaning <computeroutput><ref refid="da/d45/a00011_a218b5342700073e394427b776b27659d_1a218b5342700073e394427b776b27659d" kindref="member">init()</ref></computeroutput> was not called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aa88186e09755f7b642aca83958c8e6eb_1aa88186e09755f7b642aca83958c8e6eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
<para>Should be called by a <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> when the graphical <computeroutput>Window</computeroutput> clears the frame. </para>        </briefdescription>
        <detaileddescription>
<para>You should never override this function. Instead, override <computeroutput><ref refid="da/d45/a00011_a9bcf256567a4bde045a091a68e0a21d9_1a9bcf256567a4bde045a091a68e0a21d9" kindref="member">customRender()</ref></computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;Entity*&gt;&amp; mc::gfx::Entity::getChildren</definition>
        <argsstring>() const </argsstring>
        <name>getChildren</name>
        <briefdescription>
<para>Gets all of this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref>&apos;s</computeroutput> children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an <computeroutput>std::vector</computeroutput> with all children of this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::removeChild</definition>
        <argsstring>(const Entity &amp;e)</argsstring>
        <name>removeChild</name>
        <param>
          <type>const <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Removes a child by reference. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ObjectNotFoundInArray</parametername>
</parameternamelist>
<parameterdescription>
<para>if <ref refid="da/d45/a00011_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" kindref="member">hasChild(Entity&amp;) const</ref> returns <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a child </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" kindref="member">removeChild(Index)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::removeChild</definition>
        <argsstring>(Index index)</argsstring>
        <name>removeChild</name>
        <param>
          <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a child via location. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if the index is less than 0 or greater than <ref refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild(const Entity&amp;)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::hasChild</definition>
        <argsstring>(Entity &amp;e) const </argsstring>
        <name>hasChild</name>
        <param>
          <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Checks to see if this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> contains an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> doesn&apos;t contain the referenced <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput>, <computeroutput>true</computeroutput> otherwise </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp; ) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a0dfa57638b24bc0d82d42ccb275ca87e_1a0dfa57638b24bc0d82d42ccb275ca87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::clearChildren</definition>
        <argsstring>()</argsstring>
        <name>clearChildren</name>
        <briefdescription>
<para>Removes EVERY <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> from this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" kindref="member">removeChild(Index)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild(const Entity&amp;)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::operator[]</definition>
        <argsstring>(Index i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This is different than <computeroutput><ref refid="da/d45/a00011_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild()</ref></computeroutput> because <computeroutput>operator[]</computeroutput> doesn&apos;t do bounds checking. Accessing an invalid location will result in a memory error. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a97a0a270c1d4c710ac2f4033b52dd9bd_1a97a0a270c1d4c710ac2f4033b52dd9bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>const Entity&amp; mc::gfx::Entity::operator[]</definition>
        <argsstring>(Index i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <ref refid="da/d45/a00011_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[](Index i)</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" kindref="member">getChild(Index) const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::getChild</definition>
        <argsstring>(Index i)</argsstring>
        <name>getChild</name>
        <param>
          <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Retrieves a child at a certain index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>i</computeroutput> is less than <computeroutput>0</computeroutput> or greater than <ref refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>const Entity&amp; mc::gfx::Entity::getChild</definition>
        <argsstring>(Index i) const </argsstring>
        <name>getChild</name>
        <param>
          <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <ref refid="da/d45/a00011_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Index</computeroutput> of the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>i</computeroutput> is less than <computeroutput>0</computeroutput> or greater than <ref refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mc::gfx::Entity::indexOf</definition>
        <argsstring>(const Entity &amp;e) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>const <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Finds the location of an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> in this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Location of <computeroutput>e,</computeroutput> or -1 if <computeroutput>e</computeroutput> is not a child of this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> * &gt;::iterator</type>
        <definition>std::vector&lt;Entity*&gt;::iterator mc::gfx::Entity::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Gets an iterator over this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> for enchanced for loops. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator of the first <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" kindref="member">end()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> * &gt;::iterator</type>
        <definition>std::vector&lt;Entity*&gt;::iterator mc::gfx::Entity::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Gets an iterator over this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> for enchanced for loops. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator of the last <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" kindref="member">begin()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/da5/a00075_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Entity::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Calculates the amount of children this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> has. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EntityProperties &amp;</type>
        <definition>EntityProperties&amp; mc::gfx::Entity::getProperties</definition>
        <argsstring>()</argsstring>
        <name>getProperties</name>
        <briefdescription>
<para>Retrieves the <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref>&apos;s</computeroutput> properties as a <computeroutput>ByteField</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<simplesect kind="return"><para>The current properties belonging to this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const EntityProperties &amp;</type>
        <definition>const EntityProperties&amp; mc::gfx::Entity::getProperties</definition>
        <argsstring>() const </argsstring>
        <name>getProperties</name>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <computeroutput><ref refid="da/d45/a00011_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current properties belonging to this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_af07ef60a815c87d686bf81dd92a817eb_1af07ef60a815c87d686bf81dd92a817eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setProperties</definition>
        <argsstring>(EntityProperties &amp;b)</argsstring>
        <name>setProperties</name>
        <param>
          <type>EntityProperties &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set the properties for this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>New <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> properties </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a46570a241b370527b9e8a3e0fb335248_1a46570a241b370527b9e8a3e0fb335248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::getProperty</definition>
        <argsstring>(const Byte position) const </argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="d9/da5/a00075_a7c6e1fbcd00ba27af6389a4a891788ca_1a7c6e1fbcd00ba27af6389a4a891788ca" kindref="member">Byte</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Retrieve the value of a property. </para>        </briefdescription>
        <detaileddescription>
<para>Property consants start with <computeroutput>ENTITY_</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the property based on a constant </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> or <computeroutput>false</computeroutput> based on the postition </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setProperty</definition>
        <argsstring>(const Byte position, const bool value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const <ref refid="d9/da5/a00075_a7c6e1fbcd00ba27af6389a4a891788ca_1a7c6e1fbcd00ba27af6389a4a891788ca" kindref="member">Byte</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a property to be <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput>.Property consants start with <computeroutput>ENTITY_</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the property based on a constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether it is <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ae5444c9fabdb47ce42720ef16139cb74_1ae5444c9fabdb47ce42720ef16139cb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d8c/a00035" kindref="compound">TransformMatrix</ref> &amp;</type>
        <definition>TransformMatrix&amp; mc::gfx::Entity::getTransformation</definition>
        <argsstring>()</argsstring>
        <name>getTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a200bbd6f007f227c7afe0c1afb8d0abb_1a200bbd6f007f227c7afe0c1afb8d0abb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d4/d8c/a00035" kindref="compound">TransformMatrix</ref> &amp;</type>
        <definition>const TransformMatrix&amp; mc::gfx::Entity::getTransformation</definition>
        <argsstring>() const </argsstring>
        <name>getTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a0f9b978bf306a200abca7bde5781475a_1a0f9b978bf306a200abca7bde5781475a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setTransformation</definition>
        <argsstring>(TransformMatrix &amp;trans)</argsstring>
        <name>setTransformation</name>
        <param>
          <type><ref refid="d4/d8c/a00035" kindref="compound">TransformMatrix</ref> &amp;</type>
          <declname>trans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a72c29a24e2436cdc85972a9d9f67d702_1a72c29a24e2436cdc85972a9d9f67d702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::translate</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>translate</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ae733dfe13631968460ee61fd6a3de551_1ae733dfe13631968460ee61fd6a3de551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::rotate</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>rotate</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a3197c68ec0bb4569de929bc30fff5508_1a3197c68ec0bb4569de929bc30fff5508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::scale</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> *const</type>
        <definition>Entity* const mc::gfx::Entity::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Retrieve this <computeroutput>Entitys</computeroutput> parent `Entity. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput> @return A</computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref><computeroutput>which contains</computeroutput>this` <simplesect kind="see"><para>Entity::hasChild(const Entity&amp;) const; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> *const</type>
        <definition>const Entity* const mc::gfx::Entity::getParent</definition>
        <argsstring>() const </argsstring>
        <name>getParent</name>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <computeroutput><ref refid="da/d45/a00011_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" kindref="member">getParent()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> which contains <computeroutput>this</computeroutput> </para></simplesect>
<simplesect kind="see"><para>Entity::hasChild(const Entity&amp;) const; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aff435e798a2cb43bd5d04d79f0d9a542_1aff435e798a2cb43bd5d04d79f0d9a542" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::hasParent</definition>
        <argsstring>() const </argsstring>
        <name>hasParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addChild</definition>
        <argsstring>(Entity &amp;e)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a00d40394078cb8f1abc7461bad968fb3_1a00d40394078cb8f1abc7461bad968fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::kill</definition>
        <argsstring>()</argsstring>
        <name>kill</name>
        <briefdescription>
<para>Automatically called when <computeroutput>ENTITY_PROPERTY_DEAD</computeroutput> is true. </para>        </briefdescription>
        <detaileddescription>
<para>Removes this entity from it&apos;s parent, and calls it&apos;s <computeroutput><ref refid="da/d45/a00011_ab280eb11bbd47b9d618a41f7ba666090_1ab280eb11bbd47b9d618a41f7ba666090" kindref="member">destroy()</ref></computeroutput> method. <simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" kindref="member">getParent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addComponent</definition>
        <argsstring>(Component &amp;action)</argsstring>
        <name>addComponent</name>
        <param>
          <type>Component &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ac0acc4ad4d83a961e77dad1c4bf97c7c_1ac0acc4ad4d83a961e77dad1c4bf97c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; Component * &gt;</type>
        <definition>std::vector&lt;Component*&gt; mc::gfx::Entity::getComponents</definition>
        <argsstring>()</argsstring>
        <name>getComponents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a1873ddf0dbe7421dd193906c46a15a22_1a1873ddf0dbe7421dd193906c46a15a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a5e1ebb934e48d9a0e758ce46543ac913_1a5e1ebb934e48d9a0e758ce46543ac913" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getWidth</definition>
        <argsstring>() const </argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ad7bb754e9ada2401d234d49ba85463ad_1ad7bb754e9ada2401d234d49ba85463ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setWidth</definition>
        <argsstring>(const float &amp;s)</argsstring>
        <name>setWidth</name>
        <param>
          <type>const float &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a48ec951abc73bb80af1f3a474df33d93_1a48ec951abc73bb80af1f3a474df33d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aa0aa51eeaa5f34ba09ed3e544b96645c_1aa0aa51eeaa5f34ba09ed3e544b96645c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getHeight</definition>
        <argsstring>() const </argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a1d9f4a5586e05cf2315183be5062e84a_1a1d9f4a5586e05cf2315183be5062e84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setHeight</definition>
        <argsstring>(const float &amp;s)</argsstring>
        <name>setHeight</name>
        <param>
          <type>const float &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a5ed09eb98c83fa88f10892eb969cfb51_1a5ed09eb98c83fa88f10892eb969cfb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a8be1810d8c9150ba4b56dc4f419d0b5b_1a8be1810d8c9150ba4b56dc4f419d0b5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getX</definition>
        <argsstring>() const </argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ab1227baaa1d429be4d648e782dec6269_1ab1227baaa1d429be4d648e782dec6269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setX</definition>
        <argsstring>(const float &amp;newX)</argsstring>
        <name>setX</name>
        <param>
          <type>const float &amp;</type>
          <declname>newX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ad8d0322ec7c44e409987cd891b9e37f8_1ad8d0322ec7c44e409987cd891b9e37f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a8e1622c328280ccf6d80bae0a80e2a99_1a8e1622c328280ccf6d80bae0a80e2a99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getY</definition>
        <argsstring>() const </argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a9339119f35be0f3147b994e48bf1d2d7_1a9339119f35be0f3147b994e48bf1d2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setY</definition>
        <argsstring>(const float &amp;newY)</argsstring>
        <name>setY</name>
        <param>
          <type>const float &amp;</type>
          <declname>newY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will make this <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="db/df8/a00076_a2ec6f566878cc5fca6fff76415cb7a5c_1a2ec6f566878cc5fca6fff76415cb7a5ca85171527d16d1434a550ee09a76a35e2" kindref="member">ENTITY_DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ac852ffe53012be7473f2cc211fe404da_1ac852ffe53012be7473f2cc211fe404da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::operator==</definition>
        <argsstring>(Entity &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if 2 <computeroutput>Entities</computeroutput> have the same children, parent, and properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>An <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> compare this one to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if they are equal </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" kindref="member">getParent() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" kindref="member">getChildren() const</ref> </para></simplesect>
<simplesect kind="see"><para>operator!= </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a4ff8da40d7bf976870515c5da7dbe3ec_1a4ff8da40d7bf976870515c5da7dbe3ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::operator!=</definition>
        <argsstring>(Entity &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" kindref="member">Entity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if 2 <computeroutput>Entities</computeroutput> don&apos;t have the same children, parent, and properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>An <computeroutput><ref refid="da/d45/a00011" kindref="compound">Entity</ref></computeroutput> compare this one to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if they are equal </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" kindref="member">getParent() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="da/d45/a00011_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" kindref="member">getChildren() const</ref> </para></simplesect>
<simplesect kind="see"><para>operator== </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="427" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="da/d45/a00011_a2f423919fa564ce852cb641b74f21d87_1a2f423919fa564ce852cb641b74f21d87" prot="protected" static="no" mutable="no">
        <type><ref refid="d4/d8c/a00035" kindref="compound">TransformMatrix</ref></type>
        <definition>TransformMatrix mc::gfx::Entity::transformation</definition>
        <argsstring></argsstring>
        <name>transformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="429" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="da/d45/a00011_a1d304c47e4677490b134b74e641a3747_1a1d304c47e4677490b134b74e641a3747" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::customUpdate</definition>
        <argsstring>()=0</argsstring>
        <name>customUpdate</name>
        <reimplementedby refid="d1/d2b/a00018_a76b8add66114d110f9d643b671a8bb72_1a76b8add66114d110f9d643b671a8bb72">customUpdate</reimplementedby>
        <reimplementedby refid="d6/d5b/a00026_1a335a9a5ccd575909584764a053ce1df9">customUpdate</reimplementedby>
        <reimplementedby refid="d4/d51/a00017_a46defb7906126166af5c82bbeb0286b4_1a46defb7906126166af5c82bbeb0286b4">customUpdate</reimplementedby>
        <reimplementedby refid="d4/dee/a00008_a17ce19bcef2793b19198f1c2820f2353_1a17ce19bcef2793b19198f1c2820f2353">customUpdate</reimplementedby>
        <briefdescription>
<para>When <computeroutput><ref refid="da/d45/a00011_aa25f9fe4426e7135fbd01f8282d04023_1aa25f9fe4426e7135fbd01f8282d04023" kindref="member">Entity.update()</ref></computeroutput> is called, <computeroutput><ref refid="da/d45/a00011_a1d304c47e4677490b134b74e641a3747_1a1d304c47e4677490b134b74e641a3747" kindref="member">customUpdate()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="da/dec/a00080_a90e14e44eb5a6019c913a6a197deb4a0_1a90e14e44eb5a6019c913a6a197deb4a0" kindref="member">System::update()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a11e2c30e2290cf406a864f8d66c129e4_1a11e2c30e2290cf406a864f8d66c129e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::customInit</definition>
        <argsstring>()=0</argsstring>
        <name>customInit</name>
        <reimplementedby refid="d1/d2b/a00018_add8b84ee4eae2a7e3b4f319225c4170b_1add8b84ee4eae2a7e3b4f319225c4170b">customInit</reimplementedby>
        <reimplementedby refid="d6/d5b/a00026_1aad520a0f089343b0881493257f99ade4">customInit</reimplementedby>
        <reimplementedby refid="d4/d51/a00017_a2c180f5928c12a904407fd08fa2e86f7_1a2c180f5928c12a904407fd08fa2e86f7">customInit</reimplementedby>
        <reimplementedby refid="d4/dee/a00008_ae4f2d79f7badfc17b2ef9f82c8dd5749_1ae4f2d79f7badfc17b2ef9f82c8dd5749">customInit</reimplementedby>
        <briefdescription>
<para>When <computeroutput><ref refid="da/d45/a00011_a218b5342700073e394427b776b27659d_1a218b5342700073e394427b776b27659d" kindref="member">Entity.init()</ref></computeroutput> is called, <computeroutput><ref refid="da/d45/a00011_a11e2c30e2290cf406a864f8d66c129e4_1a11e2c30e2290cf406a864f8d66c129e4" kindref="member">customInit()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="da/dec/a00080_a86b7559895967af432c5c3db728bd0bc_1a86b7559895967af432c5c3db728bd0bc" kindref="member">System::init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a2d109385d78a2e806ae82d7258559d22_1a2d109385d78a2e806ae82d7258559d22" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::customDestroy</definition>
        <argsstring>()=0</argsstring>
        <name>customDestroy</name>
        <reimplementedby refid="d1/d2b/a00018_ab14b2ae36921244bb37ce97b1b8bfbf7_1ab14b2ae36921244bb37ce97b1b8bfbf7">customDestroy</reimplementedby>
        <reimplementedby refid="d6/d5b/a00026_1a6fb6f835bf0bc0b94e06abc980480b29">customDestroy</reimplementedby>
        <reimplementedby refid="d4/d51/a00017_a303eb5ece295c7c53055024b6e59e048_1a303eb5ece295c7c53055024b6e59e048">customDestroy</reimplementedby>
        <reimplementedby refid="d4/dee/a00008_af7e6ca3e1a4997ef191d26bc5b4ba7ad_1af7e6ca3e1a4997ef191d26bc5b4ba7ad">customDestroy</reimplementedby>
        <briefdescription>
<para>When <computeroutput><ref refid="da/d45/a00011_ab280eb11bbd47b9d618a41f7ba666090_1ab280eb11bbd47b9d618a41f7ba666090" kindref="member">Entity.destroy()</ref></computeroutput> is called, <computeroutput><ref refid="da/d45/a00011_a2d109385d78a2e806ae82d7258559d22_1a2d109385d78a2e806ae82d7258559d22" kindref="member">customDestroy()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="da/dec/a00080_a37d9b4e42bc96bddf835abd0bf3176bd_1a37d9b4e42bc96bddf835abd0bf3176bd" kindref="member">System::terminate()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a9bcf256567a4bde045a091a68e0a21d9_1a9bcf256567a4bde045a091a68e0a21d9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::customRender</definition>
        <argsstring>()=0</argsstring>
        <name>customRender</name>
        <reimplementedby refid="d1/d2b/a00018_af9e071a93ed55747fbacbd1fd13ae362_1af9e071a93ed55747fbacbd1fd13ae362">customRender</reimplementedby>
        <reimplementedby refid="d6/d5b/a00026_1a433c26facaec0af21fd937ead9785575">customRender</reimplementedby>
        <reimplementedby refid="d4/d51/a00017_a5d3196220b50e47aad5ed8a89b8a00cd_1a5d3196220b50e47aad5ed8a89b8a00cd">customRender</reimplementedby>
        <reimplementedby refid="d4/dee/a00008_ac4f5504d9c1b13da90c027f3525ec4bb_1ac4f5504d9c1b13da90c027f3525ec4bb">customRender</reimplementedby>
        <briefdescription>
<para>When <computeroutput><ref refid="da/d45/a00011_aa88186e09755f7b642aca83958c8e6eb_1aa88186e09755f7b642aca83958c8e6eb" kindref="member">Entity.render()</ref></computeroutput> is called, <computeroutput><ref refid="da/d45/a00011_a9bcf256567a4bde045a091a68e0a21d9_1a9bcf256567a4bde045a091a68e0a21d9" kindref="member">customRender()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="450" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="288">
        <label>mc::os::GraphicsContext</label>
        <link refid="dd/d1b/a00015"/>
        <childnode refid="289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="289">
        <label>mc::gfx::Entity</label>
        <link refid="da/d45/a00011"/>
      </node>
      <node id="290">
        <label>mc::gfx::OpenGLContext</label>
        <link refid="d6/d5b/a00026"/>
        <childnode refid="288" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="297">
        <label>T</label>
      </node>
      <node id="296">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="297" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="291">
        <label>mc::os::GraphicsContext</label>
        <link refid="dd/d1b/a00015"/>
        <childnode refid="292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="292">
        <label>mc::gfx::Entity</label>
        <link refid="da/d45/a00011"/>
        <childnode refid="293" relation="usage">
          <edgelabel>transformation</edgelabel>
        </childnode>
      </node>
      <node id="294">
        <label>mc::Vector&lt; float, 3 &gt;</label>
        <link refid="d1/dc6/a00037"/>
        <childnode refid="295" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="298" relation="template-instance">
          <edgelabel>&lt; float, 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="299">
        <label>std::array&lt; T, N &gt;</label>
        <childnode refid="297" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="296" relation="template-instance">
          <edgelabel>&lt; T, N &gt;</edgelabel>
        </childnode>
      </node>
      <node id="293">
        <label>mc::TransformMatrix</label>
        <link refid="d4/d8c/a00035"/>
        <childnode refid="294" relation="usage">
          <edgelabel>rotation</edgelabel>
          <edgelabel>scaler</edgelabel>
          <edgelabel>translation</edgelabel>
        </childnode>
      </node>
      <node id="298">
        <label>mc::Vector&lt; T, N &gt;</label>
        <link refid="d1/dc6/a00037"/>
        <childnode refid="299" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
      </node>
      <node id="295">
        <label>std::array&lt; float, N &gt;</label>
        <childnode refid="296" relation="template-instance">
          <edgelabel>&lt; float, N &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Window.h" line="59" column="1" bodyfile="include/MACE/Graphics/Window.h" bodystart="59" bodyend="68"/>
    <listofallmembers>
      <member refid="da/d45/a00011_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>addChild</name></member>
      <member refid="da/d45/a00011_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>addComponent</name></member>
      <member refid="da/d45/a00011_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>begin</name></member>
      <member refid="da/d45/a00011_a0dfa57638b24bc0d82d42ccb275ca87e_1a0dfa57638b24bc0d82d42ccb275ca87e" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>clearChildren</name></member>
      <member refid="da/d45/a00011_a2d109385d78a2e806ae82d7258559d22_1a2d109385d78a2e806ae82d7258559d22" prot="protected" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>customDestroy</name></member>
      <member refid="da/d45/a00011_a11e2c30e2290cf406a864f8d66c129e4_1a11e2c30e2290cf406a864f8d66c129e4" prot="protected" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>customInit</name></member>
      <member refid="da/d45/a00011_a9bcf256567a4bde045a091a68e0a21d9_1a9bcf256567a4bde045a091a68e0a21d9" prot="protected" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>customRender</name></member>
      <member refid="da/d45/a00011_a1d304c47e4677490b134b74e641a3747_1a1d304c47e4677490b134b74e641a3747" prot="protected" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>customUpdate</name></member>
      <member refid="dd/d1b/a00015_a4a0b5cf9cc16bfb53f6de4e5c8175997_1a4a0b5cf9cc16bfb53f6de4e5c8175997" prot="public" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>destroy</name></member>
      <member refid="da/d45/a00011_ab280eb11bbd47b9d618a41f7ba666090_1ab280eb11bbd47b9d618a41f7ba666090" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::os::GraphicsContext</scope><name>destroy</name></member>
      <member refid="da/d45/a00011_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>end</name></member>
      <member refid="da/d45/a00011_aa96ec81f15f6cf4255cb527f71382bcb_1aa96ec81f15f6cf4255cb527f71382bcb" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>Entity</name></member>
      <member refid="da/d45/a00011_a32426c19a0ae8b0154d4db0cc965061a_1a32426c19a0ae8b0154d4db0cc965061a" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>Entity</name></member>
      <member refid="da/d45/a00011_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getChild</name></member>
      <member refid="da/d45/a00011_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getChild</name></member>
      <member refid="da/d45/a00011_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getChildren</name></member>
      <member refid="da/d45/a00011_ac0acc4ad4d83a961e77dad1c4bf97c7c_1ac0acc4ad4d83a961e77dad1c4bf97c7c" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getComponents</name></member>
      <member refid="da/d45/a00011_a48ec951abc73bb80af1f3a474df33d93_1a48ec951abc73bb80af1f3a474df33d93" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getHeight</name></member>
      <member refid="da/d45/a00011_aa0aa51eeaa5f34ba09ed3e544b96645c_1aa0aa51eeaa5f34ba09ed3e544b96645c" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getHeight</name></member>
      <member refid="da/d45/a00011_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getParent</name></member>
      <member refid="da/d45/a00011_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getParent</name></member>
      <member refid="da/d45/a00011_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getProperties</name></member>
      <member refid="da/d45/a00011_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getProperties</name></member>
      <member refid="da/d45/a00011_a46570a241b370527b9e8a3e0fb335248_1a46570a241b370527b9e8a3e0fb335248" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getProperty</name></member>
      <member refid="da/d45/a00011_ae5444c9fabdb47ce42720ef16139cb74_1ae5444c9fabdb47ce42720ef16139cb74" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getTransformation</name></member>
      <member refid="da/d45/a00011_a200bbd6f007f227c7afe0c1afb8d0abb_1a200bbd6f007f227c7afe0c1afb8d0abb" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getTransformation</name></member>
      <member refid="da/d45/a00011_a1873ddf0dbe7421dd193906c46a15a22_1a1873ddf0dbe7421dd193906c46a15a22" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getWidth</name></member>
      <member refid="da/d45/a00011_a5e1ebb934e48d9a0e758ce46543ac913_1a5e1ebb934e48d9a0e758ce46543ac913" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getWidth</name></member>
      <member refid="da/d45/a00011_a5ed09eb98c83fa88f10892eb969cfb51_1a5ed09eb98c83fa88f10892eb969cfb51" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getX</name></member>
      <member refid="da/d45/a00011_a8be1810d8c9150ba4b56dc4f419d0b5b_1a8be1810d8c9150ba4b56dc4f419d0b5b" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getX</name></member>
      <member refid="da/d45/a00011_ad8d0322ec7c44e409987cd891b9e37f8_1ad8d0322ec7c44e409987cd891b9e37f8" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getY</name></member>
      <member refid="da/d45/a00011_a8e1622c328280ccf6d80bae0a80e2a99_1a8e1622c328280ccf6d80bae0a80e2a99" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>getY</name></member>
      <member refid="dd/d1b/a00015_a5bf0930980ac334749e25b018d795bca_1a5bf0930980ac334749e25b018d795bca" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>GraphicsContext</name></member>
      <member refid="da/d45/a00011_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>hasChild</name></member>
      <member refid="da/d45/a00011_aff435e798a2cb43bd5d04d79f0d9a542_1aff435e798a2cb43bd5d04d79f0d9a542" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>hasParent</name></member>
      <member refid="da/d45/a00011_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>indexOf</name></member>
      <member refid="dd/d1b/a00015_ad1aac84c3a7eb885dea963f933927890_1ad1aac84c3a7eb885dea963f933927890" prot="public" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>init</name></member>
      <member refid="da/d45/a00011_a218b5342700073e394427b776b27659d_1a218b5342700073e394427b776b27659d" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::os::GraphicsContext</scope><name>init</name></member>
      <member refid="da/d45/a00011_a00d40394078cb8f1abc7461bad968fb3_1a00d40394078cb8f1abc7461bad968fb3" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>kill</name></member>
      <member refid="da/d45/a00011_a4ff8da40d7bf976870515c5da7dbe3ec_1a4ff8da40d7bf976870515c5da7dbe3ec" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>operator!=</name></member>
      <member refid="da/d45/a00011_ac852ffe53012be7473f2cc211fe404da_1ac852ffe53012be7473f2cc211fe404da" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>operator==</name></member>
      <member refid="da/d45/a00011_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>operator[]</name></member>
      <member refid="da/d45/a00011_a97a0a270c1d4c710ac2f4033b52dd9bd_1a97a0a270c1d4c710ac2f4033b52dd9bd" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>operator[]</name></member>
      <member refid="da/d45/a00011_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>removeChild</name></member>
      <member refid="da/d45/a00011_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>removeChild</name></member>
      <member refid="dd/d1b/a00015_a2c0f996b9f1fd619f47ed994de9372c2_1a2c0f996b9f1fd619f47ed994de9372c2" prot="public" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>render</name></member>
      <member refid="da/d45/a00011_aa88186e09755f7b642aca83958c8e6eb_1aa88186e09755f7b642aca83958c8e6eb" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::os::GraphicsContext</scope><name>render</name></member>
      <member refid="da/d45/a00011_ae733dfe13631968460ee61fd6a3de551_1ae733dfe13631968460ee61fd6a3de551" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>rotate</name></member>
      <member refid="da/d45/a00011_a3197c68ec0bb4569de929bc30fff5508_1a3197c68ec0bb4569de929bc30fff5508" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>scale</name></member>
      <member refid="da/d45/a00011_a1d9f4a5586e05cf2315183be5062e84a_1a1d9f4a5586e05cf2315183be5062e84a" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setHeight</name></member>
      <member refid="da/d45/a00011_af07ef60a815c87d686bf81dd92a817eb_1af07ef60a815c87d686bf81dd92a817eb" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setProperties</name></member>
      <member refid="da/d45/a00011_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setProperty</name></member>
      <member refid="da/d45/a00011_a0f9b978bf306a200abca7bde5781475a_1a0f9b978bf306a200abca7bde5781475a" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setTransformation</name></member>
      <member refid="dd/d1b/a00015_af75545a821d2f12229c5ac8dd9c2e804_1af75545a821d2f12229c5ac8dd9c2e804" prot="public" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>setUpWindow</name></member>
      <member refid="da/d45/a00011_ad7bb754e9ada2401d234d49ba85463ad_1ad7bb754e9ada2401d234d49ba85463ad" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setWidth</name></member>
      <member refid="da/d45/a00011_ab1227baaa1d429be4d648e782dec6269_1ab1227baaa1d429be4d648e782dec6269" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setX</name></member>
      <member refid="da/d45/a00011_a9339119f35be0f3147b994e48bf1d2d7_1a9339119f35be0f3147b994e48bf1d2d7" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>setY</name></member>
      <member refid="da/d45/a00011_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>size</name></member>
      <member refid="da/d45/a00011_a2f423919fa564ce852cb641b74f21d87_1a2f423919fa564ce852cb641b74f21d87" prot="protected" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>transformation</name></member>
      <member refid="da/d45/a00011_a72c29a24e2436cdc85972a9d9f67d702_1a72c29a24e2436cdc85972a9d9f67d702" prot="public" virt="non-virtual"><scope>mc::os::GraphicsContext</scope><name>translate</name></member>
      <member refid="dd/d1b/a00015_a62cfd31becef644b4dc2aa15770606ec_1a62cfd31becef644b4dc2aa15770606ec" prot="public" virt="pure-virtual"><scope>mc::os::GraphicsContext</scope><name>update</name></member>
      <member refid="da/d45/a00011_a0eb56cd52c1f6caceaa1858a71d504c5_1a0eb56cd52c1f6caceaa1858a71d504c5" prot="public" virt="virtual"><scope>mc::os::GraphicsContext</scope><name>~Entity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
