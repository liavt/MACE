<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d4/d98/a00120" kind="file" language="C++">
    <compoundname>Vector.h</compoundname>
    <includes refid="d1/d51/a00079" local="no">MACE/Core/Constants.h</includes>
    <includes refid="d4/d81/a00110" local="no">MACE/Utility/Math.h</includes>
    <includes local="no">array</includes>
    <includes local="no">string</includes>
    <includes local="no">ostream</includes>
    <includes local="no">initializer_list</includes>
    <includedby refid="dd/d6d/a00111" local="no">include/MACE/Utility/Matrix.h</includedby>
    <includedby refid="d4/d81/a00110" local="no">include/MACE/Utility/Math.h</includedby>
    <includedby refid="d1/d1e/a00087" local="no">include/MACE/Graphics/OGL.h</includedby>
    <includedby refid="df/d6a/a00119" local="no">include/MACE/Utility/Utility.h</includedby>
    <includedby refid="d3/d00/a00113" local="no">include/MACE/Utility/MatrixTypes.h</includedby>
    <incdepgraph>
      <node id="512">
        <label>cstdint</label>
      </node>
      <node id="513">
        <label>stdexcept</label>
      </node>
      <node id="516">
        <label>string</label>
      </node>
      <node id="517">
        <label>ostream</label>
      </node>
      <node id="509">
        <label>include/MACE/Utility/Vector.h</label>
        <link refid="Vector.h"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>MACE/Configure.h</label>
      </node>
      <node id="515">
        <label>array</label>
      </node>
      <node id="514">
        <label>MACE/Utility/Math.h</label>
        <link refid="d4/d81/a00110_source"/>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>MACE/Core/Constants.h</label>
        <link refid="d1/d51/a00079_source"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="518">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="529">
        <label>include/MACE/Utility/Utility.h</label>
        <link refid="df/d6a/a00119_source"/>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="528">
        <label>include/MACE/Graphics/Window.h</label>
        <link refid="d0/dc2/a00104_source"/>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
      </node>
      <node id="525">
        <label>include/MACE/MACE.h</label>
        <link refid="d3/d32/a00105_source"/>
      </node>
      <node id="527">
        <label>include/MACE/Graphics/Renderer.h</label>
        <link refid="db/ddf/a00088_source"/>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="520">
        <label>include/MACE/Utility/Matrix.h</label>
        <link refid="dd/d6d/a00111_source"/>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>include/MACE/Graphics/Graphics.h</label>
        <link refid="da/d2a/a00086_source"/>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>include/MACE/Utility/MatrixTypes.h</label>
        <link refid="d3/d00/a00113_source"/>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>include/MACE/Utility/Vector.h</label>
        <link refid="Vector.h"/>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="523">
        <label>include/MACE/Graphics/Components.h</label>
        <link refid="d2/d1f/a00083_source"/>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="532">
        <label>include/MACE/Utility/Math.h</label>
        <link refid="d4/d81/a00110_source"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="526">
        <label>include/MACE/Graphics/Entity2D.h</label>
        <link refid="df/d13/a00085_source"/>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>include/MACE/Utility/Transform.h</label>
        <link refid="d8/d87/a00118_source"/>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="530">
        <label>include/MACE/Graphics/OGL.h</label>
        <link refid="d1/d1e/a00087_source"/>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="522">
        <label>include/MACE/Graphics/Entity.h</label>
        <link refid="df/d5d/a00084_source"/>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/da5/a00075" prot="public">mc::Vector</innerclass>
    <innernamespace refid="da/d72/a00124">mc</innernamespace>
    <innernamespace refid="db/d57/a00112">mc::math</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d4/d98/a00120_a01862430afbcd2cdf92583dcb2b8dda2_1a01862430afbcd2cdf92583dcb2b8dda2" prot="public" static="no">
        <name>MACE_UTILITY_VECTOR_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Vector.h" line="12" column="9" bodyfile="include/MACE/Utility/Vector.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Copyright<sp/>(c)<sp/>2016<sp/>Liav<sp/>Turkia</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MACE_UTILITY_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACE_UTILITY_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;MACE/Core/Constants.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;MACE/Utility/Math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment">the<sp/>fact<sp/>that<sp/>vectors<sp/>are<sp/>templated<sp/>maeans<sp/>that<sp/>this<sp/>cant<sp/>have<sp/>a<sp/>cpp<sp/>file<sp/>correspondign<sp/>to<sp/>it.<sp/>because<sp/>of<sp/>that,<sp/>this<sp/>file<sp/>has<sp/>HORRIBLE<sp/>compile<sp/>times.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">maybe<sp/>i<sp/>will<sp/>fix<sp/>it<sp/>later</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d72/a00124" kindref="compound">mc</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="89" refid="d9/da5/a00075" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94" refid="d9/da5/a00075_a7c2fa3ae75ebb6d155aa3e3aa140ce09_1a7c2fa3ae75ebb6d155aa3e3aa140ce09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a7c2fa3ae75ebb6d155aa3e3aa140ce09_1a7c2fa3ae75ebb6d155aa3e3aa140ce09" kindref="member">Vector</ref>()<sp/>:<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Vector&apos;s<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="d9/da5/a00075_a417fb70d18a6f7c59b42c451dd396189_1a417fb70d18a6f7c59b42c451dd396189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a417fb70d18a6f7c59b42c451dd396189_1a417fb70d18a6f7c59b42c451dd396189" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>arr[N])<sp/>:<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>()</highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>initialize<sp/>the<sp/>array<sp/>first,<sp/>or<sp/>else<sp/>we<sp/>will<sp/>try<sp/>to<sp/>access<sp/>an<sp/>empty<sp/>memory<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d9/da5/a00075_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>(arr);</highlight><highlight class="comment">//this<sp/>doesnt<sp/>create<sp/>a<sp/>brand<sp/>new<sp/>std::array,<sp/>it<sp/>merely<sp/>fills<sp/>the<sp/>existing<sp/>one<sp/>with<sp/>new<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="d9/da5/a00075_a417ea1abf7c631482d80c04b05003bb2_1a417ea1abf7c631482d80c04b05003bb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a417ea1abf7c631482d80c04b05003bb2_1a417ea1abf7c631482d80c04b05003bb2" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;T,<sp/>N&gt;&amp;<sp/>contents)<sp/>:<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i]<sp/>=<sp/>contents[i];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="d9/da5/a00075_ad81a516cd25fe7e71ae9a1a01c8e74c5_1ad81a516cd25fe7e71ae9a1a01c8e74c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ad81a516cd25fe7e71ae9a1a01c8e74c5_1ad81a516cd25fe7e71ae9a1a01c8e74c5" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;T&gt;<sp/>args)<sp/>:<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>()<sp/>{</highlight><highlight class="comment">//this<sp/>is<sp/>for<sp/>aggregate<sp/>initializaition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>args.size()<sp/>!=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IndexOutOfBoundsError(</highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>arguments<sp/>MUST<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>array.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elem<sp/>:<sp/>args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[counter]<sp/>=<sp/>elem;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counter;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="d9/da5/a00075_a9f2fe50f9873007c05fe0bee3f5def76_1a9f2fe50f9873007c05fe0bee3f5def76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a9f2fe50f9873007c05fe0bee3f5def76_1a9f2fe50f9873007c05fe0bee3f5def76" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N - 1&gt;</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>last)<sp/>:<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N<sp/>-<sp/>1;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i]<sp/>=<sp/>v[i];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[N<sp/>-<sp/>1]<sp/>=<sp/>last;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="d9/da5/a00075_a9cd50db0b1a697ff4368a1072e99182d_1a9cd50db0b1a697ff4368a1072e99182d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a9cd50db0b1a697ff4368a1072e99182d_1a9cd50db0b1a697ff4368a1072e99182d" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i]<sp/>=<sp/>obj[i];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="d9/da5/a00075_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array<sp/>&lt;<sp/>T,<sp/>N&gt;&amp;<sp/><ref refid="d9/da5/a00075_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="d9/da5/a00075_aac3af5465ade1ef1c7b41b579fb6099e_1aac3af5465ade1ef1c7b41b579fb6099e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array<sp/>&lt;<sp/>T,<sp/>N&gt;&amp;<sp/><ref refid="d9/da5/a00075_aac3af5465ade1ef1c7b41b579fb6099e_1aac3af5465ade1ef1c7b41b579fb6099e" kindref="member">getContents</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="179" refid="d9/da5/a00075_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;T,<sp/>N&gt;<sp/>contents)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref><sp/>=<sp/>contents;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="186" refid="d9/da5/a00075_a57b55a629453b1d1e80d81c56269e833_1a57b55a629453b1d1e80d81c56269e833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a57b55a629453b1d1e80d81c56269e833_1a57b55a629453b1d1e80d81c56269e833" kindref="member">setContents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>arr[N])<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(i,<sp/>arr[i]);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="d9/da5/a00075_a6f08e4cabe236a4f317bc2b0f8f3d96c_1a6f08e4cabe236a4f317bc2b0f8f3d96c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref><sp/><ref refid="d9/da5/a00075_a6f08e4cabe236a4f317bc2b0f8f3d96c_1a6f08e4cabe236a4f317bc2b0f8f3d96c" kindref="member">size</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="d9/da5/a00075_a1cb61e23c56abeb0b1d4c1a8b569e831_1a1cb61e23c56abeb0b1d4c1a8b569e831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="d9/da5/a00075_a1cb61e23c56abeb0b1d4c1a8b569e831_1a1cb61e23c56abeb0b1d4c1a8b569e831" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="d9/da5/a00075_a687abf0f653f139d7734e7e8f431d0a7_1a687abf0f653f139d7734e7e8f431d0a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="d9/da5/a00075_a687abf0f653f139d7734e7e8f431d0a7_1a687abf0f653f139d7734e7e8f431d0a7" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="d9/da5/a00075_a728eef3a0e46669e5c7be8792a8b7b26_1a728eef3a0e46669e5c7be8792a8b7b26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="d9/da5/a00075_a728eef3a0e46669e5c7be8792a8b7b26_1a728eef3a0e46669e5c7be8792a8b7b26" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref><sp/>+<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>(N<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="d9/da5/a00075_a678647510fc11cff7e6bdb763770c3cd_1a678647510fc11cff7e6bdb763770c3cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="d9/da5/a00075_a678647510fc11cff7e6bdb763770c3cd_1a678647510fc11cff7e6bdb763770c3cd" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref><sp/>+<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>(N<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="d9/da5/a00075_a699b2e331ade356257fb185280019b87_1a699b2e331ade356257fb185280019b87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>&gt;=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IndexOutOfBoundsError(std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>of<sp/>this<sp/>vector,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(N)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236" refid="d9/da5/a00075_a7595892f896b87fbb58d2c36be3389a8_1a7595892f896b87fbb58d2c36be3389a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>&gt;=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IndexOutOfBoundsError(std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>of<sp/>this<sp/>vector,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(N)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>.at(i);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248" refid="d9/da5/a00075_a4e214d776fd7b7e4b163c0ebb23ec3c4_1a4e214d776fd7b7e4b163c0ebb23ec3c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>position,<sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>position<sp/>&gt;=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IndexOutOfBoundsError(std::to_string(position)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>of<sp/>this<sp/>vector,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(N)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[position]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="d9/da5/a00075_abb14d1d219fbd5cc3c9a6c50e4334986_1abb14d1d219fbd5cc3c9a6c50e4334986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="d9/da5/a00075_abb14d1d219fbd5cc3c9a6c50e4334986_1abb14d1d219fbd5cc3c9a6c50e4334986" kindref="member">flatten</ref>(T<sp/>arr[N])</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i]<sp/>=<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arr;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 1&gt;</ref><sp/><ref refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" kindref="member">x</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[0]<sp/>};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="d9/da5/a00075_a673cc1fbb20b74e1c873e77cc54889f5_1a673cc1fbb20b74e1c873e77cc54889f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 1&gt;</ref><sp/><ref refid="d9/da5/a00075_a673cc1fbb20b74e1c873e77cc54889f5_1a673cc1fbb20b74e1c873e77cc54889f5" kindref="member">y</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&gt;<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>y(),<sp/>you<sp/>must<sp/>have<sp/>a<sp/>Vector<sp/>with<sp/>at<sp/>least<sp/>2<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[1]<sp/>};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="d9/da5/a00075_ab9926b56accea64b6b033712888fec56_1ab9926b56accea64b6b033712888fec56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 1&gt;</ref><sp/><ref refid="d9/da5/a00075_ab9926b56accea64b6b033712888fec56_1ab9926b56accea64b6b033712888fec56" kindref="member">z</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&gt;<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>z(),<sp/>you<sp/>must<sp/>have<sp/>a<sp/>Vector<sp/>with<sp/>at<sp/>least<sp/>3<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[2]<sp/>};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="d9/da5/a00075_a55f97b148e33cadd1a577aa3e9c132a9_1a55f97b148e33cadd1a577aa3e9c132a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 1&gt;</ref><sp/><ref refid="d9/da5/a00075_a55f97b148e33cadd1a577aa3e9c132a9_1a55f97b148e33cadd1a577aa3e9c132a9" kindref="member">w</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&gt;<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>w(),<sp/>you<sp/>must<sp/>have<sp/>a<sp/>Vector<sp/>with<sp/>at<sp/>least<sp/>4<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[3]<sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="d9/da5/a00075_ac7798d8afd7ef39232120883e62208f0_1ac7798d8afd7ef39232120883e62208f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/><ref refid="d9/da5/a00075_ac7798d8afd7ef39232120883e62208f0_1ac7798d8afd7ef39232120883e62208f0" kindref="member">xy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&gt;<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>xy(),<sp/>you<sp/>must<sp/>have<sp/>a<sp/>Vector<sp/>with<sp/>at<sp/>least<sp/>2<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[0],<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[1]<sp/>};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="d9/da5/a00075_a0ec930835d4a5cd53406c5d0f7c61ee5_1a0ec930835d4a5cd53406c5d0f7c61ee5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/><ref refid="d9/da5/a00075_a0ec930835d4a5cd53406c5d0f7c61ee5_1a0ec930835d4a5cd53406c5d0f7c61ee5" kindref="member">xyz</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&gt;<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>xyz(),<sp/>you<sp/>must<sp/>have<sp/>a<sp/>Vector<sp/>with<sp/>at<sp/>least<sp/>3<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[0],<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[1],<sp/>content[2]<sp/>};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="d9/da5/a00075_a786e32b6cdfd5e73e93390d82710c0ee_1a786e32b6cdfd5e73e93390d82710c0ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 4&gt;</ref><sp/><ref refid="d9/da5/a00075_a786e32b6cdfd5e73e93390d82710c0ee_1a786e32b6cdfd5e73e93390d82710c0ee" kindref="member">xyzw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&gt;<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>xyzw(),<sp/>you<sp/>must<sp/>have<sp/>a<sp/>Vector<sp/>with<sp/>at<sp/>least<sp/>4<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[0],<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[1],<sp/>content[2],<sp/>content[3]<sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="314" refid="d9/da5/a00075_af56e7800e947754a7c7e508301ee3f9a_1af56e7800e947754a7c7e508301ee3f9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="d9/da5/a00075_af56e7800e947754a7c7e508301ee3f9a_1af56e7800e947754a7c7e508301ee3f9a" kindref="member">operator[]</ref>(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="d9/da5/a00075_a7eb2384ab474fa1a0ba5171a49139e5c_1a7eb2384ab474fa1a0ba5171a49139e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="d9/da5/a00075_a7eb2384ab474fa1a0ba5171a49139e5c_1a7eb2384ab474fa1a0ba5171a49139e5c" kindref="member">operator()</ref>(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="d9/da5/a00075_a572904b63c9e2d35ca6625ad2f2b1627_1a572904b63c9e2d35ca6625ad2f2b1627" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="d9/da5/a00075_a572904b63c9e2d35ca6625ad2f2b1627_1a572904b63c9e2d35ca6625ad2f2b1627" kindref="member">operator()</ref>(<ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="d9/da5/a00075_a41f3ca26b2d43a91797df7499afcc5c5_1a41f3ca26b2d43a91797df7499afcc5c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_a41f3ca26b2d43a91797df7499afcc5c5_1a41f3ca26b2d43a91797df7499afcc5c5" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>right;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="364" refid="d9/da5/a00075_ac486a0798fd812967cb543c23bf60e3b_1ac486a0798fd812967cb543c23bf60e3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_ac486a0798fd812967cb543c23bf60e3b_1ac486a0798fd812967cb543c23bf60e3b" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>-=<sp/>right;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="d9/da5/a00075_a743ef1fe1d428bd3fabc37adb783aca9_1a743ef1fe1d428bd3fabc37adb783aca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_a743ef1fe1d428bd3fabc37adb783aca9_1a743ef1fe1d428bd3fabc37adb783aca9" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>*=<sp/>right;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="d9/da5/a00075_ac25e36e26f8ffb471a47b101b289d3ef_1ac25e36e26f8ffb471a47b101b289d3ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_ac25e36e26f8ffb471a47b101b289d3ef_1ac25e36e26f8ffb471a47b101b289d3ef" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>/=<sp/>right;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="d9/da5/a00075_ade01989965997b8fc323a3b96eae8bfa_1ade01989965997b8fc323a3b96eae8bfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_ade01989965997b8fc323a3b96eae8bfa_1ade01989965997b8fc323a3b96eae8bfa" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>scalar;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="d9/da5/a00075_a4b82b18836e6dfc6a4a09d40baf63ffd_1a4b82b18836e6dfc6a4a09d40baf63ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_a4b82b18836e6dfc6a4a09d40baf63ffd_1a4b82b18836e6dfc6a4a09d40baf63ffd" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>-=<sp/>scalar;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="d9/da5/a00075_a073741c6651aad098b8ee5adea09eaa4_1a073741c6651aad098b8ee5adea09eaa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_a073741c6651aad098b8ee5adea09eaa4_1a073741c6651aad098b8ee5adea09eaa4" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="d9/da5/a00075_ab8095bda1d18b74aafc434a0f1b2bcd4_1ab8095bda1d18b74aafc434a0f1b2bcd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector</ref><sp/><ref refid="d9/da5/a00075_ab8095bda1d18b74aafc434a0f1b2bcd4_1ab8095bda1d18b74aafc434a0f1b2bcd4" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="d9/da5/a00075_add67c85219f90da24ad00508be384ab4_1add67c85219f90da24ad00508be384ab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_add67c85219f90da24ad00508be384ab4_1add67c85219f90da24ad00508be384ab4" kindref="member">operator+= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>+=<sp/>right[i];</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="d9/da5/a00075_a4a0aee255e45235c029a51cad50b4f2c_1a4a0aee255e45235c029a51cad50b4f2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a4a0aee255e45235c029a51cad50b4f2c_1a4a0aee255e45235c029a51cad50b4f2c" kindref="member">operator-= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>-=<sp/>right[i];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="d9/da5/a00075_a2727025232d2c2c491b871299babcdbc_1a2727025232d2c2c491b871299babcdbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a2727025232d2c2c491b871299babcdbc_1a2727025232d2c2c491b871299babcdbc" kindref="member">operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>*=<sp/>right[i];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="d9/da5/a00075_aaa157b6d3969ccd93e40efd9c6656333_1aaa157b6d3969ccd93e40efd9c6656333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_aaa157b6d3969ccd93e40efd9c6656333_1aaa157b6d3969ccd93e40efd9c6656333" kindref="member">operator/= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>/=<sp/>right[i];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="d9/da5/a00075_ab9e06146219477eb114cfe5ec0484879_1ab9e06146219477eb114cfe5ec0484879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_add67c85219f90da24ad00508be384ab4_1add67c85219f90da24ad00508be384ab4" kindref="member">operator+= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>+=<sp/>scalar;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="d9/da5/a00075_a00a55f32dca64a72e7b29a3b3c350ef5_1a00a55f32dca64a72e7b29a3b3c350ef5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a4a0aee255e45235c029a51cad50b4f2c_1a4a0aee255e45235c029a51cad50b4f2c" kindref="member">operator-= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>-=<sp/>scalar;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="d9/da5/a00075_af95e59326592e258341dfd2a02d628ff_1af95e59326592e258341dfd2a02d628ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a2727025232d2c2c491b871299babcdbc_1a2727025232d2c2c491b871299babcdbc" kindref="member">operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="d9/da5/a00075_a63c0c33c81fa939285ca1c83120ce172_1a63c0c33c81fa939285ca1c83120ce172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_aaa157b6d3969ccd93e40efd9c6656333_1aaa157b6d3969ccd93e40efd9c6656333" kindref="member">operator/= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="d9/da5/a00075_a4ea0c891100c07ca827fb2b63ff4ab40_1a4ea0c891100c07ca827fb2b63ff4ab40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a4ea0c891100c07ca827fb2b63ff4ab40_1a4ea0c891100c07ca827fb2b63ff4ab40" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](i)<sp/>!=<sp/>other[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="d9/da5/a00075_a4be78cbc5b6bcbe9488f5c3cd8ffa2e9_1a4be78cbc5b6bcbe9488f5c3cd8ffa2e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_a4be78cbc5b6bcbe9488f5c3cd8ffa2e9_1a4be78cbc5b6bcbe9488f5c3cd8ffa2e9" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="d9/da5/a00075_a4ea0c891100c07ca827fb2b63ff4ab40_1a4ea0c891100c07ca827fb2b63ff4ab40" kindref="member">operator==</ref>(other);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="d9/da5/a00075_afd548f2844ce721daa85501dedc8fd6f_1afd548f2844ce721daa85501dedc8fd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_afd548f2844ce721daa85501dedc8fd6f_1afd548f2844ce721daa85501dedc8fd6f" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](i)<sp/>&lt;=<sp/>other[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="d9/da5/a00075_af3d351c9d80e71ce467749dd6587b49f_1af3d351c9d80e71ce467749dd6587b49f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_af3d351c9d80e71ce467749dd6587b49f_1af3d351c9d80e71ce467749dd6587b49f" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075_afd548f2844ce721daa85501dedc8fd6f_1afd548f2844ce721daa85501dedc8fd6f" kindref="member">operator&gt;</ref>(other)<sp/>||<sp/><ref refid="d9/da5/a00075_a4ea0c891100c07ca827fb2b63ff4ab40_1a4ea0c891100c07ca827fb2b63ff4ab40" kindref="member">operator==</ref>(other);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="d9/da5/a00075_a3cf2432f2b843c9fd3a90ab73e600ee0_1a3cf2432f2b843c9fd3a90ab73e600ee0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(const<sp/>Vector&lt;T,<sp/>N&gt;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="d9/da5/a00075_af3d351c9d80e71ce467749dd6587b49f_1af3d351c9d80e71ce467749dd6587b49f" kindref="member">operator&gt;=</ref>(other);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="d9/da5/a00075_a796b41e71ce3fec49a5b1891c13290ee_1a796b41e71ce3fec49a5b1891c13290ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(const<sp/>Vector&lt;T,<sp/>N&gt;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="d9/da5/a00075_afd548f2844ce721daa85501dedc8fd6f_1afd548f2844ce721daa85501dedc8fd6f" kindref="member">operator&gt;</ref>(other);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="d9/da5/a00075_a0bf7bca5cdd4235d9d8c0707a83bbbf0_1a0bf7bca5cdd4235d9d8c0707a83bbbf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="d9/da5/a00075_a0bf7bca5cdd4235d9d8c0707a83bbbf0_1a0bf7bca5cdd4235d9d8c0707a83bbbf0" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;output,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight><highlight class="comment">//why<sp/>not<sp/>just<sp/>&quot;[<sp/>&quot;?<sp/>well,<sp/>that<sp/>needs<sp/>std::string<sp/>to<sp/>be<sp/>included,<sp/>and<sp/>thats<sp/>more<sp/>compiliation<sp/>time.<sp/>this<sp/>way<sp/>doesnt<sp/>need<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/><ref refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" kindref="member">x</ref><sp/>=<sp/>0;<sp/><ref refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" kindref="member">x</ref><sp/>&lt;<sp/>N;<sp/><ref refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" kindref="member">x</ref>++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>v[<ref refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" kindref="member">x</ref>];</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d9/da5/a00075_af7b4b0cd42037f15e3d7e7f97fb155ba_1af7b4b0cd42037f15e3d7e7f97fb155ba" kindref="member">x</ref><sp/>!=<sp/>N<sp/>-<sp/>1<sp/>)output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="673" refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="d9/da5/a00075_ac5913b24ed4cb38173a1492d05cb5ff2_1ac5913b24ed4cb38173a1492d05cb5ff2" kindref="member">content</ref>[N];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight><highlight class="comment">//Vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//math<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="689" refid="db/d57/a00112_a2afa253e79730670dfb6298d282236b5_1a2afa253e79730670dfb6298d282236b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/><ref refid="db/d57/a00112_a2afa253e79730670dfb6298d282236b5_1a2afa253e79730670dfb6298d282236b5" kindref="member">cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i<sp/>though<sp/>of<sp/>more<sp/>than<sp/>one<sp/>pun<sp/>for<sp/>this<sp/>one,<sp/>so<sp/>here<sp/>is<sp/>a<sp/>list:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>cross<sp/>of<sp/>jesus<sp/>or<sp/>the<sp/>cross<sp/>of<sp/>cris?<sp/>these<sp/>are<sp/>important<sp/>questions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i<sp/>wont<sp/>double<sp/>cross<sp/>you!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>bible<sp/>is<sp/>a<sp/>cross<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//so<sp/>is<sp/>a<sp/>swiss<sp/>army<sp/>knife</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//railroad<sp/>crossing;<sp/>the<sp/>train<sp/>is<sp/>carying<sp/>important<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i<sp/>should<sp/>just<sp/>cross<sp/>this<sp/>off<sp/>the<sp/>list<sp/>of<sp/>unproductive<sp/>things<sp/>i<sp/>have<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, 3&gt;</ref>();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//whew<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>(a[1]<sp/>*<sp/>b[2])<sp/>-<sp/>(a[2]<sp/>*<sp/>b[1]);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>(a[2]<sp/>*<sp/>b[0])<sp/>-<sp/>(a[0]<sp/>*<sp/>b[2]);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>(a[0]<sp/>*<sp/>b[1])<sp/>-<sp/>(a[1]<sp/>*<sp/>b[0]);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="719" refid="db/d57/a00112_a0c07c85e6b00cfd2a26759979161fc1c_1a0c07c85e6b00cfd2a26759979161fc1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="db/d57/a00112_a0c07c85e6b00cfd2a26759979161fc1c_1a0c07c85e6b00cfd2a26759979161fc1c" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a[i]<sp/>*<sp/>b[i]);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="737" refid="db/d57/a00112_a7958bca152122020b061e41db09dacad_1a7958bca152122020b061e41db09dacad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="db/d57/a00112_a7958bca152122020b061e41db09dacad_1a7958bca152122020b061e41db09dacad" kindref="member">magnitude</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>out<sp/>=<sp/>T();</highlight><highlight class="comment">//assuming<sp/>its<sp/>numerical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//basically<sp/>the<sp/>pythagereon<sp/>theorum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="db/d57/a00112_a7e5ef3f323d1e3368c3e1d5d0f59cbd8_1a7e5ef3f323d1e3368c3e1d5d0f59cbd8" kindref="member">sqr</ref>(a[i]));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(out);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="757" refid="db/d57/a00112_ad11a3dbb6a8527a40a6fdd83fc654490_1ad11a3dbb6a8527a40a6fdd83fc654490" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="db/d57/a00112_ad11a3dbb6a8527a40a6fdd83fc654490_1ad11a3dbb6a8527a40a6fdd83fc654490" kindref="member">normalize</ref>(<ref refid="d9/da5/a00075" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector<sp/>/<sp/><ref refid="db/d57/a00112_a7958bca152122020b061e41db09dacad_1a7958bca152122020b061e41db09dacad" kindref="member">magnitude</ref>(vector);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//Vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight><highlight class="comment">//mc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/MACE/Utility/Vector.h"/>
  </compounddef>
</doxygen>
