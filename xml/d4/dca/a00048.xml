<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d4/dca/a00048" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::Text</compoundname>
    <basecompoundref refid="d7/d7a/a00016" prot="public" virt="non-virtual">mc::gfx::Entity2D</basecompoundref>
    <includes refid="d1/d6f/a00063" local="no">Entity2D.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/dca/a00048_1aaf99633e551e82721cf00845e5e79f8e" prot="private" static="no" mutable="no">
        <type><ref refid="d7/de0/a00022" kindref="compound">Group</ref></type>
        <definition>Group mc::gfx::Text::letters</definition>
        <argsstring></argsstring>
        <name>letters</name>
        <initializer>= <ref refid="d7/de0/a00022" kindref="compound">Group</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="380" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dca/a00048_1a86281ac423808cd2d900ecd4c341df25" prot="private" static="no" mutable="no">
        <type>std::wstring</type>
        <definition>std::wstring mc::gfx::Text::text</definition>
        <argsstring></argsstring>
        <name>text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="382" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dca/a00048_1a2ec879f9d5a5f89f912a7bef739546fc" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d44/a00098_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
        <definition>VerticalAlign mc::gfx::Text::vertAlign</definition>
        <argsstring></argsstring>
        <name>vertAlign</name>
        <initializer>= <ref refid="d1/d44/a00098_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8caac397289ee45877be0cd49811fe245b4e" kindref="member">VerticalAlign::CENTER</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="384" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dca/a00048_1a264f753bda321fddd906c25878f41894" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d44/a00098_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
        <definition>HorizontalAlign mc::gfx::Text::horzAlign</definition>
        <argsstring></argsstring>
        <name>horzAlign</name>
        <initializer>= <ref refid="d1/d44/a00098_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8caac397289ee45877be0cd49811fe245b4e" kindref="member">HorizontalAlign::CENTER</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="385" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dca/a00048_1a85c5c6b5dccb14cd5b507d8de5408d61" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d2b/a00018" kindref="compound">Font</ref></type>
        <definition>Font mc::gfx::Text::font</definition>
        <argsstring></argsstring>
        <name>font</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="387" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/dca/a00048_aa53b68bd304ff0766d87546708d61070_1aa53b68bd304ff0766d87546708d61070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Text::Text</definition>
        <argsstring>(const std::string &amp;t, const Font &amp;f=Font())</argsstring>
        <name>Text</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d2b/a00018" kindref="compound">Font</ref> &amp;</type>
          <declname>f</declname>
          <defval><ref refid="d1/d2b/a00018" kindref="compound">Font</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a956517bd5a6380c73da854bdc5385fa4_1a956517bd5a6380c73da854bdc5385fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Text::Text</definition>
        <argsstring>(const std::wstring &amp;t=L&quot;&quot;, const Font &amp;f=Font())</argsstring>
        <name>Text</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>t</declname>
          <defval>L&quot;&quot;</defval>
        </param>
        <param>
          <type>const <ref refid="d1/d2b/a00018" kindref="compound">Font</ref> &amp;</type>
          <declname>f</declname>
          <defval><ref refid="d1/d2b/a00018" kindref="compound">Font</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a98ef915c3d950b31553f25504ef7915c_1a98ef915c3d950b31553f25504ef7915c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Text::~Text</definition>
        <argsstring>()=default</argsstring>
        <name>~Text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a4687548caeacf09f11c8b1207a68033f_1a4687548caeacf09f11c8b1207a68033f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::setText</definition>
        <argsstring>(const std::wstring &amp;newText)</argsstring>
        <name>setText</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>newText</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a74e2b0cff4c4b1c831621f2e152e1566_1a74e2b0cff4c4b1c831621f2e152e1566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring &amp;</type>
        <definition>std::wstring&amp; mc::gfx::Text::getText</definition>
        <argsstring>()</argsstring>
        <name>getText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a30857f6ae5df75574b26a5225123f8de_1a30857f6ae5df75574b26a5225123f8de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::wstring &amp;</type>
        <definition>const std::wstring&amp; mc::gfx::Text::getText</definition>
        <argsstring>() const </argsstring>
        <name>getText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a65bb7dfd7c5b9adb5136aacf648665a5_1a65bb7dfd7c5b9adb5136aacf648665a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::setFont</definition>
        <argsstring>(const Font &amp;f)</argsstring>
        <name>setFont</name>
        <param>
          <type>const <ref refid="d1/d2b/a00018" kindref="compound">Font</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_ac866f4dfb8c4658f0ac496efc1dc51bb_1ac866f4dfb8c4658f0ac496efc1dc51bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d2b/a00018" kindref="compound">Font</ref> &amp;</type>
        <definition>Font&amp; mc::gfx::Text::getFont</definition>
        <argsstring>()</argsstring>
        <name>getFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a49bf7f89e764c6a468c9397c1a0ef077_1a49bf7f89e764c6a468c9397c1a0ef077" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d1/d2b/a00018" kindref="compound">Font</ref> &amp;</type>
        <definition>const Font&amp; mc::gfx::Text::getFont</definition>
        <argsstring>() const </argsstring>
        <name>getFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_aaea543b6156cbdb7c6830987dab006b2_1aaea543b6156cbdb7c6830987dab006b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/de0/a00022" kindref="compound">Group</ref> &amp;</type>
        <definition>const Group&amp; mc::gfx::Text::getLetters</definition>
        <argsstring>() const </argsstring>
        <name>getLetters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a19d873e592ba1c69d0464dc860dd92bc_1a19d873e592ba1c69d0464dc860dd92bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::setVerticalAlign</definition>
        <argsstring>(const VerticalAlign align)</argsstring>
        <name>setVerticalAlign</name>
        <param>
          <type>const <ref refid="d1/d44/a00098_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a8a479ed77fb27f199e66efaa0f64b0f0_1a8a479ed77fb27f199e66efaa0f64b0f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d1/d44/a00098_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
        <definition>const VerticalAlign mc::gfx::Text::getVerticalAlign</definition>
        <argsstring>() const </argsstring>
        <name>getVerticalAlign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a5e3331f9c5c5e22c2575bf2ab90564c1_1a5e3331f9c5c5e22c2575bf2ab90564c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::setHorizontalAlign</definition>
        <argsstring>(HorizontalAlign align)</argsstring>
        <name>setHorizontalAlign</name>
        <param>
          <type><ref refid="d1/d44/a00098_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a1200b2af4a9f7d16d6675b810c22d4ac_1a1200b2af4a9f7d16d6675b810c22d4ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d1/d44/a00098_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
        <definition>const HorizontalAlign mc::gfx::Text::getHorizontalAlign</definition>
        <argsstring>() const </argsstring>
        <name>getHorizontalAlign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a69b708f52b9167526da61d15ea732402_1a69b708f52b9167526da61d15ea732402" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Text::operator==</definition>
        <argsstring>(const Text &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d4/dca/a00048" kindref="compound">Text</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a0d9041949e7fb44c6bac6b34ed75fc2c_1a0d9041949e7fb44c6bac6b34ed75fc2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Text::operator!=</definition>
        <argsstring>(const Text &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d4/dca/a00048" kindref="compound">Text</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_afb519e9bb9d5da9f2d700de144ad681a_1afb519e9bb9d5da9f2d700de144ad681a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d79/a00051" kindref="compound">ogl::UniformBuffer</ref> &amp;</type>
        <definition>ogl::UniformBuffer&amp; mc::gfx::GraphicsEntity::getBuffer</definition>
        <argsstring>()</argsstring>
        <name>getBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a154d25e8f7926f63c6ac617fb5a7583f_1a154d25e8f7926f63c6ac617fb5a7583f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/d79/a00051" kindref="compound">ogl::UniformBuffer</ref> &amp;</type>
        <definition>const ogl::UniformBuffer&amp; mc::gfx::GraphicsEntity::getBuffer</definition>
        <argsstring>() const </argsstring>
        <name>getBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a7f0243bb5d50df6d76a1705ac954031d_1a7f0243bb5d50df6d76a1705ac954031d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::setBuffer</definition>
        <argsstring>(const ogl::UniformBuffer &amp;newBuffer)</argsstring>
        <name>setBuffer</name>
        <param>
          <type>const <ref refid="d2/d79/a00051" kindref="compound">ogl::UniformBuffer</ref> &amp;</type>
          <declname>newBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a14a9742f62cedec9f8dcaf74ade5124d_1a14a9742f62cedec9f8dcaf74ade5124d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::clean</definition>
        <argsstring>() final</argsstring>
        <name>clean</name>
        <reimplements refid="dd/d1b/a00015_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e">clean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="617" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::init</definition>
        <argsstring>() final</argsstring>
        <name>init</name>
        <reimplements refid="dd/d1b/a00015_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c">init</reimplements>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="d4/d3a/a00101_a87ae59d4d843c7d01b12f5dadc36c01a_1a87ae59d4d843c7d01b12f5dadc36c01a" kindref="member">MACE.init()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="dd/d1b/a00015_a11cf6a76902a6e19eee7a002468cb118_1a11cf6a76902a6e19eee7a002468cb118" kindref="member">onInit()</ref></computeroutput> </para><para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="dd/d1b/a00015_a11cf6a76902a6e19eee7a002468cb118_1a11cf6a76902a6e19eee7a002468cb118" kindref="member">onInit()</ref></computeroutput> <simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> is true, meaning <computeroutput><ref refid="de/d11/a00021_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" kindref="member">init()</ref></computeroutput> has already been called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="619" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a099e552dfbea5da421d7a661e9ed2e0d_1a099e552dfbea5da421d7a661e9ed2e0d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::destroy</definition>
        <argsstring>() final</argsstring>
        <name>destroy</name>
        <reimplements refid="dd/d1b/a00015_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3">destroy</reimplements>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="d4/d3a/a00101_a2d1213f9aab871e066d5dbfb316c3dc2_1a2d1213f9aab871e066d5dbfb316c3dc2" kindref="member">MACE.destroy()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="dd/d1b/a00015_a9ed783f8417120704dfd5988bd037f14_1a9ed783f8417120704dfd5988bd037f14" kindref="member">onDestroy()</ref></computeroutput>. Sets <computeroutput><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> to be false </para><para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="dd/d1b/a00015_a9ed783f8417120704dfd5988bd037f14_1a9ed783f8417120704dfd5988bd037f14" kindref="member">onDestroy()</ref></computeroutput> <simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> is false, meaning <computeroutput><ref refid="de/d11/a00021_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" kindref="member">init()</ref></computeroutput> was not called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_aaf114ceb108c83cc243da609bbb7a58d_1aaf114ceb108c83cc243da609bbb7a58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dec/a00010" kindref="compound">Color</ref> &amp;</type>
        <definition>Color&amp; mc::gfx::GraphicsEntity::getPaint</definition>
        <argsstring>()</argsstring>
        <name>getPaint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a93a43f5691c517591c388679fe98a67b_1a93a43f5691c517591c388679fe98a67b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/dec/a00010" kindref="compound">Color</ref> &amp;</type>
        <definition>const Color&amp; mc::gfx::GraphicsEntity::getPaint</definition>
        <argsstring>() const </argsstring>
        <name>getPaint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a996a3857a31e05430a21c4957a9fbd3f_1a996a3857a31e05430a21c4957a9fbd3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::setPaint</definition>
        <argsstring>(const Color &amp;c)</argsstring>
        <name>setPaint</name>
        <param>
          <type>const <ref refid="d7/dec/a00010" kindref="compound">Color</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a8c60d8a573633d174610037db5f7ab6c_1a8c60d8a573633d174610037db5f7ab6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mc::gfx::GraphicsEntity::getOpacity</definition>
        <argsstring>()</argsstring>
        <name>getOpacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a35d7eae91b69a75adc30cc469efdcefb_1a35d7eae91b69a75adc30cc469efdcefb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float mc::gfx::GraphicsEntity::getOpacity</definition>
        <argsstring>() const </argsstring>
        <name>getOpacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_a385a1a844055205bd7f60833a1720cd2_1a385a1a844055205bd7f60833a1720cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::setOpacity</definition>
        <argsstring>(const float f)</argsstring>
        <name>setOpacity</name>
        <param>
          <type>const float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_ab02900c86058b441dcf6884be269a978_1ab02900c86058b441dcf6884be269a978" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::GraphicsEntity::operator==</definition>
        <argsstring>(const GraphicsEntity &amp;other) const  noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="de/d11/a00021" kindref="compound">GraphicsEntity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a07610ae2fac37c6015a054c781b04918_1a07610ae2fac37c6015a054c781b04918" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::operator==</definition>
        <argsstring>(const Entity &amp;other) const  noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if 2 <computeroutput>Entities</computeroutput> have the same children, parent, and properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>An <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> compare this one to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if they are equal </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" kindref="member">getParent() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" kindref="member">getChildren() const</ref> </para></simplesect>
<simplesect kind="see"><para>operator!= </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d11/a00021_aabb5296d2eded79f26c1684d46349f53_1aabb5296d2eded79f26c1684d46349f53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::GraphicsEntity::operator!=</definition>
        <argsstring>(const GraphicsEntity &amp;other) const  noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="de/d11/a00021" kindref="compound">GraphicsEntity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a8aaef736185a43f4c700c7f65dcd7d3f_1a8aaef736185a43f4c700c7f65dcd7d3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::operator!=</definition>
        <argsstring>(const Entity &amp;other) const  noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if 2 <computeroutput>Entities</computeroutput> don&apos;t have the same children, parent, and properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>An <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> compare this one to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if they are equal </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" kindref="member">getParent() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" kindref="member">getChildren() const</ref> </para></simplesect>
<simplesect kind="see"><para>operator== </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;Entity*&gt;&amp; mc::gfx::Entity::getChildren</definition>
        <argsstring>() const </argsstring>
        <name>getChildren</name>
        <briefdescription>
<para>Gets all of this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>&apos;s</computeroutput> children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an <computeroutput>std::vector</computeroutput> with all children of this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::removeChild</definition>
        <argsstring>(const Entity &amp;e)</argsstring>
        <name>removeChild</name>
        <param>
          <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Removes a child by reference. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ObjectNotFoundInArray</parametername>
</parameternamelist>
<parameterdescription>
<para>if <ref refid="dd/d1b/a00015_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" kindref="member">hasChild(Entity&amp;) const</ref> returns <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a child </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" kindref="member">removeChild(Index)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::removeChild</definition>
        <argsstring>(Index index)</argsstring>
        <name>removeChild</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a child via location. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if the index is less than 0 or greater than <ref refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild(const Entity&amp;)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::hasChild</definition>
        <argsstring>(Entity &amp;e) const </argsstring>
        <name>hasChild</name>
        <param>
          <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Checks to see if this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> contains an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> doesn&apos;t contain the referenced <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput>, <computeroutput>true</computeroutput> otherwise </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp; ) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a0dfa57638b24bc0d82d42ccb275ca87e_1a0dfa57638b24bc0d82d42ccb275ca87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::clearChildren</definition>
        <argsstring>()</argsstring>
        <name>clearChildren</name>
        <briefdescription>
<para>Removes EVERY <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> from this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" kindref="member">removeChild(Index)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild(const Entity&amp;)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::operator[]</definition>
        <argsstring>(Index i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This is different than <computeroutput><ref refid="dd/d1b/a00015_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild()</ref></computeroutput> because <computeroutput>operator[]</computeroutput> doesn&apos;t do bounds checking. Accessing an invalid location will result in a memory error. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a97a0a270c1d4c710ac2f4033b52dd9bd_1a97a0a270c1d4c710ac2f4033b52dd9bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>const Entity&amp; mc::gfx::Entity::operator[]</definition>
        <argsstring>(Index i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <ref refid="dd/d1b/a00015_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[](Index i)</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" kindref="member">getChild(Index) const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::getChild</definition>
        <argsstring>(Index i)</argsstring>
        <name>getChild</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Retrieves a child at a certain index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>i</computeroutput> is less than <computeroutput>0</computeroutput> or greater than <ref refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>const Entity&amp; mc::gfx::Entity::getChild</definition>
        <argsstring>(Index i) const </argsstring>
        <name>getChild</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <ref refid="dd/d1b/a00015_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Index</computeroutput> of the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>i</computeroutput> is less than <computeroutput>0</computeroutput> or greater than <ref refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mc::gfx::Entity::indexOf</definition>
        <argsstring>(const Entity &amp;e) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Finds the location of an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> in this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Location of <computeroutput>e,</computeroutput> or -1 if <computeroutput>e</computeroutput> is not a child of this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> * &gt;::iterator</type>
        <definition>std::vector&lt;Entity*&gt;::iterator mc::gfx::Entity::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Gets an iterator over this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> for enchanced for loops. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator of the first <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" kindref="member">end()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> * &gt;::iterator</type>
        <definition>std::vector&lt;Entity*&gt;::iterator mc::gfx::Entity::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Gets an iterator over this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> for enchanced for loops. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator of the last <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" kindref="member">begin()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/df8/a00096_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Entity::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Calculates the amount of children this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> has. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d44/a00098_a6179dec54918a9dc1c86f419bc000343_1a6179dec54918a9dc1c86f419bc000343" kindref="member">EntityProperties</ref> &amp;</type>
        <definition>EntityProperties&amp; mc::gfx::Entity::getProperties</definition>
        <argsstring>()</argsstring>
        <name>getProperties</name>
        <briefdescription>
<para>Retrieves the <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>&apos;s</computeroutput> properties as a <computeroutput>ByteField</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="return"><para>The current properties belonging to this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d1/d44/a00098_a6179dec54918a9dc1c86f419bc000343_1a6179dec54918a9dc1c86f419bc000343" kindref="member">EntityProperties</ref> &amp;</type>
        <definition>const EntityProperties&amp; mc::gfx::Entity::getProperties</definition>
        <argsstring>() const </argsstring>
        <name>getProperties</name>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <computeroutput><ref refid="dd/d1b/a00015_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current properties belonging to this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_af07ef60a815c87d686bf81dd92a817eb_1af07ef60a815c87d686bf81dd92a817eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setProperties</definition>
        <argsstring>(EntityProperties &amp;b)</argsstring>
        <name>setProperties</name>
        <param>
          <type><ref refid="d1/d44/a00098_a6179dec54918a9dc1c86f419bc000343_1a6179dec54918a9dc1c86f419bc000343" kindref="member">EntityProperties</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set the properties for this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>New <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> properties </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a46570a241b370527b9e8a3e0fb335248_1a46570a241b370527b9e8a3e0fb335248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::getProperty</definition>
        <argsstring>(const Byte position) const </argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="d9/df8/a00096_a7c6e1fbcd00ba27af6389a4a891788ca_1a7c6e1fbcd00ba27af6389a4a891788ca" kindref="member">Byte</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Retrieve the value of a property. </para>        </briefdescription>
        <detaileddescription>
<para>Property consants start with <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>::</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the property based on a constant </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> or <computeroutput>false</computeroutput> based on the postition </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setProperty</definition>
        <argsstring>(const Byte position, const bool value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const <ref refid="d9/df8/a00096_a7c6e1fbcd00ba27af6389a4a891788ca_1a7c6e1fbcd00ba27af6389a4a891788ca" kindref="member">Byte</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a property to be <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput>.Property consants start with <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>::</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the property based on a constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether it is <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ae5444c9fabdb47ce42720ef16139cb74_1ae5444c9fabdb47ce42720ef16139cb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/de0/a00050" kindref="compound">TransformMatrix</ref> &amp;</type>
        <definition>TransformMatrix&amp; mc::gfx::Entity::getTransformation</definition>
        <argsstring>()</argsstring>
        <name>getTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a200bbd6f007f227c7afe0c1afb8d0abb_1a200bbd6f007f227c7afe0c1afb8d0abb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d5/de0/a00050" kindref="compound">TransformMatrix</ref> &amp;</type>
        <definition>const TransformMatrix&amp; mc::gfx::Entity::getTransformation</definition>
        <argsstring>() const </argsstring>
        <name>getTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a0f9b978bf306a200abca7bde5781475a_1a0f9b978bf306a200abca7bde5781475a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setTransformation</definition>
        <argsstring>(TransformMatrix &amp;trans)</argsstring>
        <name>setTransformation</name>
        <param>
          <type><ref refid="d5/de0/a00050" kindref="compound">TransformMatrix</ref> &amp;</type>
          <declname>trans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a72c29a24e2436cdc85972a9d9f67d702_1a72c29a24e2436cdc85972a9d9f67d702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::translate</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>translate</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ae733dfe13631968460ee61fd6a3de551_1ae733dfe13631968460ee61fd6a3de551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::rotate</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>rotate</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a3197c68ec0bb4569de929bc30fff5508_1a3197c68ec0bb4569de929bc30fff5508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::scale</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> *const</type>
        <definition>Entity* const mc::gfx::Entity::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Retrieve this <computeroutput>Entitys</computeroutput> parent `Entity. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput> @return A</computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref><computeroutput>which contains</computeroutput>this` <simplesect kind="see"><para>Entity::hasChild(const Entity&amp;) const; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> *const</type>
        <definition>const Entity* const mc::gfx::Entity::getParent</definition>
        <argsstring>() const </argsstring>
        <name>getParent</name>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <computeroutput><ref refid="dd/d1b/a00015_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" kindref="member">getParent()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> which contains <computeroutput>this</computeroutput> </para></simplesect>
<simplesect kind="see"><para>Entity::hasChild(const Entity&amp;) const; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_aff435e798a2cb43bd5d04d79f0d9a542_1aff435e798a2cb43bd5d04d79f0d9a542" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::hasParent</definition>
        <argsstring>() const </argsstring>
        <name>hasParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addChild</definition>
        <argsstring>(Entity &amp;e)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a1bd8b865710f86f1d80644151689d032_1a1bd8b865710f86f1d80644151689d032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addChild</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a4e8e092a7f1ef167e014850f99515663_1a4e8e092a7f1ef167e014850f99515663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addComponent</definition>
        <argsstring>(Component *action)</argsstring>
        <name>addComponent</name>
        <param>
          <type><ref refid="da/d45/a00011" kindref="compound">Component</ref> *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addComponent</definition>
        <argsstring>(Component &amp;action)</argsstring>
        <name>addComponent</name>
        <param>
          <type><ref refid="da/d45/a00011" kindref="compound">Component</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ac0acc4ad4d83a961e77dad1c4bf97c7c_1ac0acc4ad4d83a961e77dad1c4bf97c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="da/d45/a00011" kindref="compound">Component</ref> * &gt;</type>
        <definition>std::vector&lt;Component*&gt; mc::gfx::Entity::getComponents</definition>
        <argsstring>()</argsstring>
        <name>getComponents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a1873ddf0dbe7421dd193906c46a15a22_1a1873ddf0dbe7421dd193906c46a15a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a5e1ebb934e48d9a0e758ce46543ac913_1a5e1ebb934e48d9a0e758ce46543ac913" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getWidth</definition>
        <argsstring>() const </argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ad7bb754e9ada2401d234d49ba85463ad_1ad7bb754e9ada2401d234d49ba85463ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setWidth</definition>
        <argsstring>(const float &amp;s)</argsstring>
        <name>setWidth</name>
        <param>
          <type>const float &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a48ec951abc73bb80af1f3a474df33d93_1a48ec951abc73bb80af1f3a474df33d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_aa0aa51eeaa5f34ba09ed3e544b96645c_1aa0aa51eeaa5f34ba09ed3e544b96645c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getHeight</definition>
        <argsstring>() const </argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a1d9f4a5586e05cf2315183be5062e84a_1a1d9f4a5586e05cf2315183be5062e84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setHeight</definition>
        <argsstring>(const float &amp;s)</argsstring>
        <name>setHeight</name>
        <param>
          <type>const float &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a5ed09eb98c83fa88f10892eb969cfb51_1a5ed09eb98c83fa88f10892eb969cfb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a8be1810d8c9150ba4b56dc4f419d0b5b_1a8be1810d8c9150ba4b56dc4f419d0b5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getX</definition>
        <argsstring>() const </argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ab1227baaa1d429be4d648e782dec6269_1ab1227baaa1d429be4d648e782dec6269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setX</definition>
        <argsstring>(const float &amp;newX)</argsstring>
        <name>setX</name>
        <param>
          <type>const float &amp;</type>
          <declname>newX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ad8d0322ec7c44e409987cd891b9e37f8_1ad8d0322ec7c44e409987cd891b9e37f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a8e1622c328280ccf6d80bae0a80e2a99_1a8e1622c328280ccf6d80bae0a80e2a99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getY</definition>
        <argsstring>() const </argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a9339119f35be0f3147b994e48bf1d2d7_1a9339119f35be0f3147b994e48bf1d2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setY</definition>
        <argsstring>(const float &amp;newY)</argsstring>
        <name>setY</name>
        <param>
          <type>const float &amp;</type>
          <declname>newY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ab3e19a2a0c0a1663a7b63feea364d3aa_1ab3e19a2a0c0a1663a7b63feea364d3aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> *</type>
        <definition>Entity* mc::gfx::Entity::getRootParent</definition>
        <argsstring>()</argsstring>
        <name>getRootParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a72a61c49f0e51cad4c69d72def629689_1a72a61c49f0e51cad4c69d72def629689" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> *</type>
        <definition>const Entity* mc::gfx::Entity::getRootParent</definition>
        <argsstring>() const </argsstring>
        <name>getRootParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a85a822baaae376b546e66b098b128932_1a85a822baaae376b546e66b098b128932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ad19419a5ae7483fad138e497bf7035a3_1ad19419a5ae7483fad138e497bf7035a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::makeDirty</definition>
        <argsstring>()</argsstring>
        <name>makeDirty</name>
        <briefdescription>
<para>Makes this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty and the root level parent dirty. </para>        </briefdescription>
        <detaileddescription>
<para>Should be used over <computeroutput>setProperty(Entity::DIRTY,true)</computeroutput> as it updaets the root parent. <simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="476" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d4/dca/a00048_ac042cfee827b587c1d875b13553a1ea0_1ac042cfee827b587c1d875b13553a1ea0" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::onInit</definition>
        <argsstring>() override final</argsstring>
        <name>onInit</name>
        <reimplements refid="dd/d1b/a00015_a11cf6a76902a6e19eee7a002468cb118_1a11cf6a76902a6e19eee7a002468cb118">onInit</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="dd/d1b/a00015_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity.init()</ref></computeroutput> is called, <computeroutput><ref refid="d4/dca/a00048_ac042cfee827b587c1d875b13553a1ea0_1ac042cfee827b587c1d875b13553a1ea0" kindref="member">onInit()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d4/d3a/a00101_a87ae59d4d843c7d01b12f5dadc36c01a_1a87ae59d4d843c7d01b12f5dadc36c01a" kindref="member">MACE::init()</ref> </para></simplesect>
<simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a56a35ff326b587717fd5b2e4fcc338c6_1a56a35ff326b587717fd5b2e4fcc338c6" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::onUpdate</definition>
        <argsstring>() override final</argsstring>
        <name>onUpdate</name>
        <reimplements refid="dd/d1b/a00015_ac66cb6966baa172bf575f4a0ff466e73_1ac66cb6966baa172bf575f4a0ff466e73">onUpdate</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity.update()</ref></computeroutput> is called, <computeroutput><ref refid="d4/dca/a00048_a56a35ff326b587717fd5b2e4fcc338c6_1a56a35ff326b587717fd5b2e4fcc338c6" kindref="member">onUpdate()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d4/d3a/a00101_a857b4aaf5098870c36994338ded0eb88_1a857b4aaf5098870c36994338ded0eb88" kindref="member">MACE::update()</ref> </para></simplesect>
<simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a91120d5946147b49712bbf2bd121e511_1a91120d5946147b49712bbf2bd121e511" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::onRender</definition>
        <argsstring>() override final</argsstring>
        <name>onRender</name>
        <reimplements refid="dd/d1b/a00015_a14defaca92f04c32b892cbc08263d3ac_1a14defaca92f04c32b892cbc08263d3ac">onRender</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="dd/d1b/a00015_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" kindref="member">Entity.render()</ref></computeroutput> is called, <computeroutput><ref refid="d4/dca/a00048_a91120d5946147b49712bbf2bd121e511_1a91120d5946147b49712bbf2bd121e511" kindref="member">onRender()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a60e964f0bad9c5af146dbdbda03dc7fe_1a60e964f0bad9c5af146dbdbda03dc7fe" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::onDestroy</definition>
        <argsstring>() override final</argsstring>
        <name>onDestroy</name>
        <reimplements refid="dd/d1b/a00015_a9ed783f8417120704dfd5988bd037f14_1a9ed783f8417120704dfd5988bd037f14">onDestroy</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="dd/d1b/a00015_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity.destroy()</ref></computeroutput> is called, <computeroutput><ref refid="d4/dca/a00048_a60e964f0bad9c5af146dbdbda03dc7fe_1a60e964f0bad9c5af146dbdbda03dc7fe" kindref="member">onDestroy()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d4/d3a/a00101_a2d1213f9aab871e066d5dbfb316c3dc2_1a2d1213f9aab871e066d5dbfb316c3dc2" kindref="member">MACE::destroy()</ref> </para></simplesect>
<simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/dca/a00048_a96578557ae8a24c1fd185e078b1b2adb_1a96578557ae8a24c1fd185e078b1b2adb" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Text::onClean</definition>
        <argsstring>() override final</argsstring>
        <name>onClean</name>
        <reimplements refid="dd/d1b/a00015_aeadffde284327eea1ba89ce687f28dd9_1aeadffde284327eea1ba89ce687f28dd9">onClean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <reimplementedby refid="d4/d6d/a00055_a4e30b4c62fb168a976063b265dd50c38_1a4e30b4c62fb168a976063b265dd50c38">update</reimplementedby>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="d4/d3a/a00101_a857b4aaf5098870c36994338ded0eb88_1a857b4aaf5098870c36994338ded0eb88" kindref="member">MACE.update()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="dd/d1b/a00015_ac66cb6966baa172bf575f4a0ff466e73_1ac66cb6966baa172bf575f4a0ff466e73" kindref="member">onUpdate()</ref></computeroutput>. </para><para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="dd/d1b/a00015_ac66cb6966baa172bf575f4a0ff466e73_1ac66cb6966baa172bf575f4a0ff466e73" kindref="member">onUpdate()</ref></computeroutput> <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> is false, meaning <computeroutput><ref refid="dd/d1b/a00015_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">init()</ref></computeroutput> was not called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
<para>Should be called by a <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> when the graphical <computeroutput>Window</computeroutput> clears the frame. </para>        </briefdescription>
        <detaileddescription>
<para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="dd/d1b/a00015_a14defaca92f04c32b892cbc08263d3ac_1a14defaca92f04c32b892cbc08263d3ac" kindref="member">onRender()</ref></computeroutput> <simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_a71b165d76cba0c689a85acf2d5b2b2fb_1a71b165d76cba0c689a85acf2d5b2b2fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::hover</definition>
        <argsstring>()</argsstring>
        <name>hover</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d1b/a00015_ac33575a022984f3b0e7d3327d3eb5da9_1ac33575a022984f3b0e7d3327d3eb5da9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::onHover</definition>
        <argsstring>()</argsstring>
        <name>onHover</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="557" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5" prot="public" static="no">
        <name>EntityProperty</name>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a24af0038cdbff90b6ef551f68e5c0bd2" prot="public">
          <name>DEAD</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Bit location representing whether an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> is dead. </para>          </briefdescription>
          <detaileddescription>
<para>If <computeroutput>true,</computeroutput> any <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> holding it will remove it and call <computeroutput>kill()</computeroutput> <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5abcd450b7328279557f5fa705765fbbef" prot="public">
          <name>UPDATE_DISABLED</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Property defining if an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> can be updated. </para>          </briefdescription>
          <detaileddescription>
<para>If this is <computeroutput>FALSE</computeroutput>, <computeroutput><ref refid="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">update()</ref></computeroutput> will be called by it&apos;s parent. <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a4c97680c05c4edc1f62b80042ca468b8" prot="public">
          <name>RENDER_DISABLED</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Property defining if an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> can be rendered. </para>          </briefdescription>
          <detaileddescription>
<para>If this is <computeroutput>false</computeroutput>, <computeroutput><ref refid="dd/d1b/a00015_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" kindref="member">render()</ref></computeroutput> will be called by it&apos;s parent. <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" prot="public">
          <name>INIT</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>&apos;s <ref refid="dd/d1b/a00015_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">init()</ref> function has been called. </para>          </briefdescription>
          <detaileddescription>
<para>If <ref refid="dd/d1b/a00015_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">destroy()</ref> or <ref refid="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">update()</ref> is called and this is <computeroutput>false</computeroutput>, an <computeroutput>InitializationError</computeroutput> is thrown. </para><para>If <ref refid="dd/d1b/a00015_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">init()</ref> is called and this is <computeroutput>true</computeroutput>, an <computeroutput>InitializationError</computeroutput> is thrown. <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" prot="public">
          <name>STRETCH_X</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>&apos;s X position should move when it&apos;s parent is resized. </para>          </briefdescription>
          <detaileddescription>
<para><simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" kindref="member">Entity::STRETCH_Y</ref> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" prot="public">
          <name>STRETCH_Y</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>&apos;s Y position should move when it&apos;s parent is resized. </para>          </briefdescription>
          <detaileddescription>
<para><simplesect kind="see"><para><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" kindref="member">Entity::STRETCH_X</ref> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" prot="public">
          <name>DIRTY</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Flag representing whether this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> is dirty and it&apos;s positions needs to be recalculated. </para>          </briefdescription>
          <detaileddescription>
<para>This will become true under the following conditions:<itemizedlist>
<listitem><para>The <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> has been changed. Assume that any non-const function other than <ref refid="dd/d1b/a00015_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" kindref="member">render()</ref> and <ref refid="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">update()</ref> will trigger this condition.</para></listitem><listitem><para>The window is resized, moved, or created </para></listitem></itemizedlist>
</para><para>Other classes that inherit <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> can also set this to true via <ref refid="dd/d1b/a00015_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" kindref="member">Entity::setProperty(Byte, bool)</ref> </para><para>When an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> becomes dirty, it will propogate up the tree. It&apos;s parent will become dirty, it&apos;s parent will become dirty, etc. This will continue until it reaches the highest level <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput>, which is usually the <computeroutput>GraphicsContext</computeroutput>. From there, it will decide what to do based on it&apos;s <computeroutput><ref refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref></computeroutput> flag. </para><para>Certain <computeroutput>GraphicsContexts</computeroutput> may only render when something is dirty, heavily increasing performance in applications with little moving objects. </para><para>Additionally, an <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref></computeroutput> that is considered dirty will have it&apos;s buffer updated on the GPU side. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="107" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="107" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dd/d1b/a00015_a843be07a7155289c9769e128aed7efdc_1a843be07a7155289c9769e128aed7efdc" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dd/d1b/a00015" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::vector&lt;Entity*&gt; mc::gfx::Entity::children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <initializer>= std::vector&lt;<ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>*&gt;()</initializer>
        <briefdescription>
<para><computeroutput>std::vector</computeroutput> of this <computeroutput><ref refid="dd/d1b/a00015" kindref="compound">Entity</ref>\&apos;s</computeroutput> children. </para>        </briefdescription>
        <detaileddescription>
<para>Use of this variable directly is unrecommended. Use <computeroutput><ref refid="dd/d1b/a00015_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" kindref="member">addChild()</ref></computeroutput> or <computeroutput><ref refid="dd/d1b/a00015_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild()</ref></computeroutput> instead. <simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="563" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/d1b/a00015_a2f423919fa564ce852cb641b74f21d87_1a2f423919fa564ce852cb641b74f21d87" prot="protected" static="no" mutable="no">
        <type><ref refid="d5/de0/a00050" kindref="compound">TransformMatrix</ref></type>
        <definition>TransformMatrix mc::gfx::Entity::transformation</definition>
        <argsstring></argsstring>
        <name>transformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="568" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="d7/d46/a00002_1_bug000001"><xreftitle>Bug</xreftitle><xrefdescription><para>newline with vertical align doesnt really work </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <inheritancegraph>
      <node id="649">
        <label>mc::gfx::Entity</label>
        <link refid="dd/d1b/a00015"/>
      </node>
      <node id="647">
        <label>mc::gfx::Entity2D</label>
        <link refid="d7/d7a/a00016"/>
        <childnode refid="648" relation="public-inheritance">
        </childnode>
      </node>
      <node id="648">
        <label>mc::gfx::GraphicsEntity</label>
        <link refid="de/d11/a00021"/>
        <childnode refid="649" relation="public-inheritance">
        </childnode>
      </node>
      <node id="646">
        <label>mc::gfx::Text</label>
        <link refid="d4/dca/a00048"/>
        <childnode refid="647" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="656">
        <label>T</label>
      </node>
      <node id="655">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="656" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="660">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="656" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="654">
        <label>std::vector&lt; mc::gfx::Entity * &gt;</label>
        <childnode refid="653" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="655" relation="template-instance">
          <edgelabel>&lt; mc::gfx::Entity * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="653">
        <label>mc::gfx::Entity</label>
        <link refid="dd/d1b/a00015"/>
        <childnode refid="654" relation="usage">
          <edgelabel>children</edgelabel>
        </childnode>
        <childnode refid="657" relation="usage">
          <edgelabel>transformation</edgelabel>
        </childnode>
      </node>
      <node id="658">
        <label>mc::Vector&lt; float, 3 &gt;</label>
        <link refid="d1/d84/a00052"/>
        <childnode refid="659" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="661" relation="template-instance">
          <edgelabel>&lt; float, 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="651">
        <label>mc::gfx::Entity2D</label>
        <link refid="d7/d7a/a00016"/>
        <childnode refid="652" relation="public-inheritance">
        </childnode>
      </node>
      <node id="662">
        <label>std::array&lt; T, N &gt;</label>
        <childnode refid="656" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="660" relation="template-instance">
          <edgelabel>&lt; T, N &gt;</edgelabel>
        </childnode>
      </node>
      <node id="657">
        <label>mc::TransformMatrix</label>
        <link refid="d5/de0/a00050"/>
        <childnode refid="658" relation="usage">
          <edgelabel>rotation</edgelabel>
          <edgelabel>scaler</edgelabel>
          <edgelabel>translation</edgelabel>
        </childnode>
      </node>
      <node id="661">
        <label>mc::Vector&lt; T, N &gt;</label>
        <link refid="d1/d84/a00052"/>
        <childnode refid="662" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
      </node>
      <node id="652">
        <label>mc::gfx::GraphicsEntity</label>
        <link refid="de/d11/a00021"/>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="650">
        <label>mc::gfx::Text</label>
        <link refid="d4/dca/a00048"/>
        <childnode refid="651" relation="public-inheritance">
        </childnode>
      </node>
      <node id="659">
        <label>std::array&lt; float, N &gt;</label>
        <childnode refid="660" relation="template-instance">
          <edgelabel>&lt; float, N &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Entity2D.h" line="331" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="331" bodyend="388"/>
    <listofallmembers>
      <member refid="dd/d1b/a00015_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>addChild</name></member>
      <member refid="dd/d1b/a00015_a1bd8b865710f86f1d80644151689d032_1a1bd8b865710f86f1d80644151689d032" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>addChild</name></member>
      <member refid="dd/d1b/a00015_a4e8e092a7f1ef167e014850f99515663_1a4e8e092a7f1ef167e014850f99515663" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>addComponent</name></member>
      <member refid="dd/d1b/a00015_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>addComponent</name></member>
      <member refid="dd/d1b/a00015_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>begin</name></member>
      <member refid="dd/d1b/a00015_a843be07a7155289c9769e128aed7efdc_1a843be07a7155289c9769e128aed7efdc" prot="protected" virt="non-virtual"><scope>mc::gfx::Text</scope><name>children</name></member>
      <member refid="de/d11/a00021_a14a9742f62cedec9f8dcaf74ade5124d_1a14a9742f62cedec9f8dcaf74ade5124d" prot="public" virt="virtual"><scope>mc::gfx::Text</scope><name>clean</name></member>
      <member refid="dd/d1b/a00015_a0dfa57638b24bc0d82d42ccb275ca87e_1a0dfa57638b24bc0d82d42ccb275ca87e" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>clearChildren</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a24af0038cdbff90b6ef551f68e5c0bd2" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>DEAD</name></member>
      <member refid="de/d11/a00021_a099e552dfbea5da421d7a661e9ed2e0d_1a099e552dfbea5da421d7a661e9ed2e0d" prot="public" virt="virtual"><scope>mc::gfx::Text</scope><name>destroy</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>DIRTY</name></member>
      <member refid="dd/d1b/a00015_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>end</name></member>
      <member refid="dd/d1b/a00015_a9f8638fff5431b7c91034e76d44fe12b_1a9f8638fff5431b7c91034e76d44fe12b" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>Entity</name></member>
      <member refid="dd/d1b/a00015_a2be93085d78b0c86a0acf3fb6ca1a4bb_1a2be93085d78b0c86a0acf3fb6ca1a4bb" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>Entity</name></member>
      <member refid="d7/d7a/a00016_accd776cba857d799eac8a51e97792b1d_1accd776cba857d799eac8a51e97792b1d" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>Entity2D</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>EntityProperty</name></member>
      <member refid="d4/dca/a00048_1a85c5c6b5dccb14cd5b507d8de5408d61" prot="private" virt="non-virtual"><scope>mc::gfx::Text</scope><name>font</name></member>
      <member refid="de/d11/a00021_afb519e9bb9d5da9f2d700de144ad681a_1afb519e9bb9d5da9f2d700de144ad681a" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getBuffer</name></member>
      <member refid="de/d11/a00021_a154d25e8f7926f63c6ac617fb5a7583f_1a154d25e8f7926f63c6ac617fb5a7583f" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getBuffer</name></member>
      <member refid="dd/d1b/a00015_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getChild</name></member>
      <member refid="dd/d1b/a00015_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getChild</name></member>
      <member refid="dd/d1b/a00015_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getChildren</name></member>
      <member refid="dd/d1b/a00015_ac0acc4ad4d83a961e77dad1c4bf97c7c_1ac0acc4ad4d83a961e77dad1c4bf97c7c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getComponents</name></member>
      <member refid="d4/dca/a00048_ac866f4dfb8c4658f0ac496efc1dc51bb_1ac866f4dfb8c4658f0ac496efc1dc51bb" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getFont</name></member>
      <member refid="d4/dca/a00048_a49bf7f89e764c6a468c9397c1a0ef077_1a49bf7f89e764c6a468c9397c1a0ef077" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getFont</name></member>
      <member refid="dd/d1b/a00015_a48ec951abc73bb80af1f3a474df33d93_1a48ec951abc73bb80af1f3a474df33d93" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getHeight</name></member>
      <member refid="dd/d1b/a00015_aa0aa51eeaa5f34ba09ed3e544b96645c_1aa0aa51eeaa5f34ba09ed3e544b96645c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getHeight</name></member>
      <member refid="d4/dca/a00048_a1200b2af4a9f7d16d6675b810c22d4ac_1a1200b2af4a9f7d16d6675b810c22d4ac" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getHorizontalAlign</name></member>
      <member refid="d4/dca/a00048_aaea543b6156cbdb7c6830987dab006b2_1aaea543b6156cbdb7c6830987dab006b2" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getLetters</name></member>
      <member refid="de/d11/a00021_a8c60d8a573633d174610037db5f7ab6c_1a8c60d8a573633d174610037db5f7ab6c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getOpacity</name></member>
      <member refid="de/d11/a00021_a35d7eae91b69a75adc30cc469efdcefb_1a35d7eae91b69a75adc30cc469efdcefb" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getOpacity</name></member>
      <member refid="de/d11/a00021_aaf114ceb108c83cc243da609bbb7a58d_1aaf114ceb108c83cc243da609bbb7a58d" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getPaint</name></member>
      <member refid="de/d11/a00021_a93a43f5691c517591c388679fe98a67b_1a93a43f5691c517591c388679fe98a67b" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getPaint</name></member>
      <member refid="dd/d1b/a00015_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getParent</name></member>
      <member refid="dd/d1b/a00015_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getParent</name></member>
      <member refid="dd/d1b/a00015_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getProperties</name></member>
      <member refid="dd/d1b/a00015_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getProperties</name></member>
      <member refid="dd/d1b/a00015_a46570a241b370527b9e8a3e0fb335248_1a46570a241b370527b9e8a3e0fb335248" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getProperty</name></member>
      <member refid="dd/d1b/a00015_ab3e19a2a0c0a1663a7b63feea364d3aa_1ab3e19a2a0c0a1663a7b63feea364d3aa" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getRootParent</name></member>
      <member refid="dd/d1b/a00015_a72a61c49f0e51cad4c69d72def629689_1a72a61c49f0e51cad4c69d72def629689" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getRootParent</name></member>
      <member refid="d4/dca/a00048_a74e2b0cff4c4b1c831621f2e152e1566_1a74e2b0cff4c4b1c831621f2e152e1566" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getText</name></member>
      <member refid="d4/dca/a00048_a30857f6ae5df75574b26a5225123f8de_1a30857f6ae5df75574b26a5225123f8de" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getText</name></member>
      <member refid="dd/d1b/a00015_ae5444c9fabdb47ce42720ef16139cb74_1ae5444c9fabdb47ce42720ef16139cb74" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getTransformation</name></member>
      <member refid="dd/d1b/a00015_a200bbd6f007f227c7afe0c1afb8d0abb_1a200bbd6f007f227c7afe0c1afb8d0abb" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getTransformation</name></member>
      <member refid="d4/dca/a00048_a8a479ed77fb27f199e66efaa0f64b0f0_1a8a479ed77fb27f199e66efaa0f64b0f0" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getVerticalAlign</name></member>
      <member refid="dd/d1b/a00015_a1873ddf0dbe7421dd193906c46a15a22_1a1873ddf0dbe7421dd193906c46a15a22" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getWidth</name></member>
      <member refid="dd/d1b/a00015_a5e1ebb934e48d9a0e758ce46543ac913_1a5e1ebb934e48d9a0e758ce46543ac913" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getWidth</name></member>
      <member refid="dd/d1b/a00015_a5ed09eb98c83fa88f10892eb969cfb51_1a5ed09eb98c83fa88f10892eb969cfb51" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getX</name></member>
      <member refid="dd/d1b/a00015_a8be1810d8c9150ba4b56dc4f419d0b5b_1a8be1810d8c9150ba4b56dc4f419d0b5b" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getX</name></member>
      <member refid="dd/d1b/a00015_ad8d0322ec7c44e409987cd891b9e37f8_1ad8d0322ec7c44e409987cd891b9e37f8" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getY</name></member>
      <member refid="dd/d1b/a00015_a8e1622c328280ccf6d80bae0a80e2a99_1a8e1622c328280ccf6d80bae0a80e2a99" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>getY</name></member>
      <member refid="de/d11/a00021_ad22652ba91df56f78e8f4f972716a839_1ad22652ba91df56f78e8f4f972716a839" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>GraphicsEntity</name></member>
      <member refid="dd/d1b/a00015_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>hasChild</name></member>
      <member refid="dd/d1b/a00015_aff435e798a2cb43bd5d04d79f0d9a542_1aff435e798a2cb43bd5d04d79f0d9a542" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>hasParent</name></member>
      <member refid="d4/dca/a00048_1a264f753bda321fddd906c25878f41894" prot="private" virt="non-virtual"><scope>mc::gfx::Text</scope><name>horzAlign</name></member>
      <member refid="dd/d1b/a00015_a71b165d76cba0c689a85acf2d5b2b2fb_1a71b165d76cba0c689a85acf2d5b2b2fb" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>hover</name></member>
      <member refid="dd/d1b/a00015_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>indexOf</name></member>
      <member refid="de/d11/a00021_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" prot="public" virt="virtual"><scope>mc::gfx::Text</scope><name>init</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>INIT</name></member>
      <member refid="d4/dca/a00048_1aaf99633e551e82721cf00845e5e79f8e" prot="private" virt="non-virtual"><scope>mc::gfx::Text</scope><name>letters</name></member>
      <member refid="dd/d1b/a00015_ad19419a5ae7483fad138e497bf7035a3_1ad19419a5ae7483fad138e497bf7035a3" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>makeDirty</name></member>
      <member refid="d4/dca/a00048_a96578557ae8a24c1fd185e078b1b2adb_1a96578557ae8a24c1fd185e078b1b2adb" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>onClean</name></member>
      <member refid="d4/dca/a00048_a60e964f0bad9c5af146dbdbda03dc7fe_1a60e964f0bad9c5af146dbdbda03dc7fe" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>onDestroy</name></member>
      <member refid="dd/d1b/a00015_ac33575a022984f3b0e7d3327d3eb5da9_1ac33575a022984f3b0e7d3327d3eb5da9" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>onHover</name></member>
      <member refid="d4/dca/a00048_ac042cfee827b587c1d875b13553a1ea0_1ac042cfee827b587c1d875b13553a1ea0" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>onInit</name></member>
      <member refid="d4/dca/a00048_a91120d5946147b49712bbf2bd121e511_1a91120d5946147b49712bbf2bd121e511" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>onRender</name></member>
      <member refid="d4/dca/a00048_a56a35ff326b587717fd5b2e4fcc338c6_1a56a35ff326b587717fd5b2e4fcc338c6" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>onUpdate</name></member>
      <member refid="d4/dca/a00048_a0d9041949e7fb44c6bac6b34ed75fc2c_1a0d9041949e7fb44c6bac6b34ed75fc2c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>operator!=</name></member>
      <member refid="de/d11/a00021_aabb5296d2eded79f26c1684d46349f53_1aabb5296d2eded79f26c1684d46349f53" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity2D::"><scope>mc::gfx::Text</scope><name>operator!=</name></member>
      <member refid="dd/d1b/a00015_a8aaef736185a43f4c700c7f65dcd7d3f_1a8aaef736185a43f4c700c7f65dcd7d3f" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::gfx::Text</scope><name>operator!=</name></member>
      <member refid="d4/dca/a00048_a69b708f52b9167526da61d15ea732402_1a69b708f52b9167526da61d15ea732402" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>operator==</name></member>
      <member refid="de/d11/a00021_ab02900c86058b441dcf6884be269a978_1ab02900c86058b441dcf6884be269a978" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity2D::"><scope>mc::gfx::Text</scope><name>operator==</name></member>
      <member refid="dd/d1b/a00015_a07610ae2fac37c6015a054c781b04918_1a07610ae2fac37c6015a054c781b04918" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::gfx::Text</scope><name>operator==</name></member>
      <member refid="dd/d1b/a00015_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>operator[]</name></member>
      <member refid="dd/d1b/a00015_a97a0a270c1d4c710ac2f4033b52dd9bd_1a97a0a270c1d4c710ac2f4033b52dd9bd" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>operator[]</name></member>
      <member refid="dd/d1b/a00015_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>removeChild</name></member>
      <member refid="dd/d1b/a00015_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>removeChild</name></member>
      <member refid="dd/d1b/a00015_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>render</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a4c97680c05c4edc1f62b80042ca468b8" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>RENDER_DISABLED</name></member>
      <member refid="dd/d1b/a00015_a85a822baaae376b546e66b098b128932_1a85a822baaae376b546e66b098b128932" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>reset</name></member>
      <member refid="dd/d1b/a00015_ae733dfe13631968460ee61fd6a3de551_1ae733dfe13631968460ee61fd6a3de551" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>rotate</name></member>
      <member refid="dd/d1b/a00015_a3197c68ec0bb4569de929bc30fff5508_1a3197c68ec0bb4569de929bc30fff5508" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>scale</name></member>
      <member refid="de/d11/a00021_a7f0243bb5d50df6d76a1705ac954031d_1a7f0243bb5d50df6d76a1705ac954031d" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setBuffer</name></member>
      <member refid="d4/dca/a00048_a65bb7dfd7c5b9adb5136aacf648665a5_1a65bb7dfd7c5b9adb5136aacf648665a5" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setFont</name></member>
      <member refid="dd/d1b/a00015_a1d9f4a5586e05cf2315183be5062e84a_1a1d9f4a5586e05cf2315183be5062e84a" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setHeight</name></member>
      <member refid="d4/dca/a00048_a5e3331f9c5c5e22c2575bf2ab90564c1_1a5e3331f9c5c5e22c2575bf2ab90564c1" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setHorizontalAlign</name></member>
      <member refid="de/d11/a00021_a385a1a844055205bd7f60833a1720cd2_1a385a1a844055205bd7f60833a1720cd2" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setOpacity</name></member>
      <member refid="de/d11/a00021_a996a3857a31e05430a21c4957a9fbd3f_1a996a3857a31e05430a21c4957a9fbd3f" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setPaint</name></member>
      <member refid="dd/d1b/a00015_af07ef60a815c87d686bf81dd92a817eb_1af07ef60a815c87d686bf81dd92a817eb" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setProperties</name></member>
      <member refid="dd/d1b/a00015_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setProperty</name></member>
      <member refid="d4/dca/a00048_a4687548caeacf09f11c8b1207a68033f_1a4687548caeacf09f11c8b1207a68033f" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setText</name></member>
      <member refid="dd/d1b/a00015_a0f9b978bf306a200abca7bde5781475a_1a0f9b978bf306a200abca7bde5781475a" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setTransformation</name></member>
      <member refid="d4/dca/a00048_a19d873e592ba1c69d0464dc860dd92bc_1a19d873e592ba1c69d0464dc860dd92bc" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setVerticalAlign</name></member>
      <member refid="dd/d1b/a00015_ad7bb754e9ada2401d234d49ba85463ad_1ad7bb754e9ada2401d234d49ba85463ad" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setWidth</name></member>
      <member refid="dd/d1b/a00015_ab1227baaa1d429be4d648e782dec6269_1ab1227baaa1d429be4d648e782dec6269" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setX</name></member>
      <member refid="dd/d1b/a00015_a9339119f35be0f3147b994e48bf1d2d7_1a9339119f35be0f3147b994e48bf1d2d7" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>setY</name></member>
      <member refid="dd/d1b/a00015_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>size</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>STRETCH_X</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>STRETCH_Y</name></member>
      <member refid="d4/dca/a00048_1a86281ac423808cd2d900ecd4c341df25" prot="private" virt="non-virtual"><scope>mc::gfx::Text</scope><name>text</name></member>
      <member refid="d4/dca/a00048_aa53b68bd304ff0766d87546708d61070_1aa53b68bd304ff0766d87546708d61070" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>Text</name></member>
      <member refid="d4/dca/a00048_a956517bd5a6380c73da854bdc5385fa4_1a956517bd5a6380c73da854bdc5385fa4" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>Text</name></member>
      <member refid="dd/d1b/a00015_a2f423919fa564ce852cb641b74f21d87_1a2f423919fa564ce852cb641b74f21d87" prot="protected" virt="non-virtual"><scope>mc::gfx::Text</scope><name>transformation</name></member>
      <member refid="dd/d1b/a00015_a72c29a24e2436cdc85972a9d9f67d702_1a72c29a24e2436cdc85972a9d9f67d702" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>translate</name></member>
      <member refid="dd/d1b/a00015_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" prot="protected" virt="virtual"><scope>mc::gfx::Text</scope><name>update</name></member>
      <member refid="dd/d1b/a00015_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5abcd450b7328279557f5fa705765fbbef" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>UPDATE_DISABLED</name></member>
      <member refid="d4/dca/a00048_1a2ec879f9d5a5f89f912a7bef739546fc" prot="private" virt="non-virtual"><scope>mc::gfx::Text</scope><name>vertAlign</name></member>
      <member refid="dd/d1b/a00015_a675362ba8b043625682855c25e093539_1a675362ba8b043625682855c25e093539" prot="public" virt="virtual"><scope>mc::gfx::Text</scope><name>~Entity</name></member>
      <member refid="de/d11/a00021_a7ef9de5fa4914bd3b155dd96237bf323_1a7ef9de5fa4914bd3b155dd96237bf323" prot="public" virt="virtual"><scope>mc::gfx::Text</scope><name>~GraphicsEntity</name></member>
      <member refid="d4/dca/a00048_a98ef915c3d950b31553f25504ef7915c_1a98ef915c3d950b31553f25504ef7915c" prot="public" virt="non-virtual"><scope>mc::gfx::Text</scope><name>~Text</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
