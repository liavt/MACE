<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="db/df3/a00034" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::Texture</compoundname>
    <basecompoundref refid="d3/dfe/a00025" prot="public" virt="non-virtual">mc::gfx::Object</basecompoundref>
    <includes refid="dd/d32/a00041" local="no">Buffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/df3/a00034_1a49586468450408856fa10aed40ef4bce" prot="private" static="no" mutable="no">
        <type>GLenum</type>
        <definition>GLenum mc::gfx::Texture::target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <initializer>= GL_TEXTURE_2D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="174" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/a00034_1a14a18551970c09664881a37cb96ade3d" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009" kindref="compound">Color</ref></type>
        <definition>Color mc::gfx::Texture::paint</definition>
        <argsstring></argsstring>
        <name>paint</name>
        <initializer>= <ref refid="da/da0/a00009" kindref="compound">Color</ref>(1.0f, 1.0f, 1.0f, 1.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="176" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/df3/a00034_1a7e7bc0b3087bf23ab4bfb494a00f3346" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float mc::gfx::Texture::opacity</definition>
        <argsstring></argsstring>
        <name>opacity</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="178" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/df3/a00034_af9bf71115d34b7064254348e7743c37b_1af9bf71115d34b7064254348e7743c37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <reimplements refid="d3/dfe/a00025_ab2fb38f2d3ec9640f61c730456538914_1ab2fb38f2d3ec9640f61c730456538914">init</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a56741a1f705b7b3e6ddb085c1fe8fe45_1a56741a1f705b7b3e6ddb085c1fe8fe45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <reimplements refid="d3/dfe/a00025_a58c034fb6bdf87e3f0d312bd3a563e80_1a58c034fb6bdf87e3f0d312bd3a563e80">destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a70c25cd28c47f4201388aa1216e3cd2d_1a70c25cd28c47f4201388aa1216e3cd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::setData</definition>
        <argsstring>(const void *data, Size width, Size height, GLenum type=GL_FLOAT, GLenum format=GL_RGB, GLenum internalFormat=GL_RGB, Index mipmapLevel=0)</argsstring>
        <name>setData</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="d9/da5/a00075_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="d9/da5/a00075_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
          <defval>GL_FLOAT</defval>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
          <defval>GL_RGB</defval>
        </param>
        <param>
          <type>GLenum</type>
          <declname>internalFormat</declname>
          <defval>GL_RGB</defval>
        </param>
        <param>
          <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>mipmapLevel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a4c619193ee9a4b354bdf5b0382302197_1a4c619193ee9a4b354bdf5b0382302197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::loadFile</definition>
        <argsstring>(const char *file)</argsstring>
        <name>loadFile</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_acf4bc454a146b237fa87756c29eefb90_1acf4bc454a146b237fa87756c29eefb90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::setTarget</definition>
        <argsstring>(const GLenum target)</argsstring>
        <name>setTarget</name>
        <param>
          <type>const GLenum</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a1974ac906f5e0d5e796dc82c2e05c0ec_1a1974ac906f5e0d5e796dc82c2e05c0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLenum</type>
        <definition>GLenum mc::gfx::Texture::getTarget</definition>
        <argsstring>()</argsstring>
        <name>getTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a4abd1d7944c0c80fbd484fad810d8b77_1a4abd1d7944c0c80fbd484fad810d8b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009" kindref="compound">Color</ref> &amp;</type>
        <definition>Color&amp; mc::gfx::Texture::getPaint</definition>
        <argsstring>()</argsstring>
        <name>getPaint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a89e965418f2da04a68ba9724623e9ae2_1a89e965418f2da04a68ba9724623e9ae2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009" kindref="compound">Color</ref> &amp;</type>
        <definition>const Color&amp; mc::gfx::Texture::getPaint</definition>
        <argsstring>() const </argsstring>
        <name>getPaint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a53696fcdbef5ef8dfa6bf9a90c649be7_1a53696fcdbef5ef8dfa6bf9a90c649be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::setPaint</definition>
        <argsstring>(const Color &amp;c)</argsstring>
        <name>setPaint</name>
        <param>
          <type>const <ref refid="da/da0/a00009" kindref="compound">Color</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a73f099a1c1c226e101c28c70b517e23b_1a73f099a1c1c226e101c28c70b517e23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mc::gfx::Texture::getOpacity</definition>
        <argsstring>()</argsstring>
        <name>getOpacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_af59d6a7103ceacc08e707882043eaba8_1af59d6a7103ceacc08e707882043eaba8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float mc::gfx::Texture::getOpacity</definition>
        <argsstring>() const </argsstring>
        <name>getOpacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_aebd0d76cdc2e89864118b4c119cc09da_1aebd0d76cdc2e89864118b4c119cc09da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::setOpacity</definition>
        <argsstring>(const float f)</argsstring>
        <name>setOpacity</name>
        <param>
          <type>const float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a984b861a6a3cb3e9e46c9e93e306fcef_1a984b861a6a3cb3e9e46c9e93e306fcef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::isCreated</definition>
        <argsstring>() const </argsstring>
        <name>isCreated</name>
        <reimplements refid="d3/dfe/a00025_ad729e7f4f11794cdfedec12fa46e2e76_1ad729e7f4f11794cdfedec12fa46e2e76">isCreated</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a6ec1b99fe4f8eb9f4c9566c1a79c8d15_1a6ec1b99fe4f8eb9f4c9566c1a79c8d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::setParameter</definition>
        <argsstring>(const GLenum &amp;name, const GLint &amp;value)</argsstring>
        <name>setParameter</name>
        <param>
          <type>const GLenum &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const GLint &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a7f40e8f1091382117829940678577b55_1a7f40e8f1091382117829940678577b55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::operator==</definition>
        <argsstring>(const Texture &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="db/df3/a00034" kindref="compound">Texture</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_ac43bd1d99904943697d6a76c238f9be0_1ac43bd1d99904943697d6a76c238f9be0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::operator!=</definition>
        <argsstring>(const Texture &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="db/df3/a00034" kindref="compound">Texture</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a17aaf7fd8fcdc8604a34efd1bef8bbea_1a17aaf7fd8fcdc8604a34efd1bef8bbea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::operator&gt;=</definition>
        <argsstring>(const Texture &amp;other) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="db/df3/a00034" kindref="compound">Texture</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_af98de439a73d046ad7e2652590b75bfb_1af98de439a73d046ad7e2652590b75bfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::operator&lt;=</definition>
        <argsstring>(const Texture &amp;other) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="db/df3/a00034" kindref="compound">Texture</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a8ae6ef0013162367f11037e1d5ad4c98_1a8ae6ef0013162367f11037e1d5ad4c98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::operator&gt;</definition>
        <argsstring>(const Texture &amp;other) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="db/df3/a00034" kindref="compound">Texture</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/df3/a00034_a7a1c0068a86b8df8a8ffb18a8224d235_1a7a1c0068a86b8df8a8ffb18a8224d235" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Texture::operator&lt;</definition>
        <argsstring>(const Texture &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="db/df3/a00034" kindref="compound">Texture</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dfe/a00025_a9a59b47f57c7a7e83ee9d268f692cc4d_1a9a59b47f57c7a7e83ee9d268f692cc4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Object::bind</definition>
        <argsstring>() const </argsstring>
        <name>bind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dfe/a00025_af36391f915aeed8452b6f21e926932f2_1af36391f915aeed8452b6f21e926932f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Object::unbind</definition>
        <argsstring>() const </argsstring>
        <name>unbind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dfe/a00025_adcc524a5d4ce6e79e9c1893c0f935559_1adcc524a5d4ce6e79e9c1893c0f935559" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Object::getID</definition>
        <argsstring>() const </argsstring>
        <name>getID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="db/df3/a00034_1aa5ceae4927c83da121132589791254f7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Texture::bindIndex</definition>
        <argsstring>(const Index &amp;id) const </argsstring>
        <name>bindIndex</name>
        <reimplements refid="d3/dfe/a00025_a45afac15d5bd595db56bad1a096befce_1a45afac15d5bd595db56bad1a096befce">bindIndex</reimplements>
        <param>
          <type>const <ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="180" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d3/dfe/a00025_a5c44ad260b3bd8a5825c434037d5f89f_1a5c44ad260b3bd8a5825c434037d5f89f" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/da5/a00075_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Object::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Buffer.h" line="37" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="414">
        <label>mc::gfx::Texture</label>
        <link refid="db/df3/a00034"/>
        <childnode refid="415" relation="public-inheritance">
        </childnode>
      </node>
      <node id="415">
        <label>mc::gfx::Object</label>
        <link refid="d3/dfe/a00025"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="416">
        <label>mc::gfx::Texture</label>
        <link refid="db/df3/a00034"/>
        <childnode refid="417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="417">
        <label>mc::gfx::Object</label>
        <link refid="d3/dfe/a00025"/>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Buffer.h" line="142" column="1" bodyfile="include/MACE/Graphics/Buffer.h" bodystart="142" bodyend="181"/>
    <listofallmembers>
      <member refid="d3/dfe/a00025_a9a59b47f57c7a7e83ee9d268f692cc4d_1a9a59b47f57c7a7e83ee9d268f692cc4d" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>bind</name></member>
      <member refid="db/df3/a00034_1aa5ceae4927c83da121132589791254f7" prot="private" virt="virtual"><scope>mc::gfx::Texture</scope><name>bindIndex</name></member>
      <member refid="db/df3/a00034_a56741a1f705b7b3e6ddb085c1fe8fe45_1a56741a1f705b7b3e6ddb085c1fe8fe45" prot="public" virt="virtual"><scope>mc::gfx::Texture</scope><name>destroy</name></member>
      <member refid="d3/dfe/a00025_adcc524a5d4ce6e79e9c1893c0f935559_1adcc524a5d4ce6e79e9c1893c0f935559" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>getID</name></member>
      <member refid="db/df3/a00034_a73f099a1c1c226e101c28c70b517e23b_1a73f099a1c1c226e101c28c70b517e23b" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>getOpacity</name></member>
      <member refid="db/df3/a00034_af59d6a7103ceacc08e707882043eaba8_1af59d6a7103ceacc08e707882043eaba8" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>getOpacity</name></member>
      <member refid="db/df3/a00034_a4abd1d7944c0c80fbd484fad810d8b77_1a4abd1d7944c0c80fbd484fad810d8b77" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>getPaint</name></member>
      <member refid="db/df3/a00034_a89e965418f2da04a68ba9724623e9ae2_1a89e965418f2da04a68ba9724623e9ae2" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>getPaint</name></member>
      <member refid="db/df3/a00034_a1974ac906f5e0d5e796dc82c2e05c0ec_1a1974ac906f5e0d5e796dc82c2e05c0ec" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>getTarget</name></member>
      <member refid="d3/dfe/a00025_a5c44ad260b3bd8a5825c434037d5f89f_1a5c44ad260b3bd8a5825c434037d5f89f" prot="protected" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>id</name></member>
      <member refid="db/df3/a00034_af9bf71115d34b7064254348e7743c37b_1af9bf71115d34b7064254348e7743c37b" prot="public" virt="virtual"><scope>mc::gfx::Texture</scope><name>init</name></member>
      <member refid="db/df3/a00034_a984b861a6a3cb3e9e46c9e93e306fcef_1a984b861a6a3cb3e9e46c9e93e306fcef" prot="public" virt="virtual"><scope>mc::gfx::Texture</scope><name>isCreated</name></member>
      <member refid="db/df3/a00034_a4c619193ee9a4b354bdf5b0382302197_1a4c619193ee9a4b354bdf5b0382302197" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>loadFile</name></member>
      <member refid="db/df3/a00034_1a7e7bc0b3087bf23ab4bfb494a00f3346" prot="private" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>opacity</name></member>
      <member refid="db/df3/a00034_ac43bd1d99904943697d6a76c238f9be0_1ac43bd1d99904943697d6a76c238f9be0" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>operator!=</name></member>
      <member refid="db/df3/a00034_a7a1c0068a86b8df8a8ffb18a8224d235_1a7a1c0068a86b8df8a8ffb18a8224d235" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>operator&lt;</name></member>
      <member refid="db/df3/a00034_af98de439a73d046ad7e2652590b75bfb_1af98de439a73d046ad7e2652590b75bfb" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>operator&lt;=</name></member>
      <member refid="db/df3/a00034_a7f40e8f1091382117829940678577b55_1a7f40e8f1091382117829940678577b55" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>operator==</name></member>
      <member refid="db/df3/a00034_a8ae6ef0013162367f11037e1d5ad4c98_1a8ae6ef0013162367f11037e1d5ad4c98" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>operator&gt;</name></member>
      <member refid="db/df3/a00034_a17aaf7fd8fcdc8604a34efd1bef8bbea_1a17aaf7fd8fcdc8604a34efd1bef8bbea" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>operator&gt;=</name></member>
      <member refid="db/df3/a00034_1a14a18551970c09664881a37cb96ade3d" prot="private" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>paint</name></member>
      <member refid="db/df3/a00034_a70c25cd28c47f4201388aa1216e3cd2d_1a70c25cd28c47f4201388aa1216e3cd2d" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>setData</name></member>
      <member refid="db/df3/a00034_aebd0d76cdc2e89864118b4c119cc09da_1aebd0d76cdc2e89864118b4c119cc09da" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>setOpacity</name></member>
      <member refid="db/df3/a00034_a53696fcdbef5ef8dfa6bf9a90c649be7_1a53696fcdbef5ef8dfa6bf9a90c649be7" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>setPaint</name></member>
      <member refid="db/df3/a00034_a6ec1b99fe4f8eb9f4c9566c1a79c8d15_1a6ec1b99fe4f8eb9f4c9566c1a79c8d15" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>setParameter</name></member>
      <member refid="db/df3/a00034_acf4bc454a146b237fa87756c29eefb90_1acf4bc454a146b237fa87756c29eefb90" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>setTarget</name></member>
      <member refid="db/df3/a00034_1a49586468450408856fa10aed40ef4bce" prot="private" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>target</name></member>
      <member refid="d3/dfe/a00025_af36391f915aeed8452b6f21e926932f2_1af36391f915aeed8452b6f21e926932f2" prot="public" virt="non-virtual"><scope>mc::gfx::Texture</scope><name>unbind</name></member>
      <member refid="d3/dfe/a00025_a4ea5dacb16804b43f4be8c2567bbd48b_1a4ea5dacb16804b43f4be8c2567bbd48b" prot="public" virt="virtual"><scope>mc::gfx::Texture</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
