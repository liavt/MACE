<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dc/de2/a00024" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::Image</compoundname>
    <basecompoundref refid="d4/d51/a00017" prot="public" virt="non-virtual">mc::gfx::Entity2D</basecompoundref>
    <includes refid="d1/d6f/a00063" local="no">Entity2D.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="dc/de2/a00024_ab57f3809b84c3cb772ef526d09e6c482_1ab57f3809b84c3cb772ef526d09e6c482" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class RenderProtocol&lt; Image &gt;</definition>
        <argsstring></argsstring>
        <name>RenderProtocol&lt; Image &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="92" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/de2/a00024_1aef819f256f48332ea5bc2e45744392b4" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011" kindref="compound">ColorAttachment</ref></type>
        <definition>ColorAttachment mc::gfx::Image::texture</definition>
        <argsstring></argsstring>
        <name>texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="124" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="dc/de2/a00024_a45e77262aacc36fce332d473f7eb1287_1a45e77262aacc36fce332d473f7eb1287" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mc::gfx::Image::getProtocol</definition>
        <argsstring>()</argsstring>
        <name>getProtocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="98" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/de2/a00024_a747d1b07298b3619197b94cc5390b085_1a747d1b07298b3619197b94cc5390b085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Image::Image</definition>
        <argsstring>() noexcept</argsstring>
        <name>Image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_a84278cf2fab0a9ca3293021ba5db154a_1a84278cf2fab0a9ca3293021ba5db154a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Image::Image</definition>
        <argsstring>(const ColorAttachment &amp;col)</argsstring>
        <name>Image</name>
        <param>
          <type>const <ref refid="da/d45/a00011" kindref="compound">ColorAttachment</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_a43f22f215199e585da6cf42ea4ac42dc_1a43f22f215199e585da6cf42ea4ac42dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::Image::~Image</definition>
        <argsstring>()=default</argsstring>
        <name>~Image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_a5e7c2560a7fd3078207cba413967e809_1a5e7c2560a7fd3078207cba413967e809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Image::setTexture</definition>
        <argsstring>(const ColorAttachment &amp;tex)</argsstring>
        <name>setTexture</name>
        <param>
          <type>const <ref refid="da/d45/a00011" kindref="compound">ColorAttachment</ref> &amp;</type>
          <declname>tex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_ae0221eff61ab9695984916c4cbae595e_1ae0221eff61ab9695984916c4cbae595e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011" kindref="compound">ColorAttachment</ref> &amp;</type>
        <definition>ColorAttachment&amp; mc::gfx::Image::getTexture</definition>
        <argsstring>()</argsstring>
        <name>getTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_a12dfa8342ec29459f454be0c14ab3a2d_1a12dfa8342ec29459f454be0c14ab3a2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011" kindref="compound">ColorAttachment</ref> &amp;</type>
        <definition>const ColorAttachment&amp; mc::gfx::Image::getTexture</definition>
        <argsstring>() const </argsstring>
        <name>getTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_ae4e53e6761f89bfab4229dbc4aa8c431_1ae4e53e6761f89bfab4229dbc4aa8c431" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Image::operator==</definition>
        <argsstring>(const Image &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="dc/de2/a00024" kindref="compound">Image</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_a9db1175cb96b21330f12c9bb98d057a1_1a9db1175cb96b21330f12c9bb98d057a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Image::operator!=</definition>
        <argsstring>(const Image &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="dc/de2/a00024" kindref="compound">Image</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d51/a00017_a9ac8e657e17a7d6d02710239819a0bfd_1a9ac8e657e17a7d6d02710239819a0bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d84/a00052" kindref="compound">ogl::UniformBuffer</ref> &amp;</type>
        <definition>ogl::UniformBuffer&amp; mc::gfx::Entity2D::getBuffer</definition>
        <argsstring>()</argsstring>
        <name>getBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d51/a00017_aca4ab2aa9f36e7fb33b2bfe1e7e0a91b_1aca4ab2aa9f36e7fb33b2bfe1e7e0a91b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d1/d84/a00052" kindref="compound">ogl::UniformBuffer</ref> &amp;</type>
        <definition>const ogl::UniformBuffer&amp; mc::gfx::Entity2D::getBuffer</definition>
        <argsstring>() const </argsstring>
        <name>getBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d51/a00017_a28bce79ce1af256658d53801acd44a61_1a28bce79ce1af256658d53801acd44a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity2D::setBuffer</definition>
        <argsstring>(const ogl::UniformBuffer &amp;newBuffer)</argsstring>
        <name>setBuffer</name>
        <param>
          <type>const <ref refid="d1/d84/a00052" kindref="compound">ogl::UniformBuffer</ref> &amp;</type>
          <declname>newBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d51/a00017_a29f4d06b1ac785016117d8c9464f2c5b_1a29f4d06b1ac785016117d8c9464f2c5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity2D::operator==</definition>
        <argsstring>(const Entity2D &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d4/d51/a00017" kindref="compound">Entity2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_ab02900c86058b441dcf6884be269a978_1ab02900c86058b441dcf6884be269a978" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::GraphicsEntity::operator==</definition>
        <argsstring>(const GraphicsEntity &amp;other) const  noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d7/de0/a00022" kindref="compound">GraphicsEntity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a07610ae2fac37c6015a054c781b04918_1a07610ae2fac37c6015a054c781b04918" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::operator==</definition>
        <argsstring>(const Entity &amp;other) const  noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if 2 <computeroutput>Entities</computeroutput> have the same children, parent, and properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>An <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> compare this one to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if they are equal </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" kindref="member">getParent() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" kindref="member">getChildren() const</ref> </para></simplesect>
<simplesect kind="see"><para>operator!= </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d51/a00017_ab4aec91966dc291d6ef351270af4e4dd_1ab4aec91966dc291d6ef351270af4e4dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity2D::operator!=</definition>
        <argsstring>(const Entity2D &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d4/d51/a00017" kindref="compound">Entity2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_aabb5296d2eded79f26c1684d46349f53_1aabb5296d2eded79f26c1684d46349f53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::GraphicsEntity::operator!=</definition>
        <argsstring>(const GraphicsEntity &amp;other) const  noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d7/de0/a00022" kindref="compound">GraphicsEntity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a8aaef736185a43f4c700c7f65dcd7d3f_1a8aaef736185a43f4c700c7f65dcd7d3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::operator!=</definition>
        <argsstring>(const Entity &amp;other) const  noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if 2 <computeroutput>Entities</computeroutput> don&apos;t have the same children, parent, and properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>An <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> compare this one to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if they are equal </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" kindref="member">getParent() const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" kindref="member">getChildren() const</ref> </para></simplesect>
<simplesect kind="see"><para>operator== </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a14a9742f62cedec9f8dcaf74ade5124d_1a14a9742f62cedec9f8dcaf74ade5124d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::clean</definition>
        <argsstring>() final</argsstring>
        <name>clean</name>
        <reimplements refid="d7/d7a/a00016_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e">clean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::init</definition>
        <argsstring>() final</argsstring>
        <name>init</name>
        <reimplements refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c">init</reimplements>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="d4/d3a/a00101_a87ae59d4d843c7d01b12f5dadc36c01a_1a87ae59d4d843c7d01b12f5dadc36c01a" kindref="member">MACE.init()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="d7/d7a/a00016_a11cf6a76902a6e19eee7a002468cb118_1a11cf6a76902a6e19eee7a002468cb118" kindref="member">onInit()</ref></computeroutput> </para><para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="d7/d7a/a00016_a11cf6a76902a6e19eee7a002468cb118_1a11cf6a76902a6e19eee7a002468cb118" kindref="member">onInit()</ref></computeroutput> <simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> is true, meaning <computeroutput><ref refid="d7/de0/a00022_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" kindref="member">init()</ref></computeroutput> has already been called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a099e552dfbea5da421d7a661e9ed2e0d_1a099e552dfbea5da421d7a661e9ed2e0d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::destroy</definition>
        <argsstring>() final</argsstring>
        <name>destroy</name>
        <reimplements refid="d7/d7a/a00016_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3">destroy</reimplements>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="d4/d3a/a00101_a2d1213f9aab871e066d5dbfb316c3dc2_1a2d1213f9aab871e066d5dbfb316c3dc2" kindref="member">MACE.destroy()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="d7/d7a/a00016_a9ed783f8417120704dfd5988bd037f14_1a9ed783f8417120704dfd5988bd037f14" kindref="member">onDestroy()</ref></computeroutput>. Sets <computeroutput><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> to be false </para><para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="d7/d7a/a00016_a9ed783f8417120704dfd5988bd037f14_1a9ed783f8417120704dfd5988bd037f14" kindref="member">onDestroy()</ref></computeroutput> <simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> is false, meaning <computeroutput><ref refid="d7/de0/a00022_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" kindref="member">init()</ref></computeroutput> was not called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a8c60d8a573633d174610037db5f7ab6c_1a8c60d8a573633d174610037db5f7ab6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mc::gfx::GraphicsEntity::getOpacity</definition>
        <argsstring>()</argsstring>
        <name>getOpacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a35d7eae91b69a75adc30cc469efdcefb_1a35d7eae91b69a75adc30cc469efdcefb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float mc::gfx::GraphicsEntity::getOpacity</definition>
        <argsstring>() const </argsstring>
        <name>getOpacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="657" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/de0/a00022_a385a1a844055205bd7f60833a1720cd2_1a385a1a844055205bd7f60833a1720cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::GraphicsEntity::setOpacity</definition>
        <argsstring>(const float f)</argsstring>
        <name>setOpacity</name>
        <param>
          <type>const float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="661" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;Entity*&gt;&amp; mc::gfx::Entity::getChildren</definition>
        <argsstring>() const </argsstring>
        <name>getChildren</name>
        <briefdescription>
<para>Gets all of this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s</computeroutput> children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an <computeroutput>std::vector</computeroutput> with all children of this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::removeChild</definition>
        <argsstring>(const Entity &amp;e)</argsstring>
        <name>removeChild</name>
        <param>
          <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Removes a child by reference. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ObjectNotFoundInArray</parametername>
</parameternamelist>
<parameterdescription>
<para>if <ref refid="d7/d7a/a00016_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" kindref="member">hasChild(Entity&amp;) const</ref> returns <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a child </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" kindref="member">removeChild(Index)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::removeChild</definition>
        <argsstring>(Index index)</argsstring>
        <name>removeChild</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a child via location. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if the index is less than 0 or greater than <ref refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild(const Entity&amp;)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::hasChild</definition>
        <argsstring>(Entity &amp;e) const </argsstring>
        <name>hasChild</name>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Checks to see if this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> contains an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> doesn&apos;t contain the referenced <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>, <computeroutput>true</computeroutput> otherwise </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp; ) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a0dfa57638b24bc0d82d42ccb275ca87e_1a0dfa57638b24bc0d82d42ccb275ca87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::clearChildren</definition>
        <argsstring>()</argsstring>
        <name>clearChildren</name>
        <briefdescription>
<para>Removes EVERY <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> from this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" kindref="member">removeChild(Index)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild(const Entity&amp;)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::operator[]</definition>
        <argsstring>(Index i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This is different than <computeroutput><ref refid="d7/d7a/a00016_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild()</ref></computeroutput> because <computeroutput>operator[]</computeroutput> doesn&apos;t do bounds checking. Accessing an invalid location will result in a memory error. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a97a0a270c1d4c710ac2f4033b52dd9bd_1a97a0a270c1d4c710ac2f4033b52dd9bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>const Entity&amp; mc::gfx::Entity::operator[]</definition>
        <argsstring>(Index i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <ref refid="d7/d7a/a00016_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[](Index i)</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" kindref="member">getChild(Index) const</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::getChild</definition>
        <argsstring>(Index i)</argsstring>
        <name>getChild</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Retrieves a child at a certain index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>i</computeroutput> is less than <computeroutput>0</computeroutput> or greater than <ref refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>const Entity&amp; mc::gfx::Entity::getChild</definition>
        <argsstring>(Index i) const </argsstring>
        <name>getChild</name>
        <param>
          <type><ref refid="d9/df8/a00096_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <ref refid="d7/d7a/a00016_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Index</computeroutput> of the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> located at <computeroutput>i</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexOutOfBounds</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>i</computeroutput> is less than <computeroutput>0</computeroutput> or greater than <ref refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" kindref="member">indexOf(const Entity&amp;) const</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mc::gfx::Entity::indexOf</definition>
        <argsstring>(const Entity &amp;e) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Finds the location of an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> in this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Location of <computeroutput>e,</computeroutput> or -1 if <computeroutput>e</computeroutput> is not a child of this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" kindref="member">operator[]</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" kindref="member">getChild(Index)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> * &gt;::iterator</type>
        <definition>std::vector&lt;Entity*&gt;::iterator mc::gfx::Entity::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Gets an iterator over this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> for enchanced for loops. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator of the first <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" kindref="member">end()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> * &gt;::iterator</type>
        <definition>std::vector&lt;Entity*&gt;::iterator mc::gfx::Entity::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Gets an iterator over this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> for enchanced for loops. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator of the last <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" kindref="member">begin()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" kindref="member">size()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/df8/a00096_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Entity::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Calculates the amount of children this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> has. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size of this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d44/a00098_a6179dec54918a9dc1c86f419bc000343_1a6179dec54918a9dc1c86f419bc000343" kindref="member">EntityProperties</ref> &amp;</type>
        <definition>EntityProperties&amp; mc::gfx::Entity::getProperties</definition>
        <argsstring>()</argsstring>
        <name>getProperties</name>
        <briefdescription>
<para>Retrieves the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s</computeroutput> properties as a <computeroutput>ByteField</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<simplesect kind="return"><para>The current properties belonging to this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" kindref="member">getProperties() const</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d1/d44/a00098_a6179dec54918a9dc1c86f419bc000343_1a6179dec54918a9dc1c86f419bc000343" kindref="member">EntityProperties</ref> &amp;</type>
        <definition>const EntityProperties&amp; mc::gfx::Entity::getProperties</definition>
        <argsstring>() const </argsstring>
        <name>getProperties</name>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <computeroutput><ref refid="d7/d7a/a00016_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current properties belonging to this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_af07ef60a815c87d686bf81dd92a817eb_1af07ef60a815c87d686bf81dd92a817eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setProperties</definition>
        <argsstring>(EntityProperties &amp;b)</argsstring>
        <name>setProperties</name>
        <param>
          <type><ref refid="d1/d44/a00098_a6179dec54918a9dc1c86f419bc000343_1a6179dec54918a9dc1c86f419bc000343" kindref="member">EntityProperties</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set the properties for this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>New <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> properties </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a46570a241b370527b9e8a3e0fb335248_1a46570a241b370527b9e8a3e0fb335248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::getProperty</definition>
        <argsstring>(const Byte position) const </argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="d9/df8/a00096_a7c6e1fbcd00ba27af6389a4a891788ca_1a7c6e1fbcd00ba27af6389a4a891788ca" kindref="member">Byte</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Retrieve the value of a property. </para>        </briefdescription>
        <detaileddescription>
<para>Property consants start with <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>::</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the property based on a constant </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> or <computeroutput>false</computeroutput> based on the postition </para></simplesect>
<simplesect kind="see"><para>setProperty(Index, bool) </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setProperty</definition>
        <argsstring>(const Byte position, const bool value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const <ref refid="d9/df8/a00096_a7c6e1fbcd00ba27af6389a4a891788ca_1a7c6e1fbcd00ba27af6389a4a891788ca" kindref="member">Byte</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a property to be <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput>.Property consants start with <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>::</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the property based on a constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether it is <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>getProperty(Index) const </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" kindref="member">getProperties()</ref> </para></simplesect>
<simplesect kind="see"><para>setProperties(ByteField&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ae5444c9fabdb47ce42720ef16139cb74_1ae5444c9fabdb47ce42720ef16139cb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d79/a00051" kindref="compound">TransformMatrix</ref> &amp;</type>
        <definition>TransformMatrix&amp; mc::gfx::Entity::getTransformation</definition>
        <argsstring>()</argsstring>
        <name>getTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a200bbd6f007f227c7afe0c1afb8d0abb_1a200bbd6f007f227c7afe0c1afb8d0abb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/d79/a00051" kindref="compound">TransformMatrix</ref> &amp;</type>
        <definition>const TransformMatrix&amp; mc::gfx::Entity::getTransformation</definition>
        <argsstring>() const </argsstring>
        <name>getTransformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a0f9b978bf306a200abca7bde5781475a_1a0f9b978bf306a200abca7bde5781475a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setTransformation</definition>
        <argsstring>(TransformMatrix &amp;trans)</argsstring>
        <name>setTransformation</name>
        <param>
          <type><ref refid="d2/d79/a00051" kindref="compound">TransformMatrix</ref> &amp;</type>
          <declname>trans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ac977cb0fc9ee90771c88bbdeaf234a03_1ac977cb0fc9ee90771c88bbdeaf234a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::translate</definition>
        <argsstring>(float x, float y, float z=0.0f)</argsstring>
        <name>translate</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
          <defval>0.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ad7e0ab13473c643feb43358074aab3c2_1ad7e0ab13473c643feb43358074aab3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::rotate</definition>
        <argsstring>(float x, float y, float z=0.0f)</argsstring>
        <name>rotate</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
          <defval>0.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a14fda0e29efc83be1bd18b3cecb76747_1a14fda0e29efc83be1bd18b3cecb76747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
        <definition>Entity&amp; mc::gfx::Entity::scale</definition>
        <argsstring>(float x, float y, float z=1.0f)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *const</type>
        <definition>Entity* const mc::gfx::Entity::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Retrieve this <computeroutput>Entitys</computeroutput> parent `Entity. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput> @return A</computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref><computeroutput>which contains</computeroutput>this` <simplesect kind="see"><para>Entity::hasChild(const Entity&amp;) const; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *const</type>
        <definition>const Entity* const mc::gfx::Entity::getParent</definition>
        <argsstring>() const </argsstring>
        <name>getParent</name>
        <briefdescription>
<para><computeroutput>const</computeroutput> version of <computeroutput><ref refid="d7/d7a/a00016_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" kindref="member">getParent()</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> which contains <computeroutput>this</computeroutput> </para></simplesect>
<simplesect kind="see"><para>Entity::hasChild(const Entity&amp;) const; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_aff435e798a2cb43bd5d04d79f0d9a542_1aff435e798a2cb43bd5d04d79f0d9a542" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Entity::hasParent</definition>
        <argsstring>() const </argsstring>
        <name>hasParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addChild</definition>
        <argsstring>(Entity &amp;e)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="421" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a1bd8b865710f86f1d80644151689d032_1a1bd8b865710f86f1d80644151689d032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addChild</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a4e8e092a7f1ef167e014850f99515663_1a4e8e092a7f1ef167e014850f99515663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addComponent</definition>
        <argsstring>(Component *action)</argsstring>
        <name>addComponent</name>
        <param>
          <type><ref refid="df/d86/a00012" kindref="compound">Component</ref> *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::addComponent</definition>
        <argsstring>(Component &amp;action)</argsstring>
        <name>addComponent</name>
        <param>
          <type><ref refid="df/d86/a00012" kindref="compound">Component</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ac0acc4ad4d83a961e77dad1c4bf97c7c_1ac0acc4ad4d83a961e77dad1c4bf97c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="df/d86/a00012" kindref="compound">Component</ref> * &gt;</type>
        <definition>std::vector&lt;Component*&gt; mc::gfx::Entity::getComponents</definition>
        <argsstring>()</argsstring>
        <name>getComponents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a1873ddf0dbe7421dd193906c46a15a22_1a1873ddf0dbe7421dd193906c46a15a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a5e1ebb934e48d9a0e758ce46543ac913_1a5e1ebb934e48d9a0e758ce46543ac913" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getWidth</definition>
        <argsstring>() const </argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ad7bb754e9ada2401d234d49ba85463ad_1ad7bb754e9ada2401d234d49ba85463ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setWidth</definition>
        <argsstring>(const float &amp;s)</argsstring>
        <name>setWidth</name>
        <param>
          <type>const float &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="442" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a48ec951abc73bb80af1f3a474df33d93_1a48ec951abc73bb80af1f3a474df33d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_aa0aa51eeaa5f34ba09ed3e544b96645c_1aa0aa51eeaa5f34ba09ed3e544b96645c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getHeight</definition>
        <argsstring>() const </argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a1d9f4a5586e05cf2315183be5062e84a_1a1d9f4a5586e05cf2315183be5062e84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setHeight</definition>
        <argsstring>(const float &amp;s)</argsstring>
        <name>setHeight</name>
        <param>
          <type>const float &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a5ed09eb98c83fa88f10892eb969cfb51_1a5ed09eb98c83fa88f10892eb969cfb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a8be1810d8c9150ba4b56dc4f419d0b5b_1a8be1810d8c9150ba4b56dc4f419d0b5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getX</definition>
        <argsstring>() const </argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ab1227baaa1d429be4d648e782dec6269_1ab1227baaa1d429be4d648e782dec6269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setX</definition>
        <argsstring>(const float &amp;newX)</argsstring>
        <name>setX</name>
        <param>
          <type>const float &amp;</type>
          <declname>newX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ad8d0322ec7c44e409987cd891b9e37f8_1ad8d0322ec7c44e409987cd891b9e37f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; mc::gfx::Entity::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a8e1622c328280ccf6d80bae0a80e2a99_1a8e1622c328280ccf6d80bae0a80e2a99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; mc::gfx::Entity::getY</definition>
        <argsstring>() const </argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a9339119f35be0f3147b994e48bf1d2d7_1a9339119f35be0f3147b994e48bf1d2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::setY</definition>
        <argsstring>(const float &amp;newY)</argsstring>
        <name>setY</name>
        <param>
          <type>const float &amp;</type>
          <declname>newY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ab3e19a2a0c0a1663a7b63feea364d3aa_1ab3e19a2a0c0a1663a7b63feea364d3aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
        <definition>Entity* mc::gfx::Entity::getRootParent</definition>
        <argsstring>()</argsstring>
        <name>getRootParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a72a61c49f0e51cad4c69d72def629689_1a72a61c49f0e51cad4c69d72def629689" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
        <definition>const Entity* mc::gfx::Entity::getRootParent</definition>
        <argsstring>() const </argsstring>
        <name>getRootParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a85a822baaae376b546e66b098b128932_1a85a822baaae376b546e66b098b128932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ad19419a5ae7483fad138e497bf7035a3_1ad19419a5ae7483fad138e497bf7035a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Entity::makeDirty</definition>
        <argsstring>()</argsstring>
        <name>makeDirty</name>
        <briefdescription>
<para>Makes this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty and the root level parent dirty. </para>        </briefdescription>
        <detaileddescription>
<para>Should be used over <computeroutput>setProperty(Entity::DIRTY,true)</computeroutput> as it updaets the root parent. <simplesect kind="note"><para>This will make this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="516" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dc/de2/a00024_a95b76f7d1c5cd210e1ed9597ed2786ed_1a95b76f7d1c5cd210e1ed9597ed2786ed" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Image::onInit</definition>
        <argsstring>() override final</argsstring>
        <name>onInit</name>
        <reimplements refid="d7/d7a/a00016_a11cf6a76902a6e19eee7a002468cb118_1a11cf6a76902a6e19eee7a002468cb118">onInit</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity.init()</ref></computeroutput> is called, <computeroutput><ref refid="dc/de2/a00024_a95b76f7d1c5cd210e1ed9597ed2786ed_1a95b76f7d1c5cd210e1ed9597ed2786ed" kindref="member">onInit()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d4/d3a/a00101_a87ae59d4d843c7d01b12f5dadc36c01a_1a87ae59d4d843c7d01b12f5dadc36c01a" kindref="member">MACE::init()</ref> </para></simplesect>
<simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_abaec388596f6c4743b29f20a5745ffb2_1abaec388596f6c4743b29f20a5745ffb2" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Image::onUpdate</definition>
        <argsstring>() override final</argsstring>
        <name>onUpdate</name>
        <reimplements refid="d7/d7a/a00016_ac66cb6966baa172bf575f4a0ff466e73_1ac66cb6966baa172bf575f4a0ff466e73">onUpdate</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity.update()</ref></computeroutput> is called, <computeroutput><ref refid="dc/de2/a00024_abaec388596f6c4743b29f20a5745ffb2_1abaec388596f6c4743b29f20a5745ffb2" kindref="member">onUpdate()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d4/d3a/a00101_a857b4aaf5098870c36994338ded0eb88_1a857b4aaf5098870c36994338ded0eb88" kindref="member">MACE::update()</ref> </para></simplesect>
<simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_ae3e0d10e13b40d41620db2105a9c5a60_1ae3e0d10e13b40d41620db2105a9c5a60" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Image::onRender</definition>
        <argsstring>() override final</argsstring>
        <name>onRender</name>
        <reimplements refid="d7/d7a/a00016_a14defaca92f04c32b892cbc08263d3ac_1a14defaca92f04c32b892cbc08263d3ac">onRender</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="d7/d7a/a00016_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" kindref="member">Entity.render()</ref></computeroutput> is called, <computeroutput><ref refid="dc/de2/a00024_ae3e0d10e13b40d41620db2105a9c5a60_1ae3e0d10e13b40d41620db2105a9c5a60" kindref="member">onRender()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_acf650d2749684894437cae0790792ee0_1acf650d2749684894437cae0790792ee0" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Image::onDestroy</definition>
        <argsstring>() override final</argsstring>
        <name>onDestroy</name>
        <reimplements refid="d7/d7a/a00016_a9ed783f8417120704dfd5988bd037f14_1a9ed783f8417120704dfd5988bd037f14">onDestroy</reimplements>
        <briefdescription>
<para>When <computeroutput><ref refid="d7/d7a/a00016_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity.destroy()</ref></computeroutput> is called, <computeroutput><ref refid="dc/de2/a00024_acf650d2749684894437cae0790792ee0_1acf650d2749684894437cae0790792ee0" kindref="member">onDestroy()</ref></computeroutput> is called on all of it&apos;s children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d4/d3a/a00101_a2d1213f9aab871e066d5dbfb316c3dc2_1a2d1213f9aab871e066d5dbfb316c3dc2" kindref="member">MACE::destroy()</ref> </para></simplesect>
<simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dc/de2/a00024_a93b6986479071096bad4fc761763bbf5_1a93b6986479071096bad4fc761763bbf5" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::Image::onClean</definition>
        <argsstring>() override final</argsstring>
        <name>onClean</name>
        <reimplements refid="d7/d7a/a00016_aeadffde284327eea1ba89ce687f28dd9_1aeadffde284327eea1ba89ce687f28dd9">onClean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <reimplementedby refid="d9/d2e/a00056_a4e30b4c62fb168a976063b265dd50c38_1a4e30b4c62fb168a976063b265dd50c38">update</reimplementedby>
        <briefdescription>
<para>Should be called a by <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> when <computeroutput><ref refid="d4/d3a/a00101_a857b4aaf5098870c36994338ded0eb88_1a857b4aaf5098870c36994338ded0eb88" kindref="member">MACE.update()</ref></computeroutput> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <computeroutput><ref refid="d7/d7a/a00016_ac66cb6966baa172bf575f4a0ff466e73_1ac66cb6966baa172bf575f4a0ff466e73" kindref="member">onUpdate()</ref></computeroutput>. </para><para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="d7/d7a/a00016_ac66cb6966baa172bf575f4a0ff466e73_1ac66cb6966baa172bf575f4a0ff466e73" kindref="member">onUpdate()</ref></computeroutput> <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InitializationError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the property <computeroutput><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" kindref="member">Entity::INIT</ref></computeroutput> is false, meaning <computeroutput><ref refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">init()</ref></computeroutput> was not called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
<para>Should be called by a <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> when the graphical <computeroutput>Window</computeroutput> clears the frame. </para>        </briefdescription>
        <detaileddescription>
<para>Overriding this function is dangerous. Only do it if you know what you are doing. Instead, override <computeroutput><ref refid="d7/d7a/a00016_a14defaca92f04c32b892cbc08263d3ac_1a14defaca92f04c32b892cbc08263d3ac" kindref="member">onRender()</ref></computeroutput> <simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_a71b165d76cba0c689a85acf2d5b2b2fb_1a71b165d76cba0c689a85acf2d5b2b2fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::hover</definition>
        <argsstring>()</argsstring>
        <name>hover</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d7a/a00016_ac33575a022984f3b0e7d3327d3eb5da9_1ac33575a022984f3b0e7d3327d3eb5da9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Entity::onHover</definition>
        <argsstring>()</argsstring>
        <name>onHover</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="597" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d4/d51/a00017_a728996bfda32ab372ec9e6476cdf75d8_1a728996bfda32ab372ec9e6476cdf75d8" prot="protected" static="no" mutable="no">
        <type><ref refid="d1/d84/a00052" kindref="compound">ogl::UniformBuffer</ref></type>
        <definition>ogl::UniformBuffer mc::gfx::Entity2D::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <initializer>= <ref refid="d1/d84/a00052" kindref="compound">ogl::UniformBuffer</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="73" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d7a/a00016_a843be07a7155289c9769e128aed7efdc_1a843be07a7155289c9769e128aed7efdc" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::vector&lt;Entity*&gt; mc::gfx::Entity::children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <initializer>= std::vector&lt;<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*&gt;()</initializer>
        <briefdescription>
<para><computeroutput>std::vector</computeroutput> of this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>\&apos;s</computeroutput> children. </para>        </briefdescription>
        <detaileddescription>
<para>Use of this variable directly is unrecommended. Use <computeroutput><ref refid="d7/d7a/a00016_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" kindref="member">addChild()</ref></computeroutput> or <computeroutput><ref refid="d7/d7a/a00016_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" kindref="member">removeChild()</ref></computeroutput> instead. <simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="603" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d7a/a00016_a2f423919fa564ce852cb641b74f21d87_1a2f423919fa564ce852cb641b74f21d87" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/d79/a00051" kindref="compound">TransformMatrix</ref></type>
        <definition>TransformMatrix mc::gfx::Entity::transformation</definition>
        <argsstring></argsstring>
        <name>transformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="608" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5" prot="public" static="no">
        <name>EntityProperty</name>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a24af0038cdbff90b6ef551f68e5c0bd2" prot="public">
          <name>DEAD</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Bit location representing whether an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> is dead. </para>          </briefdescription>
          <detaileddescription>
<para>If <computeroutput>true,</computeroutput> any <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> holding it will remove it and call <computeroutput>kill()</computeroutput> <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a90e56e1021ac7b7be9a1e2ef6431a77f" prot="public">
          <name>DISABLED</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Property defining if an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> can be updated and rendered. </para>          </briefdescription>
          <detaileddescription>
<para>If this is <computeroutput>true</computeroutput>, <computeroutput><ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref></computeroutput> and <computeroutput><ref refid="d7/d7a/a00016_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" kindref="member">Entity::render()</ref></computeroutput> will not be called by it&apos;s parent. <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" prot="public">
          <name>INIT</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s <ref refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">init()</ref> function has been called. </para>          </briefdescription>
          <detaileddescription>
<para>If <ref refid="d7/d7a/a00016_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">destroy()</ref> or <ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">update()</ref> is called and this is <computeroutput>false</computeroutput>, an <computeroutput>InitializationError</computeroutput> is thrown. </para><para>If <ref refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">init()</ref> is called and this is <computeroutput>true</computeroutput>, an <computeroutput>InitializationError</computeroutput> is thrown. <simplesect kind="see"><para>Entity::getProperty(unsigned int) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" prot="public">
          <name>DIRTY</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Flag representing whether this <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> is dirty and it&apos;s positions needs to be recalculated. </para>          </briefdescription>
          <detaileddescription>
<para>This will become true under the following conditions:<itemizedlist>
<listitem><para>The <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> has been changed. Assume that any non-const function other than <ref refid="d7/d7a/a00016_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" kindref="member">render()</ref> and <ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">update()</ref> will trigger this condition.</para></listitem><listitem><para>The window is resized, moved, or created </para></listitem></itemizedlist>
</para><para>Other classes that inherit <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> can also set this to true via <ref refid="d7/d7a/a00016_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" kindref="member">Entity::setProperty(Byte, bool)</ref> </para><para>When an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> becomes dirty, it will propogate up the tree. It&apos;s parent will become dirty, it&apos;s parent will become dirty, etc. This will continue until it reaches the highest level <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>, which is usually the <computeroutput>GraphicsContext</computeroutput>. From there, it will decide what to do based on it&apos;s <computeroutput><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref></computeroutput> flag. </para><para>Certain <computeroutput>GraphicsContexts</computeroutput> may only render when something is dirty, heavily increasing performance in applications with little moving objects. </para><para>Additionally, an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> that is considered dirty will have it&apos;s sslBuffer updated on the GPU side. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" prot="public">
          <name>STRETCH_X</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s X position should be stretched when window is resized. </para>          </briefdescription>
          <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" kindref="member">Entity::STRETCH_Y</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a384b972ec3c0796f34bcfd00c4cf0ad5" kindref="member">Entity::STRETCH_WIDTH</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5af380097045937aff4cb37b35319f0fa0" kindref="member">Entity::STRETCH_HEIGHT</ref> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" prot="public">
          <name>STRETCH_Y</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s Y position should be stretched when window is resized. </para>          </briefdescription>
          <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" kindref="member">Entity::STRETCH_X</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a384b972ec3c0796f34bcfd00c4cf0ad5" kindref="member">Entity::STRETCH_WIDTH</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5af380097045937aff4cb37b35319f0fa0" kindref="member">Entity::STRETCH_HEIGHT</ref> </para></simplesect>
<simplesect kind="see"><para>WindowModule::setResizable(bool) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a384b972ec3c0796f34bcfd00c4cf0ad5" prot="public">
          <name>STRETCH_WIDTH</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s width should be stretched when window is resized. </para>          </briefdescription>
          <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" kindref="member">Entity::STRETCH_X</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" kindref="member">Entity::STRETCH_Y</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5af380097045937aff4cb37b35319f0fa0" kindref="member">Entity::STRETCH_HEIGHT</ref> </para></simplesect>
<simplesect kind="see"><para>WindowModule::setResizable(bool) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5af380097045937aff4cb37b35319f0fa0" prot="public">
          <name>STRETCH_HEIGHT</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>Flag representing whether an <ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>&apos;s height should be stretched when window is resized. </para>          </briefdescription>
          <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" kindref="member">Entity::STRETCH_X</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" kindref="member">Entity::STRETCH_Y</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a384b972ec3c0796f34bcfd00c4cf0ad5" kindref="member">Entity::STRETCH_WIDTH</ref> </para></simplesect>
<simplesect kind="see"><para>WindowModule::setResizable(bool) </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5aeb563d4051c62d1209ab82b7d9146858" prot="public">
          <name>DEFAULT_PROPERTIES</name>
          <initializer>= 0x00000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="128" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="128" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="475">
        <label>mc::gfx::Entity</label>
        <link refid="d7/d7a/a00016"/>
      </node>
      <node id="473">
        <label>mc::gfx::Entity2D</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="474" relation="public-inheritance">
        </childnode>
      </node>
      <node id="472">
        <label>mc::gfx::Image</label>
        <link refid="dc/de2/a00024"/>
        <childnode refid="473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="474">
        <label>mc::gfx::GraphicsEntity</label>
        <link refid="d7/de0/a00022"/>
        <childnode refid="475" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="486">
        <label>mc::gfx::ogl::UniformBuffer</label>
        <link refid="d1/d84/a00052"/>
        <childnode refid="487" relation="public-inheritance">
        </childnode>
      </node>
      <node id="488">
        <label>mc::gfx::ogl::Object</label>
        <link refid="dc/d87/a00032"/>
      </node>
      <node id="482">
        <label>T</label>
      </node>
      <node id="481">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="482" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="480">
        <label>std::vector&lt; mc::gfx::Entity * &gt;</label>
        <childnode refid="479" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="481" relation="template-instance">
          <edgelabel>&lt; mc::gfx::Entity * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="479">
        <label>mc::gfx::Entity</label>
        <link refid="d7/d7a/a00016"/>
        <childnode refid="480" relation="usage">
          <edgelabel>children</edgelabel>
        </childnode>
        <childnode refid="483" relation="usage">
          <edgelabel>transformation</edgelabel>
        </childnode>
      </node>
      <node id="484">
        <label>mc::Vector&lt; float, 3 &gt;</label>
        <link refid="dc/dee/a00053"/>
        <childnode refid="485" relation="template-instance">
          <edgelabel>&lt; float, 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="477">
        <label>mc::gfx::Entity2D</label>
        <link refid="d4/d51/a00017"/>
        <childnode refid="478" relation="public-inheritance">
        </childnode>
        <childnode refid="486" relation="usage">
          <edgelabel>buffer</edgelabel>
        </childnode>
      </node>
      <node id="476">
        <label>mc::gfx::Image</label>
        <link refid="dc/de2/a00024"/>
        <childnode refid="477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="483">
        <label>mc::TransformMatrix</label>
        <link refid="d2/d79/a00051"/>
        <childnode refid="484" relation="usage">
          <edgelabel>rotation</edgelabel>
          <edgelabel>scaler</edgelabel>
          <edgelabel>translation</edgelabel>
        </childnode>
      </node>
      <node id="485">
        <label>mc::Vector&lt; T, N &gt;</label>
        <link refid="dc/dee/a00053"/>
        <childnode refid="482" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
      </node>
      <node id="478">
        <label>mc::gfx::GraphicsEntity</label>
        <link refid="d7/de0/a00022"/>
        <childnode refid="479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="487">
        <label>mc::gfx::ogl::Buffer</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="488" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Entity2D.h" line="95" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="95" bodyend="125"/>
    <listofallmembers>
      <member refid="d7/d7a/a00016_ab38c7d3dd07f986a04991c329eb591c2_1ab38c7d3dd07f986a04991c329eb591c2" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>addChild</name></member>
      <member refid="d7/d7a/a00016_a1bd8b865710f86f1d80644151689d032_1a1bd8b865710f86f1d80644151689d032" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>addChild</name></member>
      <member refid="d7/d7a/a00016_a4e8e092a7f1ef167e014850f99515663_1a4e8e092a7f1ef167e014850f99515663" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>addComponent</name></member>
      <member refid="d7/d7a/a00016_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>addComponent</name></member>
      <member refid="d7/d7a/a00016_a4e87e3bf8fee9377f9ed711d8fe864b7_1a4e87e3bf8fee9377f9ed711d8fe864b7" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>begin</name></member>
      <member refid="d4/d51/a00017_a728996bfda32ab372ec9e6476cdf75d8_1a728996bfda32ab372ec9e6476cdf75d8" prot="protected" virt="non-virtual"><scope>mc::gfx::Image</scope><name>buffer</name></member>
      <member refid="d7/d7a/a00016_a843be07a7155289c9769e128aed7efdc_1a843be07a7155289c9769e128aed7efdc" prot="protected" virt="non-virtual"><scope>mc::gfx::Image</scope><name>children</name></member>
      <member refid="d7/de0/a00022_a14a9742f62cedec9f8dcaf74ade5124d_1a14a9742f62cedec9f8dcaf74ade5124d" prot="public" virt="virtual"><scope>mc::gfx::Image</scope><name>clean</name></member>
      <member refid="d7/d7a/a00016_a0dfa57638b24bc0d82d42ccb275ca87e_1a0dfa57638b24bc0d82d42ccb275ca87e" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>clearChildren</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a24af0038cdbff90b6ef551f68e5c0bd2" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>DEAD</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5aeb563d4051c62d1209ab82b7d9146858" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>DEFAULT_PROPERTIES</name></member>
      <member refid="d7/de0/a00022_a099e552dfbea5da421d7a661e9ed2e0d_1a099e552dfbea5da421d7a661e9ed2e0d" prot="public" virt="virtual"><scope>mc::gfx::Image</scope><name>destroy</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>DIRTY</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a90e56e1021ac7b7be9a1e2ef6431a77f" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>DISABLED</name></member>
      <member refid="d7/d7a/a00016_a52af677c4d992d9fcde7466cd6235e7b_1a52af677c4d992d9fcde7466cd6235e7b" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>end</name></member>
      <member refid="d7/d7a/a00016_a9f8638fff5431b7c91034e76d44fe12b_1a9f8638fff5431b7c91034e76d44fe12b" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>Entity</name></member>
      <member refid="d7/d7a/a00016_a2be93085d78b0c86a0acf3fb6ca1a4bb_1a2be93085d78b0c86a0acf3fb6ca1a4bb" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>Entity</name></member>
      <member refid="d4/d51/a00017_accd776cba857d799eac8a51e97792b1d_1accd776cba857d799eac8a51e97792b1d" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>Entity2D</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>EntityProperty</name></member>
      <member refid="d4/d51/a00017_a9ac8e657e17a7d6d02710239819a0bfd_1a9ac8e657e17a7d6d02710239819a0bfd" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getBuffer</name></member>
      <member refid="d4/d51/a00017_aca4ab2aa9f36e7fb33b2bfe1e7e0a91b_1aca4ab2aa9f36e7fb33b2bfe1e7e0a91b" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getBuffer</name></member>
      <member refid="d7/d7a/a00016_add8148c0ea0a51b80f74cbb4a890902d_1add8148c0ea0a51b80f74cbb4a890902d" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getChild</name></member>
      <member refid="d7/d7a/a00016_a9a1b5fa1fd897da0acdf91dd3085561d_1a9a1b5fa1fd897da0acdf91dd3085561d" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getChild</name></member>
      <member refid="d7/d7a/a00016_a38b3c5311cb39e76f2b24f145323c130_1a38b3c5311cb39e76f2b24f145323c130" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getChildren</name></member>
      <member refid="d7/d7a/a00016_ac0acc4ad4d83a961e77dad1c4bf97c7c_1ac0acc4ad4d83a961e77dad1c4bf97c7c" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getComponents</name></member>
      <member refid="d7/d7a/a00016_a48ec951abc73bb80af1f3a474df33d93_1a48ec951abc73bb80af1f3a474df33d93" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getHeight</name></member>
      <member refid="d7/d7a/a00016_aa0aa51eeaa5f34ba09ed3e544b96645c_1aa0aa51eeaa5f34ba09ed3e544b96645c" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getHeight</name></member>
      <member refid="d7/de0/a00022_a8c60d8a573633d174610037db5f7ab6c_1a8c60d8a573633d174610037db5f7ab6c" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getOpacity</name></member>
      <member refid="d7/de0/a00022_a35d7eae91b69a75adc30cc469efdcefb_1a35d7eae91b69a75adc30cc469efdcefb" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getOpacity</name></member>
      <member refid="d7/d7a/a00016_acf8ed144237208f06295e676c2b1f3e6_1acf8ed144237208f06295e676c2b1f3e6" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getParent</name></member>
      <member refid="d7/d7a/a00016_a30676f4c85b44e30a9de343e07c26ae3_1a30676f4c85b44e30a9de343e07c26ae3" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getParent</name></member>
      <member refid="d7/d7a/a00016_a9853f637166caef4ffcb231517cec29c_1a9853f637166caef4ffcb231517cec29c" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getProperties</name></member>
      <member refid="d7/d7a/a00016_a54c70abc95778ab5fed11dd8bbc131ee_1a54c70abc95778ab5fed11dd8bbc131ee" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getProperties</name></member>
      <member refid="d7/d7a/a00016_a46570a241b370527b9e8a3e0fb335248_1a46570a241b370527b9e8a3e0fb335248" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getProperty</name></member>
      <member refid="dc/de2/a00024_a45e77262aacc36fce332d473f7eb1287_1a45e77262aacc36fce332d473f7eb1287" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getProtocol</name></member>
      <member refid="d7/d7a/a00016_ab3e19a2a0c0a1663a7b63feea364d3aa_1ab3e19a2a0c0a1663a7b63feea364d3aa" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getRootParent</name></member>
      <member refid="d7/d7a/a00016_a72a61c49f0e51cad4c69d72def629689_1a72a61c49f0e51cad4c69d72def629689" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getRootParent</name></member>
      <member refid="dc/de2/a00024_ae0221eff61ab9695984916c4cbae595e_1ae0221eff61ab9695984916c4cbae595e" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getTexture</name></member>
      <member refid="dc/de2/a00024_a12dfa8342ec29459f454be0c14ab3a2d_1a12dfa8342ec29459f454be0c14ab3a2d" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getTexture</name></member>
      <member refid="d7/d7a/a00016_ae5444c9fabdb47ce42720ef16139cb74_1ae5444c9fabdb47ce42720ef16139cb74" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getTransformation</name></member>
      <member refid="d7/d7a/a00016_a200bbd6f007f227c7afe0c1afb8d0abb_1a200bbd6f007f227c7afe0c1afb8d0abb" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getTransformation</name></member>
      <member refid="d7/d7a/a00016_a1873ddf0dbe7421dd193906c46a15a22_1a1873ddf0dbe7421dd193906c46a15a22" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getWidth</name></member>
      <member refid="d7/d7a/a00016_a5e1ebb934e48d9a0e758ce46543ac913_1a5e1ebb934e48d9a0e758ce46543ac913" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getWidth</name></member>
      <member refid="d7/d7a/a00016_a5ed09eb98c83fa88f10892eb969cfb51_1a5ed09eb98c83fa88f10892eb969cfb51" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getX</name></member>
      <member refid="d7/d7a/a00016_a8be1810d8c9150ba4b56dc4f419d0b5b_1a8be1810d8c9150ba4b56dc4f419d0b5b" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getX</name></member>
      <member refid="d7/d7a/a00016_ad8d0322ec7c44e409987cd891b9e37f8_1ad8d0322ec7c44e409987cd891b9e37f8" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getY</name></member>
      <member refid="d7/d7a/a00016_a8e1622c328280ccf6d80bae0a80e2a99_1a8e1622c328280ccf6d80bae0a80e2a99" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>getY</name></member>
      <member refid="d7/de0/a00022_ad22652ba91df56f78e8f4f972716a839_1ad22652ba91df56f78e8f4f972716a839" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>GraphicsEntity</name></member>
      <member refid="d7/d7a/a00016_ac0903b8c965b0438d8ac37c14164787c_1ac0903b8c965b0438d8ac37c14164787c" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>hasChild</name></member>
      <member refid="d7/d7a/a00016_aff435e798a2cb43bd5d04d79f0d9a542_1aff435e798a2cb43bd5d04d79f0d9a542" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>hasParent</name></member>
      <member refid="d7/d7a/a00016_a71b165d76cba0c689a85acf2d5b2b2fb_1a71b165d76cba0c689a85acf2d5b2b2fb" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>hover</name></member>
      <member refid="dc/de2/a00024_a747d1b07298b3619197b94cc5390b085_1a747d1b07298b3619197b94cc5390b085" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>Image</name></member>
      <member refid="dc/de2/a00024_a84278cf2fab0a9ca3293021ba5db154a_1a84278cf2fab0a9ca3293021ba5db154a" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>Image</name></member>
      <member refid="d7/d7a/a00016_a25de57983646d31beed78459847f6056_1a25de57983646d31beed78459847f6056" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>indexOf</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5afb2b5f5f538b52e48c87b6db652e14d4" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>INIT</name></member>
      <member refid="d7/de0/a00022_aa28289505408ae0c2c1f85d0ee49338d_1aa28289505408ae0c2c1f85d0ee49338d" prot="public" virt="virtual"><scope>mc::gfx::Image</scope><name>init</name></member>
      <member refid="d7/d7a/a00016_ad19419a5ae7483fad138e497bf7035a3_1ad19419a5ae7483fad138e497bf7035a3" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>makeDirty</name></member>
      <member refid="dc/de2/a00024_a93b6986479071096bad4fc761763bbf5_1a93b6986479071096bad4fc761763bbf5" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>onClean</name></member>
      <member refid="dc/de2/a00024_acf650d2749684894437cae0790792ee0_1acf650d2749684894437cae0790792ee0" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>onDestroy</name></member>
      <member refid="d7/d7a/a00016_ac33575a022984f3b0e7d3327d3eb5da9_1ac33575a022984f3b0e7d3327d3eb5da9" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>onHover</name></member>
      <member refid="dc/de2/a00024_a95b76f7d1c5cd210e1ed9597ed2786ed_1a95b76f7d1c5cd210e1ed9597ed2786ed" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>onInit</name></member>
      <member refid="dc/de2/a00024_ae3e0d10e13b40d41620db2105a9c5a60_1ae3e0d10e13b40d41620db2105a9c5a60" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>onRender</name></member>
      <member refid="dc/de2/a00024_abaec388596f6c4743b29f20a5745ffb2_1abaec388596f6c4743b29f20a5745ffb2" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>onUpdate</name></member>
      <member refid="dc/de2/a00024_a9db1175cb96b21330f12c9bb98d057a1_1a9db1175cb96b21330f12c9bb98d057a1" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>operator!=</name></member>
      <member refid="d4/d51/a00017_ab4aec91966dc291d6ef351270af4e4dd_1ab4aec91966dc291d6ef351270af4e4dd" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity2D::"><scope>mc::gfx::Image</scope><name>operator!=</name></member>
      <member refid="d7/de0/a00022_aabb5296d2eded79f26c1684d46349f53_1aabb5296d2eded79f26c1684d46349f53" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::GraphicsEntity::"><scope>mc::gfx::Image</scope><name>operator!=</name></member>
      <member refid="d7/d7a/a00016_a8aaef736185a43f4c700c7f65dcd7d3f_1a8aaef736185a43f4c700c7f65dcd7d3f" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::gfx::Image</scope><name>operator!=</name></member>
      <member refid="dc/de2/a00024_ae4e53e6761f89bfab4229dbc4aa8c431_1ae4e53e6761f89bfab4229dbc4aa8c431" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>operator==</name></member>
      <member refid="d4/d51/a00017_a29f4d06b1ac785016117d8c9464f2c5b_1a29f4d06b1ac785016117d8c9464f2c5b" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity2D::"><scope>mc::gfx::Image</scope><name>operator==</name></member>
      <member refid="d7/de0/a00022_ab02900c86058b441dcf6884be269a978_1ab02900c86058b441dcf6884be269a978" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::GraphicsEntity::"><scope>mc::gfx::Image</scope><name>operator==</name></member>
      <member refid="d7/d7a/a00016_a07610ae2fac37c6015a054c781b04918_1a07610ae2fac37c6015a054c781b04918" prot="public" virt="non-virtual" ambiguityscope="mc::gfx::Entity::"><scope>mc::gfx::Image</scope><name>operator==</name></member>
      <member refid="d7/d7a/a00016_a9502b14235e187539f6fd5da4090d474_1a9502b14235e187539f6fd5da4090d474" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>operator[]</name></member>
      <member refid="d7/d7a/a00016_a97a0a270c1d4c710ac2f4033b52dd9bd_1a97a0a270c1d4c710ac2f4033b52dd9bd" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>operator[]</name></member>
      <member refid="d7/d7a/a00016_ab1f8b9ae4b5c02534bbf5924148b4003_1ab1f8b9ae4b5c02534bbf5924148b4003" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>removeChild</name></member>
      <member refid="d7/d7a/a00016_a6f48a5e5555f64dd5bc84e27852f4773_1a6f48a5e5555f64dd5bc84e27852f4773" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>removeChild</name></member>
      <member refid="d7/d7a/a00016_a27bda0c0dd0fff4adbe4fe04e27bc5f6_1a27bda0c0dd0fff4adbe4fe04e27bc5f6" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>render</name></member>
      <member refid="dc/de2/a00024_ab57f3809b84c3cb772ef526d09e6c482_1ab57f3809b84c3cb772ef526d09e6c482" prot="private" virt="non-virtual"><scope>mc::gfx::Image</scope><name>RenderProtocol&lt; Image &gt;</name></member>
      <member refid="d7/d7a/a00016_a85a822baaae376b546e66b098b128932_1a85a822baaae376b546e66b098b128932" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>reset</name></member>
      <member refid="d7/d7a/a00016_ad7e0ab13473c643feb43358074aab3c2_1ad7e0ab13473c643feb43358074aab3c2" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>rotate</name></member>
      <member refid="d7/d7a/a00016_a14fda0e29efc83be1bd18b3cecb76747_1a14fda0e29efc83be1bd18b3cecb76747" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>scale</name></member>
      <member refid="d4/d51/a00017_a28bce79ce1af256658d53801acd44a61_1a28bce79ce1af256658d53801acd44a61" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setBuffer</name></member>
      <member refid="d7/d7a/a00016_a1d9f4a5586e05cf2315183be5062e84a_1a1d9f4a5586e05cf2315183be5062e84a" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setHeight</name></member>
      <member refid="d7/de0/a00022_a385a1a844055205bd7f60833a1720cd2_1a385a1a844055205bd7f60833a1720cd2" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setOpacity</name></member>
      <member refid="d7/d7a/a00016_af07ef60a815c87d686bf81dd92a817eb_1af07ef60a815c87d686bf81dd92a817eb" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setProperties</name></member>
      <member refid="d7/d7a/a00016_ab7d0bef41e5a511452abcdfdd15d3d78_1ab7d0bef41e5a511452abcdfdd15d3d78" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setProperty</name></member>
      <member refid="dc/de2/a00024_a5e7c2560a7fd3078207cba413967e809_1a5e7c2560a7fd3078207cba413967e809" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setTexture</name></member>
      <member refid="d7/d7a/a00016_a0f9b978bf306a200abca7bde5781475a_1a0f9b978bf306a200abca7bde5781475a" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setTransformation</name></member>
      <member refid="d7/d7a/a00016_ad7bb754e9ada2401d234d49ba85463ad_1ad7bb754e9ada2401d234d49ba85463ad" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setWidth</name></member>
      <member refid="d7/d7a/a00016_ab1227baaa1d429be4d648e782dec6269_1ab1227baaa1d429be4d648e782dec6269" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setX</name></member>
      <member refid="d7/d7a/a00016_a9339119f35be0f3147b994e48bf1d2d7_1a9339119f35be0f3147b994e48bf1d2d7" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>setY</name></member>
      <member refid="d7/d7a/a00016_a53f0c51e7af4e86c2f40f78f985ed628_1a53f0c51e7af4e86c2f40f78f985ed628" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>size</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5af380097045937aff4cb37b35319f0fa0" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>STRETCH_HEIGHT</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a384b972ec3c0796f34bcfd00c4cf0ad5" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>STRETCH_WIDTH</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a8565f820f09539177483266a2cc5a636" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>STRETCH_X</name></member>
      <member refid="d7/d7a/a00016_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a11e9ea3255b1d5bfc71356f787a10c9d" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>STRETCH_Y</name></member>
      <member refid="dc/de2/a00024_1aef819f256f48332ea5bc2e45744392b4" prot="private" virt="non-virtual"><scope>mc::gfx::Image</scope><name>texture</name></member>
      <member refid="d7/d7a/a00016_a2f423919fa564ce852cb641b74f21d87_1a2f423919fa564ce852cb641b74f21d87" prot="protected" virt="non-virtual"><scope>mc::gfx::Image</scope><name>transformation</name></member>
      <member refid="d7/d7a/a00016_ac977cb0fc9ee90771c88bbdeaf234a03_1ac977cb0fc9ee90771c88bbdeaf234a03" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>translate</name></member>
      <member refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" prot="protected" virt="virtual"><scope>mc::gfx::Image</scope><name>update</name></member>
      <member refid="d7/d7a/a00016_a675362ba8b043625682855c25e093539_1a675362ba8b043625682855c25e093539" prot="public" virt="virtual"><scope>mc::gfx::Image</scope><name>~Entity</name></member>
      <member refid="d7/de0/a00022_a7ef9de5fa4914bd3b155dd96237bf323_1a7ef9de5fa4914bd3b155dd96237bf323" prot="public" virt="virtual"><scope>mc::gfx::Image</scope><name>~GraphicsEntity</name></member>
      <member refid="dc/de2/a00024_a43f22f215199e585da6cf42ea4ac42dc_1a43f22f215199e585da6cf42ea4ac42dc" prot="public" virt="non-virtual"><scope>mc::gfx::Image</scope><name>~Image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
