<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d8/d84/a00001" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000010"/>Namespace <ref refid="da/d72/a00124" kindref="compound">mc</ref>  </term></varlistentry>
<listitem><para>Add a proper logger  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000001"/>Class <ref refid="d2/de7/a00014" kindref="compound">mc::gfx::Component</ref>  </term></varlistentry>
<listitem><para>unit testing for <ref refid="d2/de7/a00014_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe" kindref="member">clean()</ref> <ref refid="d2/de7/a00014_a4bf270ecdf1b1a5f3f512a34ad5f8ecf_1a4bf270ecdf1b1a5f3f512a34ad5f8ecf" kindref="member">render()</ref> and <ref refid="d2/de7/a00014_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6" kindref="member">hover()</ref>  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000003"/>Class <ref refid="d7/de0/a00022" kindref="compound">mc::gfx::Font</ref>  </term></varlistentry>
<listitem><para>instead of using an id system add FT_Face  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000004"/>Member <ref refid="d7/de0/a00022_a5b2de14319604376fca82d41214f5497_1a5b2de14319604376fca82d41214f5497" kindref="member">mc::gfx::Font::getCharacter</ref>  (const wchar_t character, <ref refid="df/d61/a00031" kindref="compound">Letter</ref> &amp;let) const </term></varlistentry>
<listitem><para>cache characters  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000005"/>Namespace <ref refid="df/dcd/a00127" kindref="compound">mc::gfx::ogl</ref>  </term></varlistentry>
<listitem><para>create a ReadableBuffer class with functions like glReadPixels  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000007"/>Class <ref refid="dc/de2/a00024" kindref="compound">mc::gfx::ogl::FrameBuffer</ref>  </term></varlistentry>
<listitem><para>target variable which is GL_FRAMEBUFFER by default. and update documentation accordingly  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000006"/>Class <ref refid="d4/d8c/a00035" kindref="compound">mc::gfx::ogl::Object</ref>  </term></varlistentry>
<listitem><para>create an RAII wrapper which calls <ref refid="d4/d8c/a00035_a3d8fead77f923fc687b367c12f5e0f7c_1a3d8fead77f923fc687b367c12f5e0f7c" kindref="member">init()</ref> and <ref refid="d4/d8c/a00035_aff0ae807b5e930697ea3766301588f6d_1aff0ae807b5e930697ea3766301588f6d" kindref="member">destroy()</ref> automatically </para><para>store what object is currently bound. static <ref refid="d4/d8c/a00035" kindref="compound">Object</ref> getBoundObject(), bool isBound()  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000002"/>Class <ref refid="db/d3a/a00040" kindref="compound">mc::gfx::ProgressBar</ref>  </term></varlistentry>
<listitem><para>Replace the EaseComponent with a non dynamic pointer  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000008"/>Class <ref refid="d6/d42/a00043" kindref="compound">mc::gfx::Renderer</ref>  </term></varlistentry>
<listitem><para>add function to change how many samples msaa uses  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000009"/>Class <ref refid="d9/da4/a00078" kindref="compound">mc::os::WindowModule</ref>  </term></varlistentry>
<listitem><para>move glfw event handling to its own thread. </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000011"/>Class <ref refid="d8/d41/a00038" kindref="compound">mc::Preprocessor</ref>  </term></varlistentry>
<listitem><para>Digraphs (see 6.4.6 of standard) </para><para>Variable arguments </para><para>Macro concat </para><para><computeroutput>#if and</computeroutput>#elif` (funtion parseIfStatement exists and needs to get a definition) </para><para><computeroutput>#pragma</computeroutput> (if STDC follows, do no macro replacement. if once follows, only include file once)  </para></listitem>
<varlistentry><term><anchor id="d8/d84/a00001_1_todo000012"/>Member <ref refid="d9/da5/a00075_ad81a516cd25fe7e71ae9a1a01c8e74c5_1ad81a516cd25fe7e71ae9a1a01c8e74c5" kindref="member">mc::Vector&lt; T, N &gt;::Vector</ref>  (const std::initializer_list&lt; T &gt; args)</term></varlistentry>
<listitem><para>Make this constexpr </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
