<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d8/d53/a00081" kind="namespace" language="C++">
    <compoundname>mc::gfx::ssl</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d53/a00081_a4a682d4cdb2aade98ded09dced71db8c_1a4a682d4cdb2aade98ded09dced71db8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::init</definition>
        <argsstring>(const Size &amp;originalWidth, const Size &amp;originalHeight)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="d1/d51/a00079_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>originalWidth</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d51/a00079_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>originalHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a329c6799b3cebe722f7bcbdc476c4f55_1a329c6799b3cebe722f7bcbdc476c4f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::setUp</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>setUp</name>
        <param>
          <type><ref refid="d5/df9/a00044" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_ae97c934f1995505f7d4c1827df2ad6b5_1ae97c934f1995505f7d4c1827df2ad6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::tearDown</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>tearDown</name>
        <param>
          <type><ref refid="d5/df9/a00044" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a5c2e736611e0deaed33a5d5d4c8244f1_1a5c2e736611e0deaed33a5d5d4c8244f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a18ef93d8629fab4c9285965c12c0a3eb_1a18ef93d8629fab4c9285965c12c0a3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::resize</definition>
        <argsstring>(const Size &amp;width, const Size &amp;height)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="d1/d51/a00079_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d51/a00079_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_ab1f194595341e95398a607e9d9014550_1ab1f194595341e95398a607e9d9014550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::checkInput</definition>
        <argsstring>()</argsstring>
        <name>checkInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a2a076e52264a578f9581f45af8376c38_1a2a076e52264a578f9581f45af8376c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::bindBuffer</definition>
        <argsstring>(UniformBuffer &amp;buf)</argsstring>
        <name>bindBuffer</name>
        <param>
          <type><ref refid="db/d3a/a00040" kindref="compound">UniformBuffer</ref> &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a994bfe876e76a7ba9a10a085735ab7d9_1a994bfe876e76a7ba9a10a085735ab7d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::fillBuffer</definition>
        <argsstring>(UniformBuffer &amp;buf, const Entity *en)</argsstring>
        <name>fillBuffer</name>
        <param>
          <type><ref refid="db/d3a/a00040" kindref="compound">UniformBuffer</ref> &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="d2/de7/a00014" kindref="compound">Entity</ref> *</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_ae2f09ba14c8b683e806e2f2cb3d6748c_1ae2f09ba14c8b683e806e2f2cb3d6748c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::bindEntity</definition>
        <argsstring>(const GraphicsEntity *en, ShaderProgram &amp;prog)</argsstring>
        <name>bindEntity</name>
        <param>
          <type>const <ref refid="d1/d2b/a00018" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>en</declname>
        </param>
        <param>
          <type><ref refid="d1/dc6/a00037" kindref="compound">ShaderProgram</ref> &amp;</type>
          <declname>prog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a4294f01b2f003eca9e849cafa5a039f6_1a4294f01b2f003eca9e849cafa5a039f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::ssl::bindShaderProgram</definition>
        <argsstring>(ShaderProgram &amp;prog)</argsstring>
        <name>bindShaderProgram</name>
        <param>
          <type><ref refid="d1/dc6/a00037" kindref="compound">ShaderProgram</ref> &amp;</type>
          <declname>prog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a277a469dd85e47913f76caac8b4ea08c_1a277a469dd85e47913f76caac8b4ea08c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mc::gfx::ssl::processShader</definition>
        <argsstring>(const std::string &amp;shader, const GLenum &amp;type)</argsstring>
        <name>processShader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>shader</declname>
        </param>
        <param>
          <type>const GLenum &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d53/a00081_a3841d4e7123805769222ac714deafe5c_1a3841d4e7123805769222ac714deafe5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d5/d79/a00030" kindref="compound">mc::Preprocessor</ref> &amp;</type>
        <definition>const mc::Preprocessor&amp; mc::gfx::ssl::getSSLPreprocessor</definition>
        <argsstring>()</argsstring>
        <name>getSSLPreprocessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="98" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds resources for the Standard Shader Library (SSL.) SSL makes it easy to interact with MACE entities from shaders through special header files. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>    </detaileddescription>
    <location file="include/MACE/Graphics/Renderer.h" line="36" column="1"/>
  </compounddef>
</doxygen>
