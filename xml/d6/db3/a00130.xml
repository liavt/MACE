<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d6/db3/a00130" kind="namespace" language="C++">
    <compoundname>mc::os</compoundname>
    <innerclass refid="d2/d79/a00051" prot="public">mc::os::Serial</innerclass>
    <innerclass refid="d1/dea/a00054" prot="public">mc::os::SignalAbortError</innerclass>
    <innerclass refid="d4/d6d/a00055" prot="public">mc::os::SignalAlarmError</innerclass>
    <innerclass refid="d9/d2e/a00056" prot="public">mc::os::SignalError</innerclass>
    <innerclass refid="d1/d22/a00057" prot="public">mc::os::SignalFloatingPointError</innerclass>
    <innerclass refid="d7/df7/a00058" prot="public">mc::os::SignalHangupError</innerclass>
    <innerclass refid="d3/d8b/a00059" prot="public">mc::os::SignalIllegalInstructionError</innerclass>
    <innerclass refid="d9/d73/a00060" prot="public">mc::os::SignalInterruptError</innerclass>
    <innerclass refid="d4/de8/a00061" prot="public">mc::os::SignalKillError</innerclass>
    <innerclass refid="df/d03/a00062" prot="public">mc::os::SignalModule</innerclass>
    <innerclass refid="d1/d6f/a00063" prot="public">mc::os::SignalSegmentFaultError</innerclass>
    <innerclass refid="df/d5f/a00064" prot="public">mc::os::SignalStopError</innerclass>
    <innerclass refid="de/de1/a00065" prot="public">mc::os::SignalTerminalInputError</innerclass>
    <innerclass refid="d9/db3/a00066" prot="public">mc::os::SignalTerminalOutputError</innerclass>
    <innerclass refid="dc/ddf/a00067" prot="public">mc::os::SignalTerminalStopError</innerclass>
    <innerclass refid="da/d24/a00068" prot="public">mc::os::SignalTerminateError</innerclass>
    <innerclass refid="d9/da4/a00078" prot="public">mc::os::WindowModule</innerclass>
    <innernamespace refid="d7/d06/a00131">mc::os::Input</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/db3/a00130_ae1554c02627e42cccb39b91daf0671bb_1ae1554c02627e42cccb39b91daf0671bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tm *</type>
        <definition>std::tm* mc::os::localtime</definition>
        <argsstring>(std::tm *result, const std::time_t *time)</argsstring>
        <name>localtime</name>
        <param>
          <type>std::tm *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::time_t *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a4e12ed8528ae6b574f739bf660a19a9a_1a4e12ed8528ae6b574f739bf660a19a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tm *</type>
        <definition>std::tm* mc::os::gmtime</definition>
        <argsstring>(std::tm *result, const std::time_t *time)</argsstring>
        <name>gmtime</name>
        <param>
          <type>std::tm *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const std::time_t *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a7bd61ca55cef4b73ba0678e48af8ed12_1a7bd61ca55cef4b73ba0678e48af8ed12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* mc::os::ctime</definition>
        <argsstring>(char *buffer, std::size_t bufSize, const std::time_t *time)</argsstring>
        <name>ctime</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>const std::time_t *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a4a747d94471822f20503b6ed5166feec_1a4a747d94471822f20503b6ed5166feec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* mc::os::asctime</definition>
        <argsstring>(char *buffer, std::size_t bufSize, const std::tm *time)</argsstring>
        <name>asctime</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>const std::tm *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a98a4b7e648b5ff638827f5538f940a9e_1a98a4b7e648b5ff638827f5538f940a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* mc::os::fopen</definition>
        <argsstring>(FILE **result, const char *filename, const char *mode)</argsstring>
        <name>fopen</name>
        <param>
          <type>FILE **</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_ac0a8a7d68544550a1767a3f59456a334_1ac0a8a7d68544550a1767a3f59456a334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t mc::os::mbsrtowcs</definition>
        <argsstring>(std::size_t *returnValue, wchar_t *wcstr, std::size_t sizeInWords, const char **mbstr, std::size_t count, mbstate_t *mbstate)</argsstring>
        <name>mbsrtowcs</name>
        <param>
          <type>std::size_t *</type>
          <declname>returnValue</declname>
        </param>
        <param>
          <type>wchar_t *</type>
          <declname>wcstr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>sizeInWords</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>mbstr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>mbstate_t *</type>
          <declname>mbstate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a6ec24299e3355626ebb79583c8e85a55_1a6ec24299e3355626ebb79583c8e85a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t mc::os::wcstombs</definition>
        <argsstring>(std::size_t *returnValue, char *dst, std::size_t sizeInWords, const wchar_t *src, const std::size_t length)</argsstring>
        <name>wcstombs</name>
        <param>
          <type>std::size_t *</type>
          <declname>returnValue</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>sizeInWords</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a65e424da166f0c9eb9760fe1f30e54ee_1a65e424da166f0c9eb9760fe1f30e54ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::assertion</definition>
        <argsstring>(const bool cond, const std::string &amp;message)</argsstring>
        <name>assertion</name>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a76be6dde70bd1c24ba325c458e8be11f_1a76be6dde70bd1c24ba325c458e8be11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::assertion</definition>
        <argsstring>(const bool cond, const char *message=&quot;Assertion failed&quot;)</argsstring>
        <name>assertion</name>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
          <defval>&quot;Assertion failed&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a4108375662f3734581f4d4dc69b9966d_1a4108375662f3734581f4d4dc69b9966d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::wait</definition>
        <argsstring>(const long long int ms)</argsstring>
        <name>wait</name>
        <param>
          <type>const long long int</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_aef0305b8925769397d9dd764ce79136e_1aef0305b8925769397d9dd764ce79136e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring mc::os::toWideString</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>toWideString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a2e4ede6082da414878fe6266396fef8f_1a2e4ede6082da414878fe6266396fef8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mc::os::toNarrowString</definition>
        <argsstring>(const std::wstring &amp;s)</argsstring>
        <name>toNarrowString</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a0fd7a53f295a678421463c49384b02c2_1a0fd7a53f295a678421463c49384b02c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t mc::os::getArraySize</definition>
        <argsstring>(T(&amp;)[n])</argsstring>
        <name>getArraySize</name>
        <param>
          <type>T(&amp;)</type>
          <array>[n]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="65" column="1" bodyfile="include/MACE/Core/System.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a21f59f0abb635bfe57ae09845aa9fc00_1a21f59f0abb635bfe57ae09845aa9fc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::clearError</definition>
        <argsstring>(const int lineNumber=0, const char *filename=&quot;Unknown file&quot;)</argsstring>
        <name>clearError</name>
        <param>
          <type>const int</type>
          <declname>lineNumber</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
          <defval>&quot;Unknown file&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a2c7b57eaba90ada5a378864ead9b269c_1a2c7b57eaba90ada5a378864ead9b269c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::checkError</definition>
        <argsstring>(const int lineNumber=0, const char *filename=&quot;Unknown file&quot;, const std::string message=&quot;Unknown message&quot;)</argsstring>
        <name>checkError</name>
        <param>
          <type>const int</type>
          <declname>lineNumber</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
          <defval>&quot;Unknown file&quot;</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>message</declname>
          <defval>&quot;Unknown message&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_a751d7fab6b4e206a86391505b33f8ff8_1a751d7fab6b4e206a86391505b33f8ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Core/System.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/db3/a00130_aab1ed0cb3d1c00276738649038be069f_1aab1ed0cb3d1c00276738649038be069f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::os::signalHandle</definition>
        <argsstring>(int sig)</argsstring>
        <name>signalHandle</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Signal.h" line="43" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Namespace with functions related to the operating system like keyboard input, mouse, and windows. </para>    </briefdescription>
    <detaileddescription>
<para>Also contains cross-platform safer versions of many std functions. </para>    </detaileddescription>
    <location file="include/MACE/Core/System.h" line="45" column="1"/>
  </compounddef>
</doxygen>
