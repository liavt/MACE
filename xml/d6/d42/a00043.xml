<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d6/d42/a00043" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::Renderer</compoundname>
    <includes refid="db/ddf/a00088" local="no">Renderer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d6/d42/a00043_aaa9a9b3bafe9bb010dcb95e07c76da09_1aaa9a9b3bafe9bb010dcb95e07c76da09" prot="protected" static="no" mutable="no">
        <type><ref refid="d7/d12/a00126_aa8d831470fc2c8d0246e9d04a3d68f5f_1aa8d831470fc2c8d0246e9d04a3d68f5f" kindref="member">RenderQueue</ref></type>
        <definition>RenderQueue mc::gfx::Renderer::renderQueue</definition>
        <argsstring></argsstring>
        <name>renderQueue</name>
        <initializer>= <ref refid="d7/d12/a00126_aa8d831470fc2c8d0246e9d04a3d68f5f_1aa8d831470fc2c8d0246e9d04a3d68f5f" kindref="member">RenderQueue</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="317" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d42/a00043_ac2ff679753ef0c57f428c5230ca60fb3_1ac2ff679753ef0c57f428c5230ca60fb3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d5/df9/a00044" kindref="compound">RenderImpl</ref> * &gt;</type>
        <definition>std::vector&lt;RenderImpl*&gt; mc::gfx::Renderer::protocols</definition>
        <argsstring></argsstring>
        <name>protocols</name>
        <initializer>= std::vector&lt;<ref refid="d5/df9/a00044" kindref="compound">RenderImpl</ref>*&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="318" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d42/a00043_a5599b64de4bedc9dced4eedee7e8a073_1a5599b64de4bedc9dced4eedee7e8a073" prot="protected" static="no" mutable="no">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::originalWidth</definition>
        <argsstring></argsstring>
        <name>originalWidth</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="320" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d42/a00043_aa151a4d8b2646c857199ce122adf28a1_1aa151a4d8b2646c857199ce122adf28a1" prot="protected" static="no" mutable="no">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::originalHeight</definition>
        <argsstring></argsstring>
        <name>originalHeight</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="321" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d42/a00043_ac215e30720f149f5b222cac13a760fe2_1ac215e30720f149f5b222cac13a760fe2" prot="protected" static="no" mutable="no">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::samples</definition>
        <argsstring></argsstring>
        <name>samples</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="323" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d42/a00043_a4a2dd121c9396d1c2cf719647f129f3c_1a4a2dd121c9396d1c2cf719647f129f3c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mc::gfx::Renderer::resized</definition>
        <argsstring></argsstring>
        <name>resized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="325" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d42/a00043_a07cfa64618179285dddb7e24c0d5aadd_1a07cfa64618179285dddb7e24c0d5aadd" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>&lt; float, 2 &gt;</type>
        <definition>Vector&lt;float, 2&gt; mc::gfx::Renderer::windowRatios</definition>
        <argsstring></argsstring>
        <name>windowRatios</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="327" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d42/a00043_1a5460ec38373a3f87ddf04576fe595013" prot="private" static="no" mutable="no">
        <type><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Renderer::entityIndex</definition>
        <argsstring></argsstring>
        <name>entityIndex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="330" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d6/d42/a00043_ae5cf0daa36c2ea61af27de6a4474f733_1ae5cf0daa36c2ea61af27de6a4474f733" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void ssl::init</definition>
        <argsstring>(const Size &amp;, const Size &amp;)</argsstring>
        <name>ssl::init</name>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="d6/d42/a00043_a011181b1351728288232eeea23659ad9_1a011181b1351728288232eeea23659ad9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void ssl::bindEntity</definition>
        <argsstring>(const GraphicsEntity *en, ogl::ShaderProgram &amp;prog)</argsstring>
        <name>ssl::bindEntity</name>
        <param>
          <type>const <ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>en</declname>
        </param>
        <param>
          <type><ref refid="dc/dee/a00053" kindref="compound">ogl::ShaderProgram</ref> &amp;</type>
          <declname>prog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="d6/d42/a00043_a7125c76f2b940cc62548a20db5ad8bea_1a7125c76f2b940cc62548a20db5ad8bea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void ssl::checkInput</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>ssl::checkInput</name>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="199" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d42/a00043_adae72c13e874961793d13473e5eace59_1adae72c13e874961793d13473e5eace59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Renderer::flagResize</definition>
        <argsstring>()</argsstring>
        <name>flagResize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_aeae40403c7d272d284c1509fa93c97b1_1aeae40403c7d272d284c1509fa93c97b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::resize</definition>
        <argsstring>(const Size width, const Size height)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a763962a6a6d475643b0f1f0da02ef990_1a763962a6a6d475643b0f1f0da02ef990" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::init</definition>
        <argsstring>(const Size originalWidth, const Size originalHeight)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>originalWidth</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
          <declname>originalHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a4e9669ed17814b1e9643dee492d4b8af_1a4e9669ed17814b1e9643dee492d4b8af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::initEntity</definition>
        <argsstring>(GraphicsEntity *en, const Index protocol)</argsstring>
        <name>initEntity</name>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>en</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a5aecf2acb1f22e75dd5f923ad0079dd2_1a5aecf2acb1f22e75dd5f923ad0079dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::setUp</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>setUp</name>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a0e175bbdd659821f510ea327e90f5497_1a0e175bbdd659821f510ea327e90f5497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Renderer::queue</definition>
        <argsstring>(GraphicsEntity *e, const Index protocol)</argsstring>
        <name>queue</name>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a360b3fdaa47e444133923cfaeb4e3e3c_1a360b3fdaa47e444133923cfaeb4e3e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::numberOfProtocols</definition>
        <argsstring>()</argsstring>
        <name>numberOfProtocols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a4f3ea4a38df534324ed879d0403d9337_1a4f3ea4a38df534324ed879d0403d9337" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::tearDown</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>tearDown</name>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a7138bcab23fb12c46fe6548e74ef1a7e_1a7138bcab23fb12c46fe6548e74ef1a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::renderFrame</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>renderFrame</name>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a473f3fd76598138b5b5c5747f5b9af30_1a473f3fd76598138b5b5c5747f5b9af30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::checkInput</definition>
        <argsstring>(os::WindowModule *win)</argsstring>
        <name>checkInput</name>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_ae2f40ebeaf8008e1314325b53b41d8d7_1ae2f40ebeaf8008e1314325b53b41d8d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::cleanEntity</definition>
        <argsstring>(GraphicsEntity *en, const Index protocol)</argsstring>
        <name>cleanEntity</name>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>en</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_ada01d78daa4be3d047fb67d5457e951a_1ada01d78daa4be3d047fb67d5457e951a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a9a9b9054dc5fc9959b36914b11a21296_1a9a9b9054dc5fc9959b36914b11a21296" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::destroyEntity</definition>
        <argsstring>(GraphicsEntity *en, const Index protocol)</argsstring>
        <name>destroyEntity</name>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>en</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a34878bbd6823f26564f8c89f9a1a401b_1a34878bbd6823f26564f8c89f9a1a401b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::clearBuffers</definition>
        <argsstring>()</argsstring>
        <name>clearBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a5ebf5cdb714a46ccb6fdcb4a50153aed_1a5ebf5cdb714a46ccb6fdcb4a50153aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::setRefreshColor</definition>
        <argsstring>(const float r, const float g, const float b, const float a=1.0f)</argsstring>
        <name>setRefreshColor</name>
        <param>
          <type>const float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>a</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a1c4ce604c18d3ac4cb2b5394049dbc53_1a1c4ce604c18d3ac4cb2b5394049dbc53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Renderer::setRefreshColor</definition>
        <argsstring>(const Color &amp;c)</argsstring>
        <name>setRefreshColor</name>
        <param>
          <type>const <ref refid="df/d86/a00012" kindref="compound">Color</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a32a709c90d5c0f43af2f2457c875587c_1a32a709c90d5c0f43af2f2457c875587c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Renderer::registerProtocol</definition>
        <argsstring>()</argsstring>
        <name>registerProtocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="285" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="285" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a0f3032c7b65fab558f9c76b162a43bc3_1a0f3032c7b65fab558f9c76b162a43bc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::getOriginalWidth</definition>
        <argsstring>() const </argsstring>
        <name>getOriginalWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a56cf4b8b20e78b71924a5ffd62c45862_1a56cf4b8b20e78b71924a5ffd62c45862" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::getOriginalHeight</definition>
        <argsstring>() const </argsstring>
        <name>getOriginalHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a736a643f76a0e54cf2c3c318351ec192_1a736a643f76a0e54cf2c3c318351ec192" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::getWidth</definition>
        <argsstring>() const </argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a2da93fec309e4822afeb286c7bce818f_1a2da93fec309e4822afeb286c7bce818f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::getHeight</definition>
        <argsstring>() const </argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a68559d2698d5f5aa956ccafa889438a8_1a68559d2698d5f5aa956ccafa889438a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        <definition>Size mc::gfx::Renderer::getSamples</definition>
        <argsstring>() const </argsstring>
        <name>getSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a310e5467e1a24644a63fc5162e4488bb_1a310e5467e1a24644a63fc5162e4488bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/da5/a00075" kindref="compound">Vector</ref>&lt; float, 2 &gt;</type>
        <definition>Vector&lt;float, 2&gt; mc::gfx::Renderer::getWindowRatios</definition>
        <argsstring>() const </argsstring>
        <name>getWindowRatios</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a7d493d5933475eb99911321f39f382e9_1a7d493d5933475eb99911321f39f382e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d12/a00126_aa8d831470fc2c8d0246e9d04a3d68f5f_1aa8d831470fc2c8d0246e9d04a3d68f5f" kindref="member">RenderQueue</ref></type>
        <definition>RenderQueue mc::gfx::Renderer::getRenderQueue</definition>
        <argsstring>() const </argsstring>
        <name>getRenderQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a5f62b1b92c49aacf7258f161c7962d6d_1a5f62b1b92c49aacf7258f161c7962d6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
        <definition>Index mc::gfx::Renderer::getEntityIndex</definition>
        <argsstring>() const </argsstring>
        <name>getEntityIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a2d446e0b738e95762020aa858399d2bb_1a2d446e0b738e95762020aa858399d2bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Renderer::isResized</definition>
        <argsstring>() const </argsstring>
        <name>isResized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="310" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d6/d42/a00043_a00449be81e4e7384155da5bef89d3584_1a00449be81e4e7384155da5bef89d3584" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Renderer::pushEntity</definition>
        <argsstring>(Index protocol, GraphicsEntity *entity)</argsstring>
        <name>pushEntity</name>
        <param>
          <type><ref refid="da/d72/a00124_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref></type>
          <declname>protocol</declname>
        </param>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a44777204d42ceb733a5467f7a4bb5a8b_1a44777204d42ceb733a5467f7a4bb5a8b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::Renderer::pushProtocol</definition>
        <argsstring>(RenderImpl *protocol)</argsstring>
        <name>pushProtocol</name>
        <param>
          <type><ref refid="d5/df9/a00044" kindref="compound">RenderImpl</ref> *</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d42/a00043_a5bbf912e5686125651d65e248556df85_1a5bbf912e5686125651d65e248556df85" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Renderer::generateFramebuffer</definition>
        <argsstring>(const Size &amp;width, const Size &amp;height)</argsstring>
        <name>generateFramebuffer</name>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref> &amp;</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="315" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="d8/d84/a00001_1_todo000008"><xreftitle>Todo</xreftitle><xrefdescription><para>add function to change how many samples msaa uses </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <collaborationgraph>
      <node id="861">
        <label>T</label>
      </node>
      <node id="860">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="861" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="862">
        <label>mc::Vector&lt; float, 2 &gt;</label>
        <link refid="d9/da5/a00075"/>
        <childnode refid="863" relation="template-instance">
          <edgelabel>&lt; float, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="858">
        <label>std::vector&lt; mc::gfx::RenderImpl * &gt;</label>
        <childnode refid="859" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="860" relation="template-instance">
          <edgelabel>&lt; mc::gfx::RenderImpl * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="859">
        <label>mc::gfx::RenderImpl</label>
        <link refid="d5/df9/a00044"/>
      </node>
      <node id="857">
        <label>mc::gfx::Renderer</label>
        <link refid="d6/d42/a00043"/>
        <childnode refid="858" relation="usage">
          <edgelabel>protocols</edgelabel>
        </childnode>
        <childnode refid="862" relation="usage">
          <edgelabel>windowRatios</edgelabel>
        </childnode>
      </node>
      <node id="863">
        <label>mc::Vector&lt; T, N &gt;</label>
        <link refid="d9/da5/a00075"/>
        <childnode refid="861" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Renderer.h" line="195" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="195" bodyend="331"/>
    <listofallmembers>
      <member refid="d6/d42/a00043_a473f3fd76598138b5b5c5747f5b9af30_1a473f3fd76598138b5b5c5747f5b9af30" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>checkInput</name></member>
      <member refid="d6/d42/a00043_ae2f40ebeaf8008e1314325b53b41d8d7_1ae2f40ebeaf8008e1314325b53b41d8d7" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>cleanEntity</name></member>
      <member refid="d6/d42/a00043_a34878bbd6823f26564f8c89f9a1a401b_1a34878bbd6823f26564f8c89f9a1a401b" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>clearBuffers</name></member>
      <member refid="d6/d42/a00043_ada01d78daa4be3d047fb67d5457e951a_1ada01d78daa4be3d047fb67d5457e951a" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>destroy</name></member>
      <member refid="d6/d42/a00043_a9a9b9054dc5fc9959b36914b11a21296_1a9a9b9054dc5fc9959b36914b11a21296" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>destroyEntity</name></member>
      <member refid="d6/d42/a00043_1a5460ec38373a3f87ddf04576fe595013" prot="private" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>entityIndex</name></member>
      <member refid="d6/d42/a00043_adae72c13e874961793d13473e5eace59_1adae72c13e874961793d13473e5eace59" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>flagResize</name></member>
      <member refid="d6/d42/a00043_a5bbf912e5686125651d65e248556df85_1a5bbf912e5686125651d65e248556df85" prot="protected" virt="virtual"><scope>mc::gfx::Renderer</scope><name>generateFramebuffer</name></member>
      <member refid="d6/d42/a00043_a5f62b1b92c49aacf7258f161c7962d6d_1a5f62b1b92c49aacf7258f161c7962d6d" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getEntityIndex</name></member>
      <member refid="d6/d42/a00043_a2da93fec309e4822afeb286c7bce818f_1a2da93fec309e4822afeb286c7bce818f" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getHeight</name></member>
      <member refid="d6/d42/a00043_a56cf4b8b20e78b71924a5ffd62c45862_1a56cf4b8b20e78b71924a5ffd62c45862" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getOriginalHeight</name></member>
      <member refid="d6/d42/a00043_a0f3032c7b65fab558f9c76b162a43bc3_1a0f3032c7b65fab558f9c76b162a43bc3" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getOriginalWidth</name></member>
      <member refid="d6/d42/a00043_a7d493d5933475eb99911321f39f382e9_1a7d493d5933475eb99911321f39f382e9" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getRenderQueue</name></member>
      <member refid="d6/d42/a00043_a68559d2698d5f5aa956ccafa889438a8_1a68559d2698d5f5aa956ccafa889438a8" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getSamples</name></member>
      <member refid="d6/d42/a00043_a736a643f76a0e54cf2c3c318351ec192_1a736a643f76a0e54cf2c3c318351ec192" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getWidth</name></member>
      <member refid="d6/d42/a00043_a310e5467e1a24644a63fc5162e4488bb_1a310e5467e1a24644a63fc5162e4488bb" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>getWindowRatios</name></member>
      <member refid="d6/d42/a00043_a763962a6a6d475643b0f1f0da02ef990_1a763962a6a6d475643b0f1f0da02ef990" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>init</name></member>
      <member refid="d6/d42/a00043_a4e9669ed17814b1e9643dee492d4b8af_1a4e9669ed17814b1e9643dee492d4b8af" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>initEntity</name></member>
      <member refid="d6/d42/a00043_a2d446e0b738e95762020aa858399d2bb_1a2d446e0b738e95762020aa858399d2bb" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>isResized</name></member>
      <member refid="d6/d42/a00043_a360b3fdaa47e444133923cfaeb4e3e3c_1a360b3fdaa47e444133923cfaeb4e3e3c" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>numberOfProtocols</name></member>
      <member refid="d6/d42/a00043_aa151a4d8b2646c857199ce122adf28a1_1aa151a4d8b2646c857199ce122adf28a1" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>originalHeight</name></member>
      <member refid="d6/d42/a00043_a5599b64de4bedc9dced4eedee7e8a073_1a5599b64de4bedc9dced4eedee7e8a073" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>originalWidth</name></member>
      <member refid="d6/d42/a00043_ac2ff679753ef0c57f428c5230ca60fb3_1ac2ff679753ef0c57f428c5230ca60fb3" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>protocols</name></member>
      <member refid="d6/d42/a00043_a00449be81e4e7384155da5bef89d3584_1a00449be81e4e7384155da5bef89d3584" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>pushEntity</name></member>
      <member refid="d6/d42/a00043_a44777204d42ceb733a5467f7a4bb5a8b_1a44777204d42ceb733a5467f7a4bb5a8b" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>pushProtocol</name></member>
      <member refid="d6/d42/a00043_a0e175bbdd659821f510ea327e90f5497_1a0e175bbdd659821f510ea327e90f5497" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>queue</name></member>
      <member refid="d6/d42/a00043_a32a709c90d5c0f43af2f2457c875587c_1a32a709c90d5c0f43af2f2457c875587c" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>registerProtocol</name></member>
      <member refid="d6/d42/a00043_a7138bcab23fb12c46fe6548e74ef1a7e_1a7138bcab23fb12c46fe6548e74ef1a7e" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>renderFrame</name></member>
      <member refid="d6/d42/a00043_aaa9a9b3bafe9bb010dcb95e07c76da09_1aaa9a9b3bafe9bb010dcb95e07c76da09" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>renderQueue</name></member>
      <member refid="d6/d42/a00043_aeae40403c7d272d284c1509fa93c97b1_1aeae40403c7d272d284c1509fa93c97b1" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>resize</name></member>
      <member refid="d6/d42/a00043_a4a2dd121c9396d1c2cf719647f129f3c_1a4a2dd121c9396d1c2cf719647f129f3c" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>resized</name></member>
      <member refid="d6/d42/a00043_ac215e30720f149f5b222cac13a760fe2_1ac215e30720f149f5b222cac13a760fe2" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>samples</name></member>
      <member refid="d6/d42/a00043_a5ebf5cdb714a46ccb6fdcb4a50153aed_1a5ebf5cdb714a46ccb6fdcb4a50153aed" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>setRefreshColor</name></member>
      <member refid="d6/d42/a00043_a1c4ce604c18d3ac4cb2b5394049dbc53_1a1c4ce604c18d3ac4cb2b5394049dbc53" prot="public" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>setRefreshColor</name></member>
      <member refid="d6/d42/a00043_a5aecf2acb1f22e75dd5f923ad0079dd2_1a5aecf2acb1f22e75dd5f923ad0079dd2" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>setUp</name></member>
      <member refid="d6/d42/a00043_a011181b1351728288232eeea23659ad9_1a011181b1351728288232eeea23659ad9" prot="private" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>ssl::bindEntity</name></member>
      <member refid="d6/d42/a00043_a7125c76f2b940cc62548a20db5ad8bea_1a7125c76f2b940cc62548a20db5ad8bea" prot="private" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>ssl::checkInput</name></member>
      <member refid="d6/d42/a00043_ae5cf0daa36c2ea61af27de6a4474f733_1ae5cf0daa36c2ea61af27de6a4474f733" prot="private" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>ssl::init</name></member>
      <member refid="d6/d42/a00043_a4f3ea4a38df534324ed879d0403d9337_1a4f3ea4a38df534324ed879d0403d9337" prot="public" virt="virtual"><scope>mc::gfx::Renderer</scope><name>tearDown</name></member>
      <member refid="d6/d42/a00043_a07cfa64618179285dddb7e24c0d5aadd_1a07cfa64618179285dddb7e24c0d5aadd" prot="protected" virt="non-virtual"><scope>mc::gfx::Renderer</scope><name>windowRatios</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
