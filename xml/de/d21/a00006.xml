<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="de/d21/a00006" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::AlignmentComponent</compoundname>
    <basecompoundref refid="d2/de7/a00014" prot="public" virt="non-virtual">mc::gfx::Component</basecompoundref>
    <includes refid="d2/d1f/a00083" local="no">Components.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/d21/a00006_1a5551c010a149b5bd5e0fab907e85bfa9" prot="private" static="no" mutable="no">
        <type><ref refid="d7/d12/a00126_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
        <definition>VerticalAlign mc::gfx::AlignmentComponent::vertAlign</definition>
        <argsstring></argsstring>
        <name>vertAlign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="51" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d21/a00006_1ab47ef29be515cf55ae330c977f21344b" prot="private" static="no" mutable="no">
        <type><ref refid="d7/d12/a00126_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
        <definition>HorizontalAlign mc::gfx::AlignmentComponent::horzAlign</definition>
        <argsstring></argsstring>
        <name>horzAlign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="52" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d21/a00006_a841f19f4aad1cd0bb1a97cc2c77bcc08_1a841f19f4aad1cd0bb1a97cc2c77bcc08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mc::gfx::AlignmentComponent::AlignmentComponent</definition>
        <argsstring>(const VerticalAlign vert=VerticalAlign::CENTER, const HorizontalAlign horz=HorizontalAlign::CENTER)</argsstring>
        <name>AlignmentComponent</name>
        <param>
          <type>const <ref refid="d7/d12/a00126_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
          <declname>vert</declname>
          <defval><ref refid="d7/d12/a00126_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8caac397289ee45877be0cd49811fe245b4e" kindref="member">VerticalAlign::CENTER</ref></defval>
        </param>
        <param>
          <type>const <ref refid="d7/d12/a00126_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
          <declname>horz</declname>
          <defval><ref refid="d7/d12/a00126_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8caac397289ee45877be0cd49811fe245b4e" kindref="member">HorizontalAlign::CENTER</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d21/a00006_aa334823f784c381f782c8322b0c7aed9_1aa334823f784c381f782c8322b0c7aed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::AlignmentComponent::setVerticalAlign</definition>
        <argsstring>(const VerticalAlign align)</argsstring>
        <name>setVerticalAlign</name>
        <param>
          <type>const <ref refid="d7/d12/a00126_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/da2/a00019_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d21/a00006_a4cc1cfcc6a7118d11695bbdc900e6ee3_1a4cc1cfcc6a7118d11695bbdc900e6ee3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/d12/a00126_a2245e610098eaf3ff4dc56942db8a8ca_1a2245e610098eaf3ff4dc56942db8a8ca" kindref="member">VerticalAlign</ref></type>
        <definition>const VerticalAlign mc::gfx::AlignmentComponent::getVerticalAlign</definition>
        <argsstring>() const </argsstring>
        <name>getVerticalAlign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d21/a00006_a94742ad14e3fea41f470af6a88a5fd40_1a94742ad14e3fea41f470af6a88a5fd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::AlignmentComponent::setHorizontalAlign</definition>
        <argsstring>(HorizontalAlign align)</argsstring>
        <name>setHorizontalAlign</name>
        <param>
          <type><ref refid="d7/d12/a00126_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will make this <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> dirty. </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/da2/a00019_a260d56ae29f836160836154553dea0c5_1a260d56ae29f836160836154553dea0c5a2fe74f34469112558859753232475314" kindref="member">Entity::DIRTY</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d21/a00006_a0d50f67cd788f402c9dda8afe89f3cd6_1a0d50f67cd788f402c9dda8afe89f3cd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/d12/a00126_a023837eb95490a4a818ece72248c0dee_1a023837eb95490a4a818ece72248c0dee" kindref="member">HorizontalAlign</ref></type>
        <definition>const HorizontalAlign mc::gfx::AlignmentComponent::getHorizontalAlign</definition>
        <argsstring>() const </argsstring>
        <name>getHorizontalAlign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d21/a00006_a4342f4e2edf1b39b6429b5bb01c654a1_1a4342f4e2edf1b39b6429b5bb01c654a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::AlignmentComponent::operator==</definition>
        <argsstring>(const AlignmentComponent &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="de/d21/a00006" kindref="compound">AlignmentComponent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/d21/a00006_afa8247e1eea2d0a04b43c79cc036e782_1afa8247e1eea2d0a04b43c79cc036e782" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::AlignmentComponent::operator!=</definition>
        <argsstring>(const AlignmentComponent &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="de/d21/a00006" kindref="compound">AlignmentComponent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/d21/a00006_a9a5ec1ca6612a523dac804323f6ab443_1a9a5ec1ca6612a523dac804323f6ab443" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::AlignmentComponent::clean</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>clean</name>
        <reimplements refid="d2/de7/a00014_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe">clean</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="dd/da2/a00019_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e" kindref="member">Entity::clean()</ref> is called and it was dirty. </para>        </briefdescription>
        <detaileddescription>
<para>This is not required for inheritance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a4ccee5b84ca50035ddcd6647e31713e9_1a4ccee5b84ca50035ddcd6647e31713e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::init</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>init</name>
        <reimplementedby refid="da/d45/a00011_a189b8279d1eab734cb93951af25ca42b_1a189b8279d1eab734cb93951af25ca42b">init</reimplementedby>
        <reimplementedby refid="d3/d52/a00023_a7f0c3b9d25af123b7385bc49bd2e7bdd_1a7f0c3b9d25af123b7385bc49bd2e7bdd">init</reimplementedby>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when this <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> is added to the <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> via <ref refid="dd/da2/a00019_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is not called at <ref refid="dd/da2/a00019_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity::init()</ref>, instead it is called when the component is added to the <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput>. Keep that in mind. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_aee73aaff58c9cb84d705e3e5557c98c6_1aee73aaff58c9cb84d705e3e5557c98c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mc::gfx::Component::update</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>update</name>
        <reimplementedby refid="da/d45/a00011_ad85853b9fe3a1bf2057151ece1bbf799_1ad85853b9fe3a1bf2057151ece1bbf799">update</reimplementedby>
        <reimplementedby refid="d3/d52/a00023_a68e91d1b44703a0248f79533161cd930_1a68e91d1b44703a0248f79533161cd930">update</reimplementedby>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="dd/da2/a00019_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. </para><para>There is no function to remove a <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> so this is the only way for a <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> to be removed from an <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para><para><ref refid="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a" kindref="member">Component::destroy(Entity*)</ref> will be called afterwards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether this <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> should be deleted or not. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::destroy</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>destroy</name>
        <reimplementedby refid="da/d45/a00011_aae900faa32473bcde4c8a0cae9ba8319_1aae900faa32473bcde4c8a0cae9ba8319">destroy</reimplementedby>
        <reimplementedby refid="d3/d52/a00023_ae5f6f16ac0694193728dd13759eb7934_1ae5f6f16ac0694193728dd13759eb7934">destroy</reimplementedby>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="dd/da2/a00019_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity::destroy()</ref> is called or the <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> is removed via <ref refid="d2/de7/a00014_aee73aaff58c9cb84d705e3e5557c98c6_1aee73aaff58c9cb84d705e3e5557c98c6" kindref="member">Component::update(Entity*)</ref>, whichever comes first. </para>        </briefdescription>
        <detaileddescription>
<para>Once <ref refid="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a" kindref="member">Component::destroy(Entity*)</ref> is called, it is immediately removed from the <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput>. Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a4bf270ecdf1b1a5f3f512a34ad5f8ecf_1a4bf270ecdf1b1a5f3f512a34ad5f8ecf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::render</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>render</name>
        <reimplementedby refid="da/d45/a00011_afc742e1326ae43d6098bcd41b2d4bc2f_1afc742e1326ae43d6098bcd41b2d4bc2f">render</reimplementedby>
        <reimplementedby refid="d3/d52/a00023_a1a1dbdb28896c3174152349571e97e41_1a1a1dbdb28896c3174152349571e97e41">render</reimplementedby>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::hover</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>hover</name>
        <reimplementedby refid="da/d45/a00011_a4dea256750298e7f701793c06c34cf6c_1a4dea256750298e7f701793c06c34cf6c">hover</reimplementedby>
        <reimplementedby refid="d3/d52/a00023_a9ba9644f0304b8c8d1e42da6ac494e21_1a9ba9644f0304b8c8d1e42da6ac494e21">hover</reimplementedby>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_acc330b8ee27730bb54f3ee02afe518de_1acc330b8ee27730bb54f3ee02afe518de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
        <definition>Entity* mc::gfx::Component::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a61681040d33095101cfcd3becd867702_1a61681040d33095101cfcd3becd867702" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Component::operator==</definition>
        <argsstring>(const Component &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d2/de7/a00014" kindref="compound">Component</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a0aa780e76d1e05b46e4e9487c69f72c5_1a0aa780e76d1e05b46e4e9487c69f72c5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Component::operator!=</definition>
        <argsstring>(const Component &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d2/de7/a00014" kindref="compound">Component</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="564">
        <label>mc::gfx::Component</label>
        <link refid="d2/de7/a00014"/>
      </node>
      <node id="563">
        <label>mc::gfx::AlignmentComponent</label>
        <link refid="de/d21/a00006"/>
        <childnode refid="564" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="566">
        <label>mc::gfx::Component</label>
        <link refid="d2/de7/a00014"/>
      </node>
      <node id="565">
        <label>mc::gfx::AlignmentComponent</label>
        <link refid="de/d21/a00006"/>
        <childnode refid="566" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Components.h" line="30" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="30" bodyend="53"/>
    <listofallmembers>
      <member refid="de/d21/a00006_a841f19f4aad1cd0bb1a97cc2c77bcc08_1a841f19f4aad1cd0bb1a97cc2c77bcc08" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>AlignmentComponent</name></member>
      <member refid="de/d21/a00006_a9a5ec1ca6612a523dac804323f6ab443_1a9a5ec1ca6612a523dac804323f6ab443" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>clean</name></member>
      <member refid="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>destroy</name></member>
      <member refid="de/d21/a00006_a0d50f67cd788f402c9dda8afe89f3cd6_1a0d50f67cd788f402c9dda8afe89f3cd6" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>getHorizontalAlign</name></member>
      <member refid="d2/de7/a00014_acc330b8ee27730bb54f3ee02afe518de_1acc330b8ee27730bb54f3ee02afe518de" prot="protected" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>getParent</name></member>
      <member refid="de/d21/a00006_a4cc1cfcc6a7118d11695bbdc900e6ee3_1a4cc1cfcc6a7118d11695bbdc900e6ee3" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>getVerticalAlign</name></member>
      <member refid="de/d21/a00006_1ab47ef29be515cf55ae330c977f21344b" prot="private" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>horzAlign</name></member>
      <member refid="d2/de7/a00014_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>hover</name></member>
      <member refid="d2/de7/a00014_a4ccee5b84ca50035ddcd6647e31713e9_1a4ccee5b84ca50035ddcd6647e31713e9" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>init</name></member>
      <member refid="de/d21/a00006_afa8247e1eea2d0a04b43c79cc036e782_1afa8247e1eea2d0a04b43c79cc036e782" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>operator!=</name></member>
      <member refid="d2/de7/a00014_a0aa780e76d1e05b46e4e9487c69f72c5_1a0aa780e76d1e05b46e4e9487c69f72c5" prot="protected" virt="non-virtual" ambiguityscope="mc::gfx::Component::"><scope>mc::gfx::AlignmentComponent</scope><name>operator!=</name></member>
      <member refid="de/d21/a00006_a4342f4e2edf1b39b6429b5bb01c654a1_1a4342f4e2edf1b39b6429b5bb01c654a1" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>operator==</name></member>
      <member refid="d2/de7/a00014_a61681040d33095101cfcd3becd867702_1a61681040d33095101cfcd3becd867702" prot="protected" virt="non-virtual" ambiguityscope="mc::gfx::Component::"><scope>mc::gfx::AlignmentComponent</scope><name>operator==</name></member>
      <member refid="d2/de7/a00014_a4bf270ecdf1b1a5f3f512a34ad5f8ecf_1a4bf270ecdf1b1a5f3f512a34ad5f8ecf" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>render</name></member>
      <member refid="de/d21/a00006_a94742ad14e3fea41f470af6a88a5fd40_1a94742ad14e3fea41f470af6a88a5fd40" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>setHorizontalAlign</name></member>
      <member refid="de/d21/a00006_aa334823f784c381f782c8322b0c7aed9_1aa334823f784c381f782c8322b0c7aed9" prot="public" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>setVerticalAlign</name></member>
      <member refid="d2/de7/a00014_aee73aaff58c9cb84d705e3e5557c98c6_1aee73aaff58c9cb84d705e3e5557c98c6" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>update</name></member>
      <member refid="de/d21/a00006_1a5551c010a149b5bd5e0fab907e85bfa9" prot="private" virt="non-virtual"><scope>mc::gfx::AlignmentComponent</scope><name>vertAlign</name></member>
      <member refid="d2/de7/a00014_a0782337880101d03483ea322e0ef2a93_1a0782337880101d03483ea322e0ef2a93" prot="protected" virt="virtual"><scope>mc::gfx::AlignmentComponent</scope><name>~Component</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
