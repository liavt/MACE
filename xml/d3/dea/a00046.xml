<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d3/dea/a00046" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::RenderProtocol&lt; Button &gt;</compoundname>
    <basecompoundref refid="d5/df9/a00044" prot="public" virt="non-virtual">mc::gfx::RenderImpl</basecompoundref>
    <includes refid="df/d13/a00085" local="no">Entity2D.h</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/dea/a00046_1af36b3a055077bb05311302b9ec0510bf" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d31/a00069" kindref="compound">SimpleQuadRenderer</ref></type>
        <definition>SimpleQuadRenderer mc::gfx::RenderProtocol&lt; Button &gt;::renderer</definition>
        <argsstring></argsstring>
        <name>renderer</name>
        <initializer>= <ref refid="d4/d31/a00069" kindref="compound">SimpleQuadRenderer</ref>(true)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="438" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/dea/a00046_ad46303b781592b3942a274b4d8c24482_1ad46303b781592b3942a274b4d8c24482" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::RenderProtocol&lt; Button &gt;::init</definition>
        <argsstring>(const Size originalWidth, const Size originalHeight) override</argsstring>
        <name>init</name>
        <reimplements refid="d5/df9/a00044_a4fd8e0a36eb1e0e32b2966c68a9d1f2f_1a4fd8e0a36eb1e0e32b2966c68a9d1f2f">init</reimplements>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dea/a00046_ae64fddf3a6cfc881c543e8e31b603fc3_1ae64fddf3a6cfc881c543e8e31b603fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::RenderProtocol&lt; Button &gt;::initEntity</definition>
        <argsstring>(GraphicsEntity *en) override</argsstring>
        <name>initEntity</name>
        <reimplements refid="d5/df9/a00044_aa4cc0dfa80d8fa019a2dfc673c1b5747_1aa4cc0dfa80d8fa019a2dfc673c1b5747">initEntity</reimplements>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dea/a00046_a264f7f0a13dd811415c21eb9a73ac111_1a264f7f0a13dd811415c21eb9a73ac111" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::RenderProtocol&lt; Button &gt;::renderEntity</definition>
        <argsstring>(os::WindowModule *win, GraphicsEntity *entity) override</argsstring>
        <name>renderEntity</name>
        <reimplements refid="d5/df9/a00044_a9f00ce6cfcc7306ad6b69b182ab2928f_1a9f00ce6cfcc7306ad6b69b182ab2928f">renderEntity</reimplements>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
        </param>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/dea/a00046_adffcc08aead3af0639990d73ec3308b8_1adffcc08aead3af0639990d73ec3308b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::RenderProtocol&lt; Button &gt;::destroy</definition>
        <argsstring>() override</argsstring>
        <name>destroy</name>
        <reimplements refid="d5/df9/a00044_aa45e3ec6a2548c4dcb4bdbffa19fe0ee_1aa45e3ec6a2548c4dcb4bdbffa19fe0ee">destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity2D.h" line="436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d5/df9/a00044_a6bd329f3d60c5ea961bda5f29c3231a8_1a6bd329f3d60c5ea961bda5f29c3231a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::RenderImpl::resize</definition>
        <argsstring>(const Size, const Size)</argsstring>
        <name>resize</name>
        <reimplementedby refid="d6/d97/a00045_acffe593147fc5558d65a1e495c1e4de1_1acffe593147fc5558d65a1e495c1e4de1">resize</reimplementedby>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        </param>
        <param>
          <type>const <ref refid="da/d72/a00124_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="118" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="d5/df9/a00044_a09de296a552820e6739bc9227e57b56d_1a09de296a552820e6739bc9227e57b56d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::RenderImpl::setUp</definition>
        <argsstring>(os::WindowModule *, RenderQueue *)</argsstring>
        <name>setUp</name>
        <reimplementedby refid="d6/d97/a00045_a90100403ef1d81460b9b24abe90e03ba_1a90100403ef1d81460b9b24abe90e03ba">setUp</reimplementedby>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
        </param>
        <param>
          <type><ref refid="d7/d12/a00126_aa8d831470fc2c8d0246e9d04a3d68f5f_1aa8d831470fc2c8d0246e9d04a3d68f5f" kindref="member">RenderQueue</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="135" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="d5/df9/a00044_acbce840815446695a44776cb15537b2e_1acbce840815446695a44776cb15537b2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::RenderImpl::tearDown</definition>
        <argsstring>(os::WindowModule *, RenderQueue *)</argsstring>
        <name>tearDown</name>
        <reimplementedby refid="d6/d97/a00045_a62069cbbaddd980bb02daceafe8c4538_1a62069cbbaddd980bb02daceafe8c4538">tearDown</reimplementedby>
        <param>
          <type><ref refid="d9/da4/a00078" kindref="compound">os::WindowModule</ref> *</type>
        </param>
        <param>
          <type><ref refid="d7/d12/a00126_aa8d831470fc2c8d0246e9d04a3d68f5f_1aa8d831470fc2c8d0246e9d04a3d68f5f" kindref="member">RenderQueue</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="145" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="d5/df9/a00044_a992cd784efc111151a4bb6c699821e37_1a992cd784efc111151a4bb6c699821e37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::RenderImpl::cleanEntity</definition>
        <argsstring>(GraphicsEntity *)</argsstring>
        <name>cleanEntity</name>
        <reimplementedby refid="d6/d97/a00045_a2e9c06972639b6e5f6182302acc259ec_1a2e9c06972639b6e5f6182302acc259ec">cleanEntity</reimplementedby>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="151" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d5/df9/a00044_a8865aa2228ff0bc7479dfd0126a1d3b9_1a8865aa2228ff0bc7479dfd0126a1d3b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::RenderImpl::destroyEntity</definition>
        <argsstring>(GraphicsEntity *)</argsstring>
        <name>destroyEntity</name>
        <reimplementedby refid="d6/d97/a00045_a15a1ba89268e1a29266e9c75d719f75e_1a15a1ba89268e1a29266e9c75d719f75e">destroyEntity</reimplementedby>
        <param>
          <type><ref refid="d3/dfe/a00025" kindref="compound">GraphicsEntity</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Renderer.h" line="162" column="1" bodyfile="include/MACE/Graphics/Renderer.h" bodystart="162" bodyend="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>This should only be used internally or by advanced users. Misuse can cause undefined behavior </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="875">
        <label>mc::gfx::RenderProtocol&lt; Button &gt;</label>
        <link refid="d3/dea/a00046"/>
        <childnode refid="876" relation="public-inheritance">
        </childnode>
      </node>
      <node id="876">
        <label>mc::gfx::RenderImpl</label>
        <link refid="d5/df9/a00044"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="877">
        <label>mc::gfx::RenderProtocol&lt; Button &gt;</label>
        <link refid="d3/dea/a00046"/>
        <childnode refid="878" relation="public-inheritance">
        </childnode>
      </node>
      <node id="878">
        <label>mc::gfx::RenderImpl</label>
        <link refid="d5/df9/a00044"/>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Entity2D.h" line="429" column="1" bodyfile="include/MACE/Graphics/Entity2D.h" bodystart="429" bodyend="439"/>
    <listofallmembers>
      <member refid="d5/df9/a00044_a992cd784efc111151a4bb6c699821e37_1a992cd784efc111151a4bb6c699821e37" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>cleanEntity</name></member>
      <member refid="d3/dea/a00046_adffcc08aead3af0639990d73ec3308b8_1adffcc08aead3af0639990d73ec3308b8" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>destroy</name></member>
      <member refid="d5/df9/a00044_a8865aa2228ff0bc7479dfd0126a1d3b9_1a8865aa2228ff0bc7479dfd0126a1d3b9" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>destroyEntity</name></member>
      <member refid="d3/dea/a00046_ad46303b781592b3942a274b4d8c24482_1ad46303b781592b3942a274b4d8c24482" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>init</name></member>
      <member refid="d3/dea/a00046_ae64fddf3a6cfc881c543e8e31b603fc3_1ae64fddf3a6cfc881c543e8e31b603fc3" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>initEntity</name></member>
      <member refid="d3/dea/a00046_a264f7f0a13dd811415c21eb9a73ac111_1a264f7f0a13dd811415c21eb9a73ac111" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>renderEntity</name></member>
      <member refid="d3/dea/a00046_1af36b3a055077bb05311302b9ec0510bf" prot="private" virt="non-virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>renderer</name></member>
      <member refid="d5/df9/a00044_ab9f74038bf9e1c44b26eebc57c3a9b47_1ab9f74038bf9e1c44b26eebc57c3a9b47" prot="public" virt="non-virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>RenderImpl</name></member>
      <member refid="d5/df9/a00044_a6bd329f3d60c5ea961bda5f29c3231a8_1a6bd329f3d60c5ea961bda5f29c3231a8" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>resize</name></member>
      <member refid="d5/df9/a00044_a09de296a552820e6739bc9227e57b56d_1a09de296a552820e6739bc9227e57b56d" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>setUp</name></member>
      <member refid="d5/df9/a00044_acbce840815446695a44776cb15537b2e_1acbce840815446695a44776cb15537b2e" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>tearDown</name></member>
      <member refid="d5/df9/a00044_a1a83129c78f067dc116964ee24e15fb2_1a1a83129c78f067dc116964ee24e15fb2" prot="public" virt="virtual"><scope>mc::gfx::RenderProtocol&lt; Button &gt;</scope><name>~RenderImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
