<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d3/d52/a00023" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mc::Module</compoundname>
    <derivedcompoundref refid="d1/dc6/a00037" prot="public" virt="non-virtual">mc::os::WindowModule</derivedcompoundref>
    <includes refid="d1/d22/a00057" local="no">Module.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d52/a00023_a854aad3bb8a2f60446fb14aeb28967b6_1a854aad3bb8a2f60446fb14aeb28967b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::Module::init</definition>
        <argsstring>()=0</argsstring>
        <name>init</name>
        <reimplementedby refid="d1/dc6/a00037_aa14fd4f80a3b582f1584ecacbf541f54_1aa14fd4f80a3b582f1584ecacbf541f54">init</reimplementedby>
        <briefdescription>
<para>Called when <ref refid="d1/d09/a00077_a86b7559895967af432c5c3db728bd0bc_1a86b7559895967af432c5c3db728bd0bc" kindref="member">System#init</ref> is called and this <computeroutput><ref refid="d3/d52/a00023" kindref="compound">Module</ref></computeroutput> is registered. </para>        </briefdescription>
        <detaileddescription>
<para>Use this to initialize variables, start streams, or launch a context. </para><para>Should only be called once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/System/Module.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d52/a00023_a6417f3db90ae235fb1be01ed6a3d612c_1a6417f3db90ae235fb1be01ed6a3d612c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::Module::update</definition>
        <argsstring>()=0</argsstring>
        <name>update</name>
        <reimplementedby refid="d1/dc6/a00037_a4e30b4c62fb168a976063b265dd50c38_1a4e30b4c62fb168a976063b265dd50c38">update</reimplementedby>
        <briefdescription>
<para>Called when <ref refid="d1/d09/a00077_a90e14e44eb5a6019c913a6a197deb4a0_1a90e14e44eb5a6019c913a6a197deb4a0" kindref="member">System#update</ref> is called and this <computeroutput><ref refid="d3/d52/a00023" kindref="compound">Module</ref></computeroutput> is registered. </para>        </briefdescription>
        <detaileddescription>
<para>Use this update states, send messages, swap graphics buffers, render, process, or anything that needs to be periodically checked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/System/Module.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d52/a00023_abf13bd45de10185d4139dfff22a555d2_1abf13bd45de10185d4139dfff22a555d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::Module::destroy</definition>
        <argsstring>()=0</argsstring>
        <name>destroy</name>
        <reimplementedby refid="d1/dc6/a00037_a588d592078a0b1ca34b3cec75a2f4ae3_1a588d592078a0b1ca34b3cec75a2f4ae3">destroy</reimplementedby>
        <briefdescription>
<para>Called when <ref refid="d1/d09/a00077_a2479db7b835f5641194f02b22ad66551_1a2479db7b835f5641194f02b22ad66551" kindref="member">System#destroy</ref> is called and this <computeroutput><ref refid="d3/d52/a00023" kindref="compound">Module</ref></computeroutput> is registered. </para>        </briefdescription>
        <detaileddescription>
<para>Use this to clear memory, close streams, or clean up anything that needs to be cleaned up. </para><para>Should only be called before the program is closed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/System/Module.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d3/d52/a00023_aa6d981a55ad5c04a39768e3ddcb0ad49_1aa6d981a55ad5c04a39768e3ddcb0ad49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string mc::Module::getName</definition>
        <argsstring>() const  =0</argsstring>
        <name>getName</name>
        <reimplementedby refid="d1/dc6/a00037_ab2c762a61a27767d5403265c6402ac7a_1ab2c762a61a27767d5403265c6402ac7a">getName</reimplementedby>
        <briefdescription>
<para>Override this function and return a UNIQUE name for this <computeroutput><ref refid="d3/d52/a00023" kindref="compound">Module</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para>The name for your <computeroutput><ref refid="d3/d52/a00023" kindref="compound">Module</ref></computeroutput> is used in comparison, so make sure it is as unique as possible. </para><para>It is akin to a hashcode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/System/Module.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract class used for doing a task in MACE. </para>    </briefdescription>
    <detaileddescription>
<para>Plugged into <ref refid="d1/d09/a00077" kindref="compound">System</ref> via <ref refid="d1/d09/a00077_a110d878f49e4dcb0c348caa433b4fe70_1a110d878f49e4dcb0c348caa433b4fe70" kindref="member">addModule().</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="361">
        <label>mc::os::WindowModule</label>
        <link refid="d1/dc6/a00037"/>
        <childnode refid="360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="360">
        <label>mc::Module</label>
        <link refid="d3/d52/a00023"/>
      </node>
    </inheritancegraph>
    <location file="include/MACE/System/Module.h" line="22" column="1" bodyfile="include/MACE/System/Module.h" bodystart="22" bodyend="55"/>
    <listofallmembers>
      <member refid="d3/d52/a00023_abf13bd45de10185d4139dfff22a555d2_1abf13bd45de10185d4139dfff22a555d2" prot="public" virt="pure-virtual"><scope>mc::Module</scope><name>destroy</name></member>
      <member refid="d3/d52/a00023_aa6d981a55ad5c04a39768e3ddcb0ad49_1aa6d981a55ad5c04a39768e3ddcb0ad49" prot="public" virt="pure-virtual"><scope>mc::Module</scope><name>getName</name></member>
      <member refid="d3/d52/a00023_a854aad3bb8a2f60446fb14aeb28967b6_1a854aad3bb8a2f60446fb14aeb28967b6" prot="public" virt="pure-virtual"><scope>mc::Module</scope><name>init</name></member>
      <member refid="d3/d52/a00023_a6417f3db90ae235fb1be01ed6a3d612c_1a6417f3db90ae235fb1be01ed6a3d612c" prot="public" virt="pure-virtual"><scope>mc::Module</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
