<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="df/d03/a00062" kind="class" language="C++" prot="public">
    <compoundname>mc::os::SignalModule</compoundname>
    <basecompoundref refid="db/df3/a00034" prot="public" virt="non-virtual">mc::Module</basecompoundref>
    <includes refid="d9/d4b/a00117" local="no">Signal.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d03/a00062_a7432ca909e7675bf8673a7ea85622e8c_1a7432ca909e7675bf8673a7ea85622e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::os::SignalModule::init</definition>
        <argsstring>() override</argsstring>
        <name>init</name>
        <reimplements refid="db/df3/a00034_a854aad3bb8a2f60446fb14aeb28967b6_1a854aad3bb8a2f60446fb14aeb28967b6">init</reimplements>
        <briefdescription>
<para>Called when <ref refid="d9/d47/a00129_a87ae59d4d843c7d01b12f5dadc36c01a_1a87ae59d4d843c7d01b12f5dadc36c01a" kindref="member">MACE#init</ref> is called and this <computeroutput><ref refid="db/df3/a00034" kindref="compound">Module</ref></computeroutput> is registered. </para>        </briefdescription>
        <detaileddescription>
<para>Use this to initialize variables, start streams, or launch a context. </para><para>Should only be called once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Signal.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d03/a00062_a9fa0d3bf88882b7b6a16e297f1b5fc6f_1a9fa0d3bf88882b7b6a16e297f1b5fc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::os::SignalModule::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="db/df3/a00034_a6417f3db90ae235fb1be01ed6a3d612c_1a6417f3db90ae235fb1be01ed6a3d612c">update</reimplements>
        <briefdescription>
<para>Called when <ref refid="d9/d47/a00129_a857b4aaf5098870c36994338ded0eb88_1a857b4aaf5098870c36994338ded0eb88" kindref="member">MACE#update</ref> is called and this <computeroutput><ref refid="db/df3/a00034" kindref="compound">Module</ref></computeroutput> is registered. </para>        </briefdescription>
        <detaileddescription>
<para>Use this update states, send messages, swap graphics buffers, render, process, or anything that needs to be periodically checked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Signal.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d03/a00062_a92aadb3fc78801c7a12d959927f94050_1a92aadb3fc78801c7a12d959927f94050" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mc::os::SignalModule::destroy</definition>
        <argsstring>() override</argsstring>
        <name>destroy</name>
        <reimplements refid="db/df3/a00034_abf13bd45de10185d4139dfff22a555d2_1abf13bd45de10185d4139dfff22a555d2">destroy</reimplements>
        <briefdescription>
<para>Called when <ref refid="d9/d47/a00129_a2d1213f9aab871e066d5dbfb316c3dc2_1a2d1213f9aab871e066d5dbfb316c3dc2" kindref="member">MACE#destroy</ref> is called and this <computeroutput><ref refid="db/df3/a00034" kindref="compound">Module</ref></computeroutput> is registered. </para>        </briefdescription>
        <detaileddescription>
<para>Use this to clear memory, close streams, or clean up anything that needs to be cleaned up. </para><para>Should only be called before the program is closed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Signal.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d03/a00062_a442c3a3470ee1e6d6e04116ebe5ec15a_1a442c3a3470ee1e6d6e04116ebe5ec15a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string mc::os::SignalModule::getName</definition>
        <argsstring>() const  override</argsstring>
        <name>getName</name>
        <reimplements refid="db/df3/a00034_aa6d981a55ad5c04a39768e3ddcb0ad49_1aa6d981a55ad5c04a39768e3ddcb0ad49">getName</reimplements>
        <briefdescription>
<para>Override this function and return a UNIQUE name for this <computeroutput><ref refid="db/df3/a00034" kindref="compound">Module</ref></computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para>The name for your <computeroutput><ref refid="db/df3/a00034" kindref="compound">Module</ref></computeroutput> is used in comparison, so make sure it is as unique as possible. </para><para>It is akin to a hashcode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Signal.h" line="51" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="997">
        <label>mc::Module</label>
        <link refid="db/df3/a00034"/>
      </node>
      <node id="996">
        <label>mc::os::SignalModule</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="997" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="999">
        <label>mc::Module</label>
        <link refid="db/df3/a00034"/>
      </node>
      <node id="998">
        <label>mc::os::SignalModule</label>
        <link refid="df/d03/a00062"/>
        <childnode refid="999" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Utility/Signal.h" line="45" column="1" bodyfile="include/MACE/Utility/Signal.h" bodystart="45" bodyend="52"/>
    <listofallmembers>
      <member refid="df/d03/a00062_a92aadb3fc78801c7a12d959927f94050_1a92aadb3fc78801c7a12d959927f94050" prot="public" virt="virtual"><scope>mc::os::SignalModule</scope><name>destroy</name></member>
      <member refid="df/d03/a00062_a442c3a3470ee1e6d6e04116ebe5ec15a_1a442c3a3470ee1e6d6e04116ebe5ec15a" prot="public" virt="virtual"><scope>mc::os::SignalModule</scope><name>getName</name></member>
      <member refid="df/d03/a00062_a7432ca909e7675bf8673a7ea85622e8c_1a7432ca909e7675bf8673a7ea85622e8c" prot="public" virt="virtual"><scope>mc::os::SignalModule</scope><name>init</name></member>
      <member refid="df/d03/a00062_a9fa0d3bf88882b7b6a16e297f1b5fc6f_1a9fa0d3bf88882b7b6a16e297f1b5fc6f" prot="public" virt="virtual"><scope>mc::os::SignalModule</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
