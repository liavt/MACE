<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="df/d86/a00012" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mc::gfx::Component</compoundname>
    <derivedcompoundref refid="da/da0/a00009" prot="public" virt="non-virtual">mc::gfx::CallbackComponent</derivedcompoundref>
    <derivedcompoundref refid="db/db2/a00020" prot="public" virt="non-virtual">mc::gfx::FPSComponent</derivedcompoundref>
    <includes refid="df/d03/a00062" local="no">Entity.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="df/d86/a00012_a614439ccac0344926adc4c0165d64060_1a614439ccac0344926adc4c0165d64060" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Entity</definition>
        <argsstring></argsstring>
        <name>Entity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="52" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="df/d86/a00012_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::init</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>init</name>
        <reimplementedby refid="da/da0/a00009_a189b8279d1eab734cb93951af25ca42b_1a189b8279d1eab734cb93951af25ca42b">init</reimplementedby>
        <reimplementedby refid="db/db2/a00020_a7f0c3b9d25af123b7385bc49bd2e7bdd_1a7f0c3b9d25af123b7385bc49bd2e7bdd">init</reimplementedby>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when this <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> is added to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> via <ref refid="d7/d7a/a00016_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is not called at <ref refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity::init()</ref>, instead it is called when the component is added to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>. Keep that in mind. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool mc::gfx::Component::update</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>update</name>
        <reimplementedby refid="da/da0/a00009_ad85853b9fe3a1bf2057151ece1bbf799_1ad85853b9fe3a1bf2057151ece1bbf799">update</reimplementedby>
        <reimplementedby refid="db/db2/a00020_a68e91d1b44703a0248f79533161cd930_1a68e91d1b44703a0248f79533161cd930">update</reimplementedby>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. </para><para>There is no function to remove a <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> so this is the only way for a <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> to be removed from an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para><para><ref refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> will be called afterwards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether this <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> should be deleted or not. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::destroy</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>destroy</name>
        <reimplementedby refid="da/da0/a00009_aae900faa32473bcde4c8a0cae9ba8319_1aae900faa32473bcde4c8a0cae9ba8319">destroy</reimplementedby>
        <reimplementedby refid="db/db2/a00020_ae5f6f16ac0694193728dd13759eb7934_1ae5f6f16ac0694193728dd13759eb7934">destroy</reimplementedby>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d7/d7a/a00016_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity::destroy()</ref> is called or the <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> is removed via <ref refid="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>, whichever comes first. </para>        </briefdescription>
        <detaileddescription>
<para>Once <ref refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> is called, it is immediately removed from the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>. Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d86/a00012_a55315efee992bdb1caeaaebd151de49f_1a55315efee992bdb1caeaaebd151de49f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::render</definition>
        <argsstring>(Entity *e)=0</argsstring>
        <name>render</name>
        <reimplementedby refid="da/da0/a00009_afc742e1326ae43d6098bcd41b2d4bc2f_1afc742e1326ae43d6098bcd41b2d4bc2f">render</reimplementedby>
        <reimplementedby refid="db/db2/a00020_a1a1dbdb28896c3174152349571e97e41_1a1a1dbdb28896c3174152349571e97e41">render</reimplementedby>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d86/a00012_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::clean</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>clean</name>
        <reimplementedby refid="da/da0/a00009_aaa703cf2aca24eee27060cc64bcf69ba_1aaa703cf2aca24eee27060cc64bcf69ba">clean</reimplementedby>
        <reimplementedby refid="db/db2/a00020_a32c41ea9756783415938c108f1a3286e_1a32c41ea9756783415938c108f1a3286e">clean</reimplementedby>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d7/d7a/a00016_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e" kindref="member">Entity::clean()</ref> is called and it was dirty. </para>        </briefdescription>
        <detaileddescription>
<para>This is not required for inheritance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d86/a00012_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void mc::gfx::Component::hover</definition>
        <argsstring>(Entity *e)</argsstring>
        <name>hover</name>
        <reimplementedby refid="da/da0/a00009_a4dea256750298e7f701793c06c34cf6c_1a4dea256750298e7f701793c06c34cf6c">hover</reimplementedby>
        <reimplementedby refid="db/db2/a00020_a9ba9644f0304b8c8d1e42da6ac494e21_1a9ba9644f0304b8c8d1e42da6ac494e21">hover</reimplementedby>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Can be plugged into an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> to allow for additional functionality by listening to events. </para>    </briefdescription>
    <detaileddescription>
<para>Instead of extending an existing <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> subclass, you should prefer using a <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> to not interfere with custom <ref refid="d7/d7a/a00016_a14defaca92f04c32b892cbc08263d3ac_1a14defaca92f04c32b892cbc08263d3ac" kindref="member">Entity::onRender()</ref> and similar functions. </para><para>Similarly to all objects in <ref refid="d4/d3a/a00101" kindref="compound">MACE</ref>, <ref refid="df/d86/a00012_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" kindref="member">Component::init(Entity*)</ref> is always called and <ref refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> is also always called. </para><para>Contains virtual functions for every event in an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> which each have 1 parameter - the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> being acted on. </para><para>You are required to implement <ref refid="df/d86/a00012_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" kindref="member">Component::init(Entity*)</ref>, <ref refid="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>, and <ref refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref>. There are additional functions which are optional to implement. </para><para>There is no function to remove a <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> from an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>. Instead, the <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> decides when to be removed from <ref refid="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>. This makes sure that the <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> completes whatever task it was trying to do. <simplesect kind="see"><para><ref refid="d7/d7a/a00016_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref> </para></simplesect>
<xrefsect id="d8/d84/a00001_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>unit testing for <ref refid="df/d86/a00012_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe" kindref="member">clean()</ref> <ref refid="df/d86/a00012_a55315efee992bdb1caeaaebd151de49f_1a55315efee992bdb1caeaaebd151de49f" kindref="member">render()</ref> and <ref refid="df/d86/a00012_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6" kindref="member">hover()</ref> </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <inheritancegraph>
      <node id="374">
        <label>mc::gfx::Component</label>
        <link refid="df/d86/a00012"/>
      </node>
      <node id="375">
        <label>mc::gfx::CallbackComponent</label>
        <link refid="da/da0/a00009"/>
        <childnode refid="374" relation="public-inheritance">
        </childnode>
      </node>
      <node id="376">
        <label>mc::gfx::FPSComponent</label>
        <link refid="db/db2/a00020"/>
        <childnode refid="374" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/MACE/Graphics/Entity.h" line="51" column="1" bodyfile="include/MACE/Graphics/Entity.h" bodystart="51" bodyend="94"/>
    <listofallmembers>
      <member refid="df/d86/a00012_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe" prot="protected" virt="virtual"><scope>mc::gfx::Component</scope><name>clean</name></member>
      <member refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" prot="protected" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>destroy</name></member>
      <member refid="df/d86/a00012_a614439ccac0344926adc4c0165d64060_1a614439ccac0344926adc4c0165d64060" prot="private" virt="non-virtual"><scope>mc::gfx::Component</scope><name>Entity</name></member>
      <member refid="df/d86/a00012_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6" prot="protected" virt="virtual"><scope>mc::gfx::Component</scope><name>hover</name></member>
      <member refid="df/d86/a00012_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78" prot="protected" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>init</name></member>
      <member refid="df/d86/a00012_a55315efee992bdb1caeaaebd151de49f_1a55315efee992bdb1caeaaebd151de49f" prot="protected" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>render</name></member>
      <member refid="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" prot="protected" virt="pure-virtual"><scope>mc::gfx::Component</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
