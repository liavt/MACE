<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="da/da0/a00009" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::CallbackComponent</compoundname>
    <basecompoundref refid="df/d86/a00012" prot="public" virt="non-virtual">mc::gfx::Component</basecompoundref>
    <includes refid="d4/de8/a00061" local="no">Components.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* mc::gfx::CallbackComponent::CallbackPtr) (Entity *)</definition>
        <argsstring>)(Entity *)</argsstring>
        <name>CallbackPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="21" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/da0/a00009_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* mc::gfx::CallbackComponent::UpdatePtr) (Entity *)</definition>
        <argsstring>)(Entity *)</argsstring>
        <name>UpdatePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="22" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/da0/a00009_1a44957e67e64a95a6ae7ae21c5a0d0630" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::destroyCallback</definition>
        <argsstring></argsstring>
        <name>destroyCallback</name>
        <initializer>= [] (<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="55" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da0/a00009_1a4fc03a3f6357e2d44ff2588b79d84ed0" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::renderCallback</definition>
        <argsstring></argsstring>
        <name>renderCallback</name>
        <initializer>= [] (<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="56" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da0/a00009_1afcd392f880eb05ba5dc00c1791e87cac" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::initCallback</definition>
        <argsstring></argsstring>
        <name>initCallback</name>
        <initializer>= [] (<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="57" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da0/a00009_1adf379b38846e16994d0f85511fcb42ff" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::hoverCallback</definition>
        <argsstring></argsstring>
        <name>hoverCallback</name>
        <initializer>= [] (<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="58" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da0/a00009_1af11a8bd0e3cf73fb1730442095998c7c" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::cleanCallback</definition>
        <argsstring></argsstring>
        <name>cleanCallback</name>
        <initializer>= [] (<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="59" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/da0/a00009_1a0d6441fc282c063c60fd148c058e90f5" prot="private" static="no" mutable="no">
        <type><ref refid="da/da0/a00009_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
        <definition>UpdatePtr mc::gfx::CallbackComponent::updateCallback</definition>
        <argsstring></argsstring>
        <name>updateCallback</name>
        <initializer>= [] (<ref refid="d7/d7a/a00016" kindref="compound">Entity</ref>*) -&gt; bool {
				return false;
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="60" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/da0/a00009_aadd2a9a3f394a0f08c3cb59613b89fa6_1aadd2a9a3f394a0f08c3cb59613b89fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setInitCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setInitCallback</name>
        <param>
          <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_af690ce27d8c9ce34805cdd930f87e08f_1af690ce27d8c9ce34805cdd930f87e08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getInitCallback</definition>
        <argsstring>()</argsstring>
        <name>getInitCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_ab0b6318bbc3005005864c1887fda8077_1ab0b6318bbc3005005864c1887fda8077" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getInitCallback</definition>
        <argsstring>() const </argsstring>
        <name>getInitCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_adef789d9fe8ce00950081fc4ed006a59_1adef789d9fe8ce00950081fc4ed006a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setUpdateCallback</definition>
        <argsstring>(const UpdatePtr func)</argsstring>
        <name>setUpdateCallback</name>
        <param>
          <type>const <ref refid="da/da0/a00009_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a46225a97fb2b72605a3c62dd7dba8ee3_1a46225a97fb2b72605a3c62dd7dba8ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
        <definition>UpdatePtr mc::gfx::CallbackComponent::getUpdateCallback</definition>
        <argsstring>()</argsstring>
        <name>getUpdateCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a582dc8148d4cb93f0d9bd9d50b87ecc5_1a582dc8148d4cb93f0d9bd9d50b87ecc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
        <definition>const UpdatePtr mc::gfx::CallbackComponent::getUpdateCallback</definition>
        <argsstring>() const </argsstring>
        <name>getUpdateCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a5612994a97e439cf4f4498b0318cc8f1_1a5612994a97e439cf4f4498b0318cc8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setRenderCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setRenderCallback</name>
        <param>
          <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a61642fb83e0aa49f1a9cb794c29a8a5e_1a61642fb83e0aa49f1a9cb794c29a8a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getRenderCallback</definition>
        <argsstring>()</argsstring>
        <name>getRenderCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_adb8fb4dd3c72c4558b545d6c3dcdb8f8_1adb8fb4dd3c72c4558b545d6c3dcdb8f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getRenderCallback</definition>
        <argsstring>() const </argsstring>
        <name>getRenderCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a03b89eaf946ea5b1096a058bdcd97a25_1a03b89eaf946ea5b1096a058bdcd97a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setDestroyCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setDestroyCallback</name>
        <param>
          <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a20d0bbe1f3bde208edf7c8cc3610c2a0_1a20d0bbe1f3bde208edf7c8cc3610c2a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getDestroyCallback</definition>
        <argsstring>()</argsstring>
        <name>getDestroyCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a25c217cf519118cbc1a1fc5d1d4cd758_1a25c217cf519118cbc1a1fc5d1d4cd758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getDestroyCallback</definition>
        <argsstring>() const </argsstring>
        <name>getDestroyCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a9e9569f714fa3443d92be0cc66ba54e5_1a9e9569f714fa3443d92be0cc66ba54e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setHoverCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setHoverCallback</name>
        <param>
          <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a3c65768a8311895983c2855496ceb25d_1a3c65768a8311895983c2855496ceb25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getHoverCallback</definition>
        <argsstring>()</argsstring>
        <name>getHoverCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a2486e4f9fd74357529742227bc7b44c7_1a2486e4f9fd74357529742227bc7b44c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getHoverCallback</definition>
        <argsstring>() const </argsstring>
        <name>getHoverCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_afcc7ea389969acc8d46da681d65aaf5d_1afcc7ea389969acc8d46da681d65aaf5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setCleanCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setCleanCallback</name>
        <param>
          <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_aa6f8a6d23e72c233bc35800e6dd6efbf_1aa6f8a6d23e72c233bc35800e6dd6efbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getCleanCallback</definition>
        <argsstring>()</argsstring>
        <name>getCleanCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_aef3caceaa02ea167d84f410463debf0b_1aef3caceaa02ea167d84f410463debf0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getCleanCallback</definition>
        <argsstring>() const </argsstring>
        <name>getCleanCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="da/da0/a00009_a189b8279d1eab734cb93951af25ca42b_1a189b8279d1eab734cb93951af25ca42b" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::init</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>init</name>
        <reimplements refid="df/d86/a00012_a54725c3c089320813539927b9cf93e78_1a54725c3c089320813539927b9cf93e78">init</reimplements>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when this <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> is added to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> via <ref refid="d7/d7a/a00016_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is not called at <ref refid="d7/d7a/a00016_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity::init()</ref>, instead it is called when the component is added to the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>. Keep that in mind. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_ad85853b9fe3a1bf2057151ece1bbf799_1ad85853b9fe3a1bf2057151ece1bbf799" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool mc::gfx::CallbackComponent::update</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>update</name>
        <reimplements refid="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37">update</reimplements>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d7/d7a/a00016_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. </para><para>There is no function to remove a <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> so this is the only way for a <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> to be removed from an <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para><para><ref refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> will be called afterwards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether this <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> should be deleted or not. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_afc742e1326ae43d6098bcd41b2d4bc2f_1afc742e1326ae43d6098bcd41b2d4bc2f" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::render</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>render</name>
        <reimplements refid="df/d86/a00012_a55315efee992bdb1caeaaebd151de49f_1a55315efee992bdb1caeaaebd151de49f">render</reimplements>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_aae900faa32473bcde4c8a0cae9ba8319_1aae900faa32473bcde4c8a0cae9ba8319" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::destroy</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>destroy</name>
        <reimplements refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c">destroy</reimplements>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d7/d7a/a00016_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity::destroy()</ref> is called or the <computeroutput><ref refid="df/d86/a00012" kindref="compound">Component</ref></computeroutput> is removed via <ref refid="df/d86/a00012_a2287f51d5468df7a6e672c908a268a37_1a2287f51d5468df7a6e672c908a268a37" kindref="member">Component::update(Entity*)</ref>, whichever comes first. </para>        </briefdescription>
        <detaileddescription>
<para>Once <ref refid="df/d86/a00012_a046ce9a51d40b1597165e3e38668ee1c_1a046ce9a51d40b1597165e3e38668ee1c" kindref="member">Component::destroy(Entity*)</ref> is called, it is immediately removed from the <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput>. Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_a4dea256750298e7f701793c06c34cf6c_1a4dea256750298e7f701793c06c34cf6c" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::hover</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>hover</name>
        <reimplements refid="df/d86/a00012_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6">hover</reimplements>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/da0/a00009_aaa703cf2aca24eee27060cc64bcf69ba_1aaa703cf2aca24eee27060cc64bcf69ba" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::clean</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>clean</name>
        <reimplements refid="df/d86/a00012_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe">clean</reimplements>
        <param>
          <type><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="d7/d7a/a00016_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e" kindref="member">Entity::clean()</ref> is called and it was dirty. </para>        </briefdescription>
        <detaileddescription>
<para>This is not required for inheritance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="d7/d7a/a00016" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="363">
        <label>mc::gfx::Component</label>
        <link refid="df/d86/a00012"/>
      </node>
      <node id="362">
        <label>mc::gfx::CallbackComponent</label>
        <link refid="da/da0/a00009"/>
        <childnode refid="363" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="365">
        <label>mc::gfx::Component</label>
        <link refid="df/d86/a00012"/>
      </node>
      <node id="364">
        <label>mc::gfx::CallbackComponent</label>
        <link refid="da/da0/a00009"/>
        <childnode refid="365" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Components.h" line="19" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="19" bodyend="63"/>
    <listofallmembers>
      <member refid="da/da0/a00009_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>CallbackPtr</name></member>
      <member refid="da/da0/a00009_aaa703cf2aca24eee27060cc64bcf69ba_1aaa703cf2aca24eee27060cc64bcf69ba" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>clean</name></member>
      <member refid="da/da0/a00009_1af11a8bd0e3cf73fb1730442095998c7c" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>cleanCallback</name></member>
      <member refid="da/da0/a00009_aae900faa32473bcde4c8a0cae9ba8319_1aae900faa32473bcde4c8a0cae9ba8319" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>destroy</name></member>
      <member refid="da/da0/a00009_1a44957e67e64a95a6ae7ae21c5a0d0630" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>destroyCallback</name></member>
      <member refid="da/da0/a00009_aa6f8a6d23e72c233bc35800e6dd6efbf_1aa6f8a6d23e72c233bc35800e6dd6efbf" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getCleanCallback</name></member>
      <member refid="da/da0/a00009_aef3caceaa02ea167d84f410463debf0b_1aef3caceaa02ea167d84f410463debf0b" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getCleanCallback</name></member>
      <member refid="da/da0/a00009_a20d0bbe1f3bde208edf7c8cc3610c2a0_1a20d0bbe1f3bde208edf7c8cc3610c2a0" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getDestroyCallback</name></member>
      <member refid="da/da0/a00009_a25c217cf519118cbc1a1fc5d1d4cd758_1a25c217cf519118cbc1a1fc5d1d4cd758" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getDestroyCallback</name></member>
      <member refid="da/da0/a00009_a3c65768a8311895983c2855496ceb25d_1a3c65768a8311895983c2855496ceb25d" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getHoverCallback</name></member>
      <member refid="da/da0/a00009_a2486e4f9fd74357529742227bc7b44c7_1a2486e4f9fd74357529742227bc7b44c7" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getHoverCallback</name></member>
      <member refid="da/da0/a00009_af690ce27d8c9ce34805cdd930f87e08f_1af690ce27d8c9ce34805cdd930f87e08f" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getInitCallback</name></member>
      <member refid="da/da0/a00009_ab0b6318bbc3005005864c1887fda8077_1ab0b6318bbc3005005864c1887fda8077" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getInitCallback</name></member>
      <member refid="da/da0/a00009_a61642fb83e0aa49f1a9cb794c29a8a5e_1a61642fb83e0aa49f1a9cb794c29a8a5e" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getRenderCallback</name></member>
      <member refid="da/da0/a00009_adb8fb4dd3c72c4558b545d6c3dcdb8f8_1adb8fb4dd3c72c4558b545d6c3dcdb8f8" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getRenderCallback</name></member>
      <member refid="da/da0/a00009_a46225a97fb2b72605a3c62dd7dba8ee3_1a46225a97fb2b72605a3c62dd7dba8ee3" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getUpdateCallback</name></member>
      <member refid="da/da0/a00009_a582dc8148d4cb93f0d9bd9d50b87ecc5_1a582dc8148d4cb93f0d9bd9d50b87ecc5" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getUpdateCallback</name></member>
      <member refid="da/da0/a00009_a4dea256750298e7f701793c06c34cf6c_1a4dea256750298e7f701793c06c34cf6c" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>hover</name></member>
      <member refid="da/da0/a00009_1adf379b38846e16994d0f85511fcb42ff" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>hoverCallback</name></member>
      <member refid="da/da0/a00009_a189b8279d1eab734cb93951af25ca42b_1a189b8279d1eab734cb93951af25ca42b" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>init</name></member>
      <member refid="da/da0/a00009_1afcd392f880eb05ba5dc00c1791e87cac" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>initCallback</name></member>
      <member refid="da/da0/a00009_afc742e1326ae43d6098bcd41b2d4bc2f_1afc742e1326ae43d6098bcd41b2d4bc2f" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>render</name></member>
      <member refid="da/da0/a00009_1a4fc03a3f6357e2d44ff2588b79d84ed0" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>renderCallback</name></member>
      <member refid="da/da0/a00009_afcc7ea389969acc8d46da681d65aaf5d_1afcc7ea389969acc8d46da681d65aaf5d" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setCleanCallback</name></member>
      <member refid="da/da0/a00009_a03b89eaf946ea5b1096a058bdcd97a25_1a03b89eaf946ea5b1096a058bdcd97a25" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setDestroyCallback</name></member>
      <member refid="da/da0/a00009_a9e9569f714fa3443d92be0cc66ba54e5_1a9e9569f714fa3443d92be0cc66ba54e5" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setHoverCallback</name></member>
      <member refid="da/da0/a00009_aadd2a9a3f394a0f08c3cb59613b89fa6_1aadd2a9a3f394a0f08c3cb59613b89fa6" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setInitCallback</name></member>
      <member refid="da/da0/a00009_a5612994a97e439cf4f4498b0318cc8f1_1a5612994a97e439cf4f4498b0318cc8f1" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setRenderCallback</name></member>
      <member refid="da/da0/a00009_adef789d9fe8ce00950081fc4ed006a59_1adef789d9fe8ce00950081fc4ed006a59" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setUpdateCallback</name></member>
      <member refid="da/da0/a00009_ad85853b9fe3a1bf2057151ece1bbf799_1ad85853b9fe3a1bf2057151ece1bbf799" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>update</name></member>
      <member refid="da/da0/a00009_1a0d6441fc282c063c60fd148c058e90f5" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>updateCallback</name></member>
      <member refid="da/da0/a00009_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>UpdatePtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
