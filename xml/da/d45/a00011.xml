<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="da/d45/a00011" kind="class" language="C++" prot="public">
    <compoundname>mc::gfx::CallbackComponent</compoundname>
    <basecompoundref refid="d2/de7/a00014" prot="public" virt="non-virtual">mc::gfx::Component</basecompoundref>
    <includes refid="d2/d1f/a00083" local="no">Components.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* mc::gfx::CallbackComponent::CallbackPtr) (Entity *)</definition>
        <argsstring>)(Entity *)</argsstring>
        <name>CallbackPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="57" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="da/d45/a00011_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* mc::gfx::CallbackComponent::UpdatePtr) (Entity *)</definition>
        <argsstring>)(Entity *)</argsstring>
        <name>UpdatePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="58" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d45/a00011_1a44957e67e64a95a6ae7ae21c5a0d0630" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::destroyCallback</definition>
        <argsstring></argsstring>
        <name>destroyCallback</name>
        <initializer>= [] (<ref refid="dd/da2/a00019" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="94" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d45/a00011_1a4fc03a3f6357e2d44ff2588b79d84ed0" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::renderCallback</definition>
        <argsstring></argsstring>
        <name>renderCallback</name>
        <initializer>= [] (<ref refid="dd/da2/a00019" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="95" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d45/a00011_1afcd392f880eb05ba5dc00c1791e87cac" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::initCallback</definition>
        <argsstring></argsstring>
        <name>initCallback</name>
        <initializer>= [] (<ref refid="dd/da2/a00019" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="96" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d45/a00011_1adf379b38846e16994d0f85511fcb42ff" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::hoverCallback</definition>
        <argsstring></argsstring>
        <name>hoverCallback</name>
        <initializer>= [] (<ref refid="dd/da2/a00019" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="97" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d45/a00011_1af11a8bd0e3cf73fb1730442095998c7c" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::cleanCallback</definition>
        <argsstring></argsstring>
        <name>cleanCallback</name>
        <initializer>= [] (<ref refid="dd/da2/a00019" kindref="compound">Entity</ref>*) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="98" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d45/a00011_1a0d6441fc282c063c60fd148c058e90f5" prot="private" static="no" mutable="no">
        <type><ref refid="da/d45/a00011_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
        <definition>UpdatePtr mc::gfx::CallbackComponent::updateCallback</definition>
        <argsstring></argsstring>
        <name>updateCallback</name>
        <initializer>= [] (<ref refid="dd/da2/a00019" kindref="compound">Entity</ref>*) -&gt; bool {
				return false;
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="99" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d45/a00011_aadd2a9a3f394a0f08c3cb59613b89fa6_1aadd2a9a3f394a0f08c3cb59613b89fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setInitCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setInitCallback</name>
        <param>
          <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_af690ce27d8c9ce34805cdd930f87e08f_1af690ce27d8c9ce34805cdd930f87e08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getInitCallback</definition>
        <argsstring>()</argsstring>
        <name>getInitCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ab0b6318bbc3005005864c1887fda8077_1ab0b6318bbc3005005864c1887fda8077" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getInitCallback</definition>
        <argsstring>() const </argsstring>
        <name>getInitCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_adef789d9fe8ce00950081fc4ed006a59_1adef789d9fe8ce00950081fc4ed006a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setUpdateCallback</definition>
        <argsstring>(const UpdatePtr func)</argsstring>
        <name>setUpdateCallback</name>
        <param>
          <type>const <ref refid="da/d45/a00011_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a46225a97fb2b72605a3c62dd7dba8ee3_1a46225a97fb2b72605a3c62dd7dba8ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
        <definition>UpdatePtr mc::gfx::CallbackComponent::getUpdateCallback</definition>
        <argsstring>()</argsstring>
        <name>getUpdateCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a582dc8148d4cb93f0d9bd9d50b87ecc5_1a582dc8148d4cb93f0d9bd9d50b87ecc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" kindref="member">UpdatePtr</ref></type>
        <definition>const UpdatePtr mc::gfx::CallbackComponent::getUpdateCallback</definition>
        <argsstring>() const </argsstring>
        <name>getUpdateCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a5612994a97e439cf4f4498b0318cc8f1_1a5612994a97e439cf4f4498b0318cc8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setRenderCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setRenderCallback</name>
        <param>
          <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a61642fb83e0aa49f1a9cb794c29a8a5e_1a61642fb83e0aa49f1a9cb794c29a8a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getRenderCallback</definition>
        <argsstring>()</argsstring>
        <name>getRenderCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_adb8fb4dd3c72c4558b545d6c3dcdb8f8_1adb8fb4dd3c72c4558b545d6c3dcdb8f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getRenderCallback</definition>
        <argsstring>() const </argsstring>
        <name>getRenderCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a03b89eaf946ea5b1096a058bdcd97a25_1a03b89eaf946ea5b1096a058bdcd97a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setDestroyCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setDestroyCallback</name>
        <param>
          <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a20d0bbe1f3bde208edf7c8cc3610c2a0_1a20d0bbe1f3bde208edf7c8cc3610c2a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getDestroyCallback</definition>
        <argsstring>()</argsstring>
        <name>getDestroyCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a25c217cf519118cbc1a1fc5d1d4cd758_1a25c217cf519118cbc1a1fc5d1d4cd758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getDestroyCallback</definition>
        <argsstring>() const </argsstring>
        <name>getDestroyCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a9e9569f714fa3443d92be0cc66ba54e5_1a9e9569f714fa3443d92be0cc66ba54e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setHoverCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setHoverCallback</name>
        <param>
          <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a3c65768a8311895983c2855496ceb25d_1a3c65768a8311895983c2855496ceb25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getHoverCallback</definition>
        <argsstring>()</argsstring>
        <name>getHoverCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a2486e4f9fd74357529742227bc7b44c7_1a2486e4f9fd74357529742227bc7b44c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getHoverCallback</definition>
        <argsstring>() const </argsstring>
        <name>getHoverCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_afcc7ea389969acc8d46da681d65aaf5d_1afcc7ea389969acc8d46da681d65aaf5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::setCleanCallback</definition>
        <argsstring>(const CallbackPtr func)</argsstring>
        <name>setCleanCallback</name>
        <param>
          <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aa6f8a6d23e72c233bc35800e6dd6efbf_1aa6f8a6d23e72c233bc35800e6dd6efbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>CallbackPtr mc::gfx::CallbackComponent::getCleanCallback</definition>
        <argsstring>()</argsstring>
        <name>getCleanCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aef3caceaa02ea167d84f410463debf0b_1aef3caceaa02ea167d84f410463debf0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" kindref="member">CallbackPtr</ref></type>
        <definition>const CallbackPtr mc::gfx::CallbackComponent::getCleanCallback</definition>
        <argsstring>() const </argsstring>
        <name>getCleanCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ae5a95e73edea396de4880e0f77821e92_1ae5a95e73edea396de4880e0f77821e92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::CallbackComponent::operator==</definition>
        <argsstring>(const CallbackComponent &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="da/d45/a00011" kindref="compound">CallbackComponent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a10854a263bb2e47eeb12cabc2272b9d0_1a10854a263bb2e47eeb12cabc2272b9d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::CallbackComponent::operator!=</definition>
        <argsstring>(const CallbackComponent &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="da/d45/a00011" kindref="compound">CallbackComponent</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="da/d45/a00011_a189b8279d1eab734cb93951af25ca42b_1a189b8279d1eab734cb93951af25ca42b" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::init</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>init</name>
        <reimplements refid="d2/de7/a00014_a4ccee5b84ca50035ddcd6647e31713e9_1a4ccee5b84ca50035ddcd6647e31713e9">init</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when this <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> is added to the <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> via <ref refid="dd/da2/a00019_a6aa74436ab9806d75212629acc58a736_1a6aa74436ab9806d75212629acc58a736" kindref="member">Entity::addComponent(Component&amp;)</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is not called at <ref refid="dd/da2/a00019_a62ce605be3c0681f7f7d1a9b8f60d91c_1a62ce605be3c0681f7f7d1a9b8f60d91c" kindref="member">Entity::init()</ref>, instead it is called when the component is added to the <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput>. Keep that in mind. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_ad85853b9fe3a1bf2057151ece1bbf799_1ad85853b9fe3a1bf2057151ece1bbf799" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool mc::gfx::CallbackComponent::update</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>update</name>
        <reimplements refid="d2/de7/a00014_aee73aaff58c9cb84d705e3e5557c98c6_1aee73aaff58c9cb84d705e3e5557c98c6">update</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="dd/da2/a00019_aae7029661100df41b6b737b378b9d40d_1aae7029661100df41b6b737b378b9d40d" kindref="member">Entity::update()</ref> is called. </para>        </briefdescription>
        <detaileddescription>
<para>Required function. </para><para>There is no function to remove a <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> so this is the only way for a <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> to be removed from an <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para><para><ref refid="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a" kindref="member">Component::destroy(Entity*)</ref> will be called afterwards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether this <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> should be deleted or not. </para></simplesect>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_afc742e1326ae43d6098bcd41b2d4bc2f_1afc742e1326ae43d6098bcd41b2d4bc2f" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::render</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>render</name>
        <reimplements refid="d2/de7/a00014_a4bf270ecdf1b1a5f3f512a34ad5f8ecf_1a4bf270ecdf1b1a5f3f512a34ad5f8ecf">render</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aae900faa32473bcde4c8a0cae9ba8319_1aae900faa32473bcde4c8a0cae9ba8319" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::destroy</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>destroy</name>
        <reimplements refid="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a">destroy</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="dd/da2/a00019_a07a66f2c02ff3b29f45f0a1c200e3cb3_1a07a66f2c02ff3b29f45f0a1c200e3cb3" kindref="member">Entity::destroy()</ref> is called or the <computeroutput><ref refid="d2/de7/a00014" kindref="compound">Component</ref></computeroutput> is removed via <ref refid="d2/de7/a00014_aee73aaff58c9cb84d705e3e5557c98c6_1aee73aaff58c9cb84d705e3e5557c98c6" kindref="member">Component::update(Entity*)</ref>, whichever comes first. </para>        </briefdescription>
        <detaileddescription>
<para>Once <ref refid="d2/de7/a00014_acb575548b83371f801c67482f9b10c6a_1acb575548b83371f801c67482f9b10c6a" kindref="member">Component::destroy(Entity*)</ref> is called, it is immediately removed from the <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput>. Required function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_a4dea256750298e7f701793c06c34cf6c_1a4dea256750298e7f701793c06c34cf6c" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::hover</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>hover</name>
        <reimplements refid="d2/de7/a00014_a832c8255a365af45b49b0d47968824d6_1a832c8255a365af45b49b0d47968824d6">hover</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d45/a00011_aaa703cf2aca24eee27060cc64bcf69ba_1aaa703cf2aca24eee27060cc64bcf69ba" prot="protected" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void mc::gfx::CallbackComponent::clean</definition>
        <argsstring>(Entity *e) final</argsstring>
        <name>clean</name>
        <reimplements refid="d2/de7/a00014_aca617afee4ec19457718c9cecdbad9fe_1aca617afee4ec19457718c9cecdbad9fe">clean</reimplements>
        <param>
          <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Called when <ref refid="dd/da2/a00019_acad662b2fc7163c6c36f4db9f194982e_1acad662b2fc7163c6c36f4db9f194982e" kindref="member">Entity::clean()</ref> is called and it was dirty. </para>        </briefdescription>
        <detaileddescription>
<para>This is not required for inheritance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent <computeroutput><ref refid="dd/da2/a00019" kindref="compound">Entity</ref></computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This uses an OpenGL function and must be called in a thread with an OpenGL context. Otherwise, an error will be thrown. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GL_INVALID_OPERATION</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current thread does not have an OpenGL context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Components.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_acc330b8ee27730bb54f3ee02afe518de_1acc330b8ee27730bb54f3ee02afe518de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/da2/a00019" kindref="compound">Entity</ref> *</type>
        <definition>Entity* mc::gfx::Component::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a61681040d33095101cfcd3becd867702_1a61681040d33095101cfcd3becd867702" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Component::operator==</definition>
        <argsstring>(const Component &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d2/de7/a00014" kindref="compound">Component</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d2/de7/a00014_a0aa780e76d1e05b46e4e9487c69f72c5_1a0aa780e76d1e05b46e4e9487c69f72c5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mc::gfx::Component::operator!=</definition>
        <argsstring>(const Component &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d2/de7/a00014" kindref="compound">Component</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Graphics/Entity.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="605">
        <label>mc::gfx::Component</label>
        <link refid="d2/de7/a00014"/>
      </node>
      <node id="604">
        <label>mc::gfx::CallbackComponent</label>
        <link refid="da/d45/a00011"/>
        <childnode refid="605" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="607">
        <label>mc::gfx::Component</label>
        <link refid="d2/de7/a00014"/>
      </node>
      <node id="606">
        <label>mc::gfx::CallbackComponent</label>
        <link refid="da/d45/a00011"/>
        <childnode refid="607" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MACE/Graphics/Components.h" line="55" column="1" bodyfile="include/MACE/Graphics/Components.h" bodystart="55" bodyend="102"/>
    <listofallmembers>
      <member refid="da/d45/a00011_a7d6d718bbc43db88d76251085d3064d5_1a7d6d718bbc43db88d76251085d3064d5" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>CallbackPtr</name></member>
      <member refid="da/d45/a00011_aaa703cf2aca24eee27060cc64bcf69ba_1aaa703cf2aca24eee27060cc64bcf69ba" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>clean</name></member>
      <member refid="da/d45/a00011_1af11a8bd0e3cf73fb1730442095998c7c" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>cleanCallback</name></member>
      <member refid="da/d45/a00011_aae900faa32473bcde4c8a0cae9ba8319_1aae900faa32473bcde4c8a0cae9ba8319" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>destroy</name></member>
      <member refid="da/d45/a00011_1a44957e67e64a95a6ae7ae21c5a0d0630" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>destroyCallback</name></member>
      <member refid="da/d45/a00011_aa6f8a6d23e72c233bc35800e6dd6efbf_1aa6f8a6d23e72c233bc35800e6dd6efbf" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getCleanCallback</name></member>
      <member refid="da/d45/a00011_aef3caceaa02ea167d84f410463debf0b_1aef3caceaa02ea167d84f410463debf0b" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getCleanCallback</name></member>
      <member refid="da/d45/a00011_a20d0bbe1f3bde208edf7c8cc3610c2a0_1a20d0bbe1f3bde208edf7c8cc3610c2a0" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getDestroyCallback</name></member>
      <member refid="da/d45/a00011_a25c217cf519118cbc1a1fc5d1d4cd758_1a25c217cf519118cbc1a1fc5d1d4cd758" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getDestroyCallback</name></member>
      <member refid="da/d45/a00011_a3c65768a8311895983c2855496ceb25d_1a3c65768a8311895983c2855496ceb25d" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getHoverCallback</name></member>
      <member refid="da/d45/a00011_a2486e4f9fd74357529742227bc7b44c7_1a2486e4f9fd74357529742227bc7b44c7" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getHoverCallback</name></member>
      <member refid="da/d45/a00011_af690ce27d8c9ce34805cdd930f87e08f_1af690ce27d8c9ce34805cdd930f87e08f" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getInitCallback</name></member>
      <member refid="da/d45/a00011_ab0b6318bbc3005005864c1887fda8077_1ab0b6318bbc3005005864c1887fda8077" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getInitCallback</name></member>
      <member refid="d2/de7/a00014_acc330b8ee27730bb54f3ee02afe518de_1acc330b8ee27730bb54f3ee02afe518de" prot="protected" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getParent</name></member>
      <member refid="da/d45/a00011_a61642fb83e0aa49f1a9cb794c29a8a5e_1a61642fb83e0aa49f1a9cb794c29a8a5e" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getRenderCallback</name></member>
      <member refid="da/d45/a00011_adb8fb4dd3c72c4558b545d6c3dcdb8f8_1adb8fb4dd3c72c4558b545d6c3dcdb8f8" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getRenderCallback</name></member>
      <member refid="da/d45/a00011_a46225a97fb2b72605a3c62dd7dba8ee3_1a46225a97fb2b72605a3c62dd7dba8ee3" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getUpdateCallback</name></member>
      <member refid="da/d45/a00011_a582dc8148d4cb93f0d9bd9d50b87ecc5_1a582dc8148d4cb93f0d9bd9d50b87ecc5" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>getUpdateCallback</name></member>
      <member refid="da/d45/a00011_a4dea256750298e7f701793c06c34cf6c_1a4dea256750298e7f701793c06c34cf6c" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>hover</name></member>
      <member refid="da/d45/a00011_1adf379b38846e16994d0f85511fcb42ff" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>hoverCallback</name></member>
      <member refid="da/d45/a00011_a189b8279d1eab734cb93951af25ca42b_1a189b8279d1eab734cb93951af25ca42b" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>init</name></member>
      <member refid="da/d45/a00011_1afcd392f880eb05ba5dc00c1791e87cac" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>initCallback</name></member>
      <member refid="da/d45/a00011_a10854a263bb2e47eeb12cabc2272b9d0_1a10854a263bb2e47eeb12cabc2272b9d0" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>operator!=</name></member>
      <member refid="d2/de7/a00014_a0aa780e76d1e05b46e4e9487c69f72c5_1a0aa780e76d1e05b46e4e9487c69f72c5" prot="protected" virt="non-virtual" ambiguityscope="mc::gfx::Component::"><scope>mc::gfx::CallbackComponent</scope><name>operator!=</name></member>
      <member refid="da/d45/a00011_ae5a95e73edea396de4880e0f77821e92_1ae5a95e73edea396de4880e0f77821e92" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>operator==</name></member>
      <member refid="d2/de7/a00014_a61681040d33095101cfcd3becd867702_1a61681040d33095101cfcd3becd867702" prot="protected" virt="non-virtual" ambiguityscope="mc::gfx::Component::"><scope>mc::gfx::CallbackComponent</scope><name>operator==</name></member>
      <member refid="da/d45/a00011_afc742e1326ae43d6098bcd41b2d4bc2f_1afc742e1326ae43d6098bcd41b2d4bc2f" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>render</name></member>
      <member refid="da/d45/a00011_1a4fc03a3f6357e2d44ff2588b79d84ed0" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>renderCallback</name></member>
      <member refid="da/d45/a00011_afcc7ea389969acc8d46da681d65aaf5d_1afcc7ea389969acc8d46da681d65aaf5d" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setCleanCallback</name></member>
      <member refid="da/d45/a00011_a03b89eaf946ea5b1096a058bdcd97a25_1a03b89eaf946ea5b1096a058bdcd97a25" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setDestroyCallback</name></member>
      <member refid="da/d45/a00011_a9e9569f714fa3443d92be0cc66ba54e5_1a9e9569f714fa3443d92be0cc66ba54e5" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setHoverCallback</name></member>
      <member refid="da/d45/a00011_aadd2a9a3f394a0f08c3cb59613b89fa6_1aadd2a9a3f394a0f08c3cb59613b89fa6" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setInitCallback</name></member>
      <member refid="da/d45/a00011_a5612994a97e439cf4f4498b0318cc8f1_1a5612994a97e439cf4f4498b0318cc8f1" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setRenderCallback</name></member>
      <member refid="da/d45/a00011_adef789d9fe8ce00950081fc4ed006a59_1adef789d9fe8ce00950081fc4ed006a59" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>setUpdateCallback</name></member>
      <member refid="da/d45/a00011_ad85853b9fe3a1bf2057151ece1bbf799_1ad85853b9fe3a1bf2057151ece1bbf799" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>update</name></member>
      <member refid="da/d45/a00011_1a0d6441fc282c063c60fd148c058e90f5" prot="private" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>updateCallback</name></member>
      <member refid="da/d45/a00011_a1d867336c398703717ca24ddd0ad749c_1a1d867336c398703717ca24ddd0ad749c" prot="public" virt="non-virtual"><scope>mc::gfx::CallbackComponent</scope><name>UpdatePtr</name></member>
      <member refid="d2/de7/a00014_a0782337880101d03483ea322e0ef2a93_1a0782337880101d03483ea322e0ef2a93" prot="protected" virt="virtual"><scope>mc::gfx::CallbackComponent</scope><name>~Component</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
