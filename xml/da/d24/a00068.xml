<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="da/d24/a00068" kind="file" language="C++">
    <compoundname>Vector.h</compoundname>
    <includes refid="d9/d2e/a00056" local="no">MACE/System/Constants.h</includes>
    <includes refid="d4/de8/a00061" local="no">MACE/Utility/Math.h</includes>
    <includes local="no">array</includes>
    <includes local="no">ostream</includes>
    <includes local="no">initializer_list</includes>
    <includedby refid="df/d03/a00062" local="no">include/MACE/Utility/Matrix.h</includedby>
    <includedby refid="d4/de8/a00061" local="no">include/MACE/Utility/Math.h</includedby>
    <includedby refid="df/d5f/a00064" local="no">include/MACE/Utility/MatrixAliases.h</includedby>
    <includedby refid="dc/ddf/a00067" local="no">include/MACE/Utility/Utility.h</includedby>
    <incdepgraph>
      <node id="371">
        <label>cstdint</label>
      </node>
      <node id="372">
        <label>stdexcept</label>
      </node>
      <node id="370">
        <label>MACE/System/Constants.h</label>
        <link refid="d9/d2e/a00056_source"/>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>ostream</label>
      </node>
      <node id="369">
        <label>include/MACE/Utility/Vector.h</label>
        <link refid="Vector.h"/>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="374">
        <label>array</label>
      </node>
      <node id="373">
        <label>MACE/Utility/Math.h</label>
        <link refid="d4/de8/a00061_source"/>
        <childnode refid="369" relation="include">
        </childnode>
      </node>
      <node id="376">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="386">
        <label>include/MACE/Utility/Utility.h</label>
        <link refid="dc/ddf/a00067_source"/>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="385">
        <label>include/MACE/Graphics/Window.h</label>
        <link refid="d1/dea/a00054_source"/>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>include/MACE/MACE.h</label>
        <link refid="d4/d6d/a00055_source"/>
      </node>
      <node id="384">
        <label>include/MACE/Graphics/Renderer.h</label>
        <link refid="d5/df9/a00044_source"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>include/MACE/Utility/Matrix.h</label>
        <link refid="df/d03/a00062_source"/>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>include/MACE/Graphics/Graphics.h</label>
        <link refid="d5/db6/a00042_source"/>
      </node>
      <node id="389">
        <label>include/MACE/Utility/MatrixAliases.h</label>
        <link refid="df/d5f/a00064_source"/>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>include/MACE/Graphics/Shaders.h</label>
        <link refid="d6/d97/a00045_source"/>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="377">
        <label>include/MACE/Utility/Vector.h</label>
        <link refid="Vector.h"/>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>include/MACE/Graphics/Components.h</label>
        <link refid="d3/de7/a00039_source"/>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="390">
        <label>include/MACE/Utility/Math.h</label>
        <link refid="d4/de8/a00061_source"/>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
      <node id="383">
        <label>include/MACE/Graphics/Entity2D.h</label>
        <link refid="dd/d32/a00041_source"/>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>include/MACE/Utility/Transform.h</label>
        <link refid="d9/db3/a00066_source"/>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>include/MACE/Graphics/Entity.h</label>
        <link refid="db/d3a/a00040_source"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d4/d8c/a00035" prot="public">mc::Vector</innerclass>
    <innernamespace refid="d6/d2c/a00072">mc</innernamespace>
    <innernamespace refid="d1/d6f/a00063">mc::math</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="da/d24/a00068_a01862430afbcd2cdf92583dcb2b8dda2_1a01862430afbcd2cdf92583dcb2b8dda2" prot="public" static="no">
        <name>MACE_UTILITY_VECTOR_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MACE/Utility/Vector.h" line="12" column="9" bodyfile="include/MACE/Utility/Vector.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Copyright<sp/>(c)<sp/>2016<sp/>Liav<sp/>Turkia</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MACE_UTILITY_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACE_UTILITY_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;MACE/System/Constants.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;MACE/Utility/Math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment">the<sp/>fact<sp/>that<sp/>vectors<sp/>are<sp/>templated<sp/>maeans<sp/>that<sp/>this<sp/>cant<sp/>have<sp/>a<sp/>cpp<sp/>file<sp/>correspondign<sp/>to<sp/>it.<sp/>because<sp/>of<sp/>that,<sp/>this<sp/>file<sp/>has<sp/>HORRIBLE<sp/>compile<sp/>times.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">maybe<sp/>i<sp/>will<sp/>fix<sp/>it<sp/>later</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d6/d2c/a00072" kindref="compound">mc</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="76" refid="d4/d8c/a00035" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="d4/d8c/a00035_a7c2fa3ae75ebb6d155aa3e3aa140ce09_1a7c2fa3ae75ebb6d155aa3e3aa140ce09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a7c2fa3ae75ebb6d155aa3e3aa140ce09_1a7c2fa3ae75ebb6d155aa3e3aa140ce09" kindref="member">Vector</ref>()<sp/>:<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Vector&apos;s<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="d4/d8c/a00035_a417fb70d18a6f7c59b42c451dd396189_1a417fb70d18a6f7c59b42c451dd396189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a417fb70d18a6f7c59b42c451dd396189_1a417fb70d18a6f7c59b42c451dd396189" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>arr[N])<sp/>:<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>()</highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>initialize<sp/>the<sp/>array<sp/>first,<sp/>or<sp/>else<sp/>we<sp/>will<sp/>try<sp/>to<sp/>access<sp/>an<sp/>empty<sp/>memory<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Vector&apos;s<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>(arr);</highlight><highlight class="comment">//this<sp/>doesnt<sp/>create<sp/>a<sp/>brand<sp/>new<sp/>std::array,<sp/>it<sp/>merely<sp/>fills<sp/>the<sp/>existing<sp/>one<sp/>with<sp/>new<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="d4/d8c/a00035_a417ea1abf7c631482d80c04b05003bb2_1a417ea1abf7c631482d80c04b05003bb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a417ea1abf7c631482d80c04b05003bb2_1a417ea1abf7c631482d80c04b05003bb2" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;T,<sp/>N&gt;&amp;<sp/>contents)<sp/>:<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>(contents)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Vector&apos;s<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="d4/d8c/a00035_ad81a516cd25fe7e71ae9a1a01c8e74c5_1ad81a516cd25fe7e71ae9a1a01c8e74c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_ad81a516cd25fe7e71ae9a1a01c8e74c5_1ad81a516cd25fe7e71ae9a1a01c8e74c5" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;T&gt;<sp/>args)<sp/>:<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>()<sp/>{</highlight><highlight class="comment">//this<sp/>is<sp/>for<sp/>aggregate<sp/>initializaition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>Vector&apos;s<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>args.size()<sp/>!=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d6/d2c/a00072_abfc1b9ed65cb5e87bb8ec2b189f324c2_1abfc1b9ed65cb5e87bb8ec2b189f324c2" kindref="member">IndexOutOfBoundsException</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>arguments<sp/>MUST<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>array.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elem<sp/>:<sp/>args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[counter]<sp/>=<sp/>elem;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counter;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="d4/d8c/a00035_a9cd50db0b1a697ff4368a1072e99182d_1a9cd50db0b1a697ff4368a1072e99182d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a9cd50db0b1a697ff4368a1072e99182d_1a9cd50db0b1a697ff4368a1072e99182d" kindref="member">Vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/>&amp;obj)<sp/>:<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>(obj.<ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>)<sp/>{};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array<sp/>&lt;<sp/>T,<sp/>N&gt;&amp;<sp/><ref refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="d4/d8c/a00035_aac3af5465ade1ef1c7b41b579fb6099e_1aac3af5465ade1ef1c7b41b579fb6099e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array<sp/>&lt;<sp/>T,<sp/>N&gt;&amp;<sp/><ref refid="d4/d8c/a00035_aac3af5465ade1ef1c7b41b579fb6099e_1aac3af5465ade1ef1c7b41b579fb6099e" kindref="member">getContents</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="140" refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;T,<sp/>N&gt;<sp/>contents)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref><sp/>=<sp/>contents;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="147" refid="d4/d8c/a00035_a57b55a629453b1d1e80d81c56269e833_1a57b55a629453b1d1e80d81c56269e833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a57b55a629453b1d1e80d81c56269e833_1a57b55a629453b1d1e80d81c56269e833" kindref="member">setContents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>arr[N])<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(i,<sp/>arr[i]);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="d4/d8c/a00035_a6f08e4cabe236a4f317bc2b0f8f3d96c_1a6f08e4cabe236a4f317bc2b0f8f3d96c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="d6/d2c/a00072_ad1c06461067735b3b17e0df612532c4e_1ad1c06461067735b3b17e0df612532c4e" kindref="member">Size</ref><sp/><ref refid="d4/d8c/a00035_a6f08e4cabe236a4f317bc2b0f8f3d96c_1a6f08e4cabe236a4f317bc2b0f8f3d96c" kindref="member">size</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="d4/d8c/a00035_a699b2e331ade356257fb185280019b87_1a699b2e331ade356257fb185280019b87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>&gt;=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d6/d2c/a00072_abfc1b9ed65cb5e87bb8ec2b189f324c2_1abfc1b9ed65cb5e87bb8ec2b189f324c2" kindref="member">IndexOutOfBoundsException</ref>(std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>of<sp/>this<sp/>vector,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(N)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182" refid="d4/d8c/a00035_a7595892f896b87fbb58d2c36be3389a8_1a7595892f896b87fbb58d2c36be3389a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>&gt;=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d6/d2c/a00072_abfc1b9ed65cb5e87bb8ec2b189f324c2_1abfc1b9ed65cb5e87bb8ec2b189f324c2" kindref="member">IndexOutOfBoundsException</ref>(std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>of<sp/>this<sp/>vector,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(N)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>.at(i);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194" refid="d4/d8c/a00035_a4e214d776fd7b7e4b163c0ebb23ec3c4_1a4e214d776fd7b7e4b163c0ebb23ec3c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>position,<sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>position<sp/>&gt;=<sp/>N<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d6/d2c/a00072_abfc1b9ed65cb5e87bb8ec2b189f324c2_1abfc1b9ed65cb5e87bb8ec2b189f324c2" kindref="member">IndexOutOfBoundsException</ref>(std::to_string(position)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>size<sp/>of<sp/>this<sp/>vector,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(N)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[position]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="d4/d8c/a00035_abb14d1d219fbd5cc3c9a6c50e4334986_1abb14d1d219fbd5cc3c9a6c50e4334986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="d4/d8c/a00035_abb14d1d219fbd5cc3c9a6c50e4334986_1abb14d1d219fbd5cc3c9a6c50e4334986" kindref="member">flatten</ref>(T<sp/>arr[N])</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i]<sp/>=<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arr;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="d4/d8c/a00035_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="d4/d8c/a00035_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="226" refid="d4/d8c/a00035_af56e7800e947754a7c7e508301ee3f9a_1af56e7800e947754a7c7e508301ee3f9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="d4/d8c/a00035_af56e7800e947754a7c7e508301ee3f9a_1af56e7800e947754a7c7e508301ee3f9a" kindref="member">operator[]</ref>(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[i];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="d4/d8c/a00035_a7eb2384ab474fa1a0ba5171a49139e5c_1a7eb2384ab474fa1a0ba5171a49139e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="d4/d8c/a00035_a7eb2384ab474fa1a0ba5171a49139e5c_1a7eb2384ab474fa1a0ba5171a49139e5c" kindref="member">operator()</ref>(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="d4/d8c/a00035_a572904b63c9e2d35ca6625ad2f2b1627_1a572904b63c9e2d35ca6625ad2f2b1627" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="d4/d8c/a00035_a572904b63c9e2d35ca6625ad2f2b1627_1a572904b63c9e2d35ca6625ad2f2b1627" kindref="member">operator()</ref>(<ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="d4/d8c/a00035_a41f3ca26b2d43a91797df7499afcc5c5_1a41f3ca26b2d43a91797df7499afcc5c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/><ref refid="d4/d8c/a00035_a41f3ca26b2d43a91797df7499afcc5c5_1a41f3ca26b2d43a91797df7499afcc5c5" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;T,<sp/>N&gt;<sp/>out<sp/>=<sp/>std::array&lt;T,<sp/>N&gt;();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>((T)<sp/>(this-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(i)<sp/>+<sp/>right.<ref refid="d4/d8c/a00035_a699b2e331ade356257fb185280019b87_1a699b2e331ade356257fb185280019b87" kindref="member">get</ref>(i)));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">mc::Vector&lt;T, N&gt;</ref>(out);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="278" refid="d4/d8c/a00035_ac486a0798fd812967cb543c23bf60e3b_1ac486a0798fd812967cb543c23bf60e3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/><ref refid="d4/d8c/a00035_ac486a0798fd812967cb543c23bf60e3b_1ac486a0798fd812967cb543c23bf60e3b" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;T,<sp/>N&gt;<sp/>out<sp/>=<sp/>std::array&lt;T,<sp/>N&gt;();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>((T)<sp/>(this-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(i)<sp/>-<sp/>right.<ref refid="d4/d8c/a00035_a699b2e331ade356257fb185280019b87_1a699b2e331ade356257fb185280019b87" kindref="member">get</ref>(i)));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">mc::Vector&lt;T, N&gt;</ref>(out);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="295" refid="d4/d8c/a00035_a743ef1fe1d428bd3fabc37adb783aca9_1a743ef1fe1d428bd3fabc37adb783aca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/><ref refid="d4/d8c/a00035_a743ef1fe1d428bd3fabc37adb783aca9_1a743ef1fe1d428bd3fabc37adb783aca9" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i<sp/>though<sp/>of<sp/>more<sp/>than<sp/>one<sp/>pun<sp/>for<sp/>this<sp/>one,<sp/>so<sp/>here<sp/>is<sp/>a<sp/>list:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>cross<sp/>of<sp/>jesus<sp/>or<sp/>the<sp/>cross<sp/>of<sp/>cris?<sp/>these<sp/>are<sp/>important<sp/>questions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i<sp/>wont<sp/>double<sp/>cross<sp/>you!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>bible<sp/>is<sp/>a<sp/>cross<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//so<sp/>is<sp/>a<sp/>swiss<sp/>army<sp/>knife</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//railroad<sp/>crossing;<sp/>the<sp/>train<sp/>is<sp/>carying<sp/>important<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//i<sp/>should<sp/>just<sp/>cross<sp/>this<sp/>off<sp/>the<sp/>list<sp/>of<sp/>unproductive<sp/>things<sp/>i<sp/>have<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/>out<sp/>=<sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//whew<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>(this-&gt;<ref refid="d4/d8c/a00035_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(1)<sp/>*<sp/>right[2])<sp/>-<sp/>(this-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](2)<sp/>*<sp/>right[1]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>(this-&gt;<ref refid="d4/d8c/a00035_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(2)<sp/>*<sp/>right[0])<sp/>-<sp/>(this-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](0)<sp/>*<sp/>right[2]);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>(this-&gt;<ref refid="d4/d8c/a00035_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(0)<sp/>*<sp/>right[1])<sp/>-<sp/>(this-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](1)<sp/>*<sp/>right[0]);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="d4/d8c/a00035_a44697f39e17748dcc4379a714216618b_1a44697f39e17748dcc4379a714216618b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="d4/d8c/a00035_a44697f39e17748dcc4379a714216618b_1a44697f39e17748dcc4379a714216618b" kindref="member">operator%</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;<ref refid="d4/d8c/a00035_a8955aa9951f184610444f10051699211_1a8955aa9951f184610444f10051699211" kindref="member">operator[]</ref>(i)<sp/>*<sp/>right[i]);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="d4/d8c/a00035_a073741c6651aad098b8ee5adea09eaa4_1a073741c6651aad098b8ee5adea09eaa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/><ref refid="d4/d8c/a00035_a073741c6651aad098b8ee5adea09eaa4_1a073741c6651aad098b8ee5adea09eaa4" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>*=<sp/>scalar;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="d4/d8c/a00035_ab8095bda1d18b74aafc434a0f1b2bcd4_1ab8095bda1d18b74aafc434a0f1b2bcd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector</ref><sp/><ref refid="d4/d8c/a00035_ab8095bda1d18b74aafc434a0f1b2bcd4_1ab8095bda1d18b74aafc434a0f1b2bcd4" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>scalar)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>/=<sp/>scalar;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="d4/d8c/a00035_add67c85219f90da24ad00508be384ab4_1add67c85219f90da24ad00508be384ab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_add67c85219f90da24ad00508be384ab4_1add67c85219f90da24ad00508be384ab4" kindref="member">operator+= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-<sp/>right).<ref refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="d4/d8c/a00035_a4a0aee255e45235c029a51cad50b4f2c_1a4a0aee255e45235c029a51cad50b4f2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a4a0aee255e45235c029a51cad50b4f2c_1a4a0aee255e45235c029a51cad50b4f2c" kindref="member">operator-= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-<sp/>right).<ref refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="d4/d8c/a00035_a2727025232d2c2c491b871299babcdbc_1a2727025232d2c2c491b871299babcdbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a2727025232d2c2c491b871299babcdbc_1a2727025232d2c2c491b871299babcdbc" kindref="member">operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>right).<ref refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="d4/d8c/a00035_aaa157b6d3969ccd93e40efd9c6656333_1aaa157b6d3969ccd93e40efd9c6656333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_aaa157b6d3969ccd93e40efd9c6656333_1aaa157b6d3969ccd93e40efd9c6656333" kindref="member">operator/= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>right).<ref refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408" refid="d4/d8c/a00035_af95e59326592e258341dfd2a02d628ff_1af95e59326592e258341dfd2a02d628ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a2727025232d2c2c491b871299babcdbc_1a2727025232d2c2c491b871299babcdbc" kindref="member">operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035_a2e674c851be8cf10808c86895e9ca86f_1a2e674c851be8cf10808c86895e9ca86f" kindref="member">setContents</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>scalar).<ref refid="d4/d8c/a00035_ad8649fb50d1cebdc4f7e2886f445560a_1ad8649fb50d1cebdc4f7e2886f445560a" kindref="member">getContents</ref>());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="d4/d8c/a00035_a4ea0c891100c07ca827fb2b63ff4ab40_1a4ea0c891100c07ca827fb2b63ff4ab40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a4ea0c891100c07ca827fb2b63ff4ab40_1a4ea0c891100c07ca827fb2b63ff4ab40" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](i)<sp/>!=<sp/>other[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="d4/d8c/a00035_a4be78cbc5b6bcbe9488f5c3cd8ffa2e9_1a4be78cbc5b6bcbe9488f5c3cd8ffa2e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_a4be78cbc5b6bcbe9488f5c3cd8ffa2e9_1a4be78cbc5b6bcbe9488f5c3cd8ffa2e9" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="d4/d8c/a00035_afd548f2844ce721daa85501dedc8fd6f_1afd548f2844ce721daa85501dedc8fd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_afd548f2844ce721daa85501dedc8fd6f_1afd548f2844ce721daa85501dedc8fd6f" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](i)<sp/>&lt;=<sp/>other[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="d4/d8c/a00035_af3d351c9d80e71ce467749dd6587b49f_1af3d351c9d80e71ce467749dd6587b49f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035_af3d351c9d80e71ce467749dd6587b49f_1af3d351c9d80e71ce467749dd6587b49f" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;<sp/>other<sp/>||<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="d4/d8c/a00035_a3cf2432f2b843c9fd3a90ab73e600ee0_1a3cf2432f2b843c9fd3a90ab73e600ee0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(const<sp/>Vector&lt;T,<sp/>N&gt;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>other);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="d4/d8c/a00035_a796b41e71ce3fec49a5b1891c13290ee_1a796b41e71ce3fec49a5b1891c13290ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(const<sp/>Vector&lt;T,<sp/>N&gt;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">&gt;other);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="d4/d8c/a00035_a0bf7bca5cdd4235d9d8c0707a83bbbf0_1a0bf7bca5cdd4235d9d8c0707a83bbbf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="d4/d8c/a00035_a0bf7bca5cdd4235d9d8c0707a83bbbf0_1a0bf7bca5cdd4235d9d8c0707a83bbbf0" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;output,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight><highlight class="comment">//why<sp/>not<sp/>just<sp/>&quot;[<sp/>&quot;?<sp/>well,<sp/>that<sp/>needs<sp/>std::string<sp/>to<sp/>be<sp/>included,<sp/>and<sp/>thats<sp/>more<sp/>compiliation<sp/>time.<sp/>this<sp/>way<sp/>doesnt<sp/>need<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>N;<sp/>x++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>v[x];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>x<sp/>!=<sp/>N<sp/>-<sp/>1<sp/>)output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="536" refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;T,<sp/>N&gt;<sp/><ref refid="d4/d8c/a00035_aa8f8d6fd2301a3407b9e6dd60e9d7ea0_1aa8f8d6fd2301a3407b9e6dd60e9d7ea0" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight><highlight class="comment">//Vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//math<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="552" refid="d1/d6f/a00063_a2afa253e79730670dfb6298d282236b5_1a2afa253e79730670dfb6298d282236b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/><ref refid="d1/d6f/a00063_a2afa253e79730670dfb6298d282236b5_1a2afa253e79730670dfb6298d282236b5" kindref="member">cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, 3&gt;</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a*<sp/>b;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="568" refid="d1/d6f/a00063_a0c07c85e6b00cfd2a26759979161fc1c_1a0c07c85e6b00cfd2a26759979161fc1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="d1/d6f/a00063_a0c07c85e6b00cfd2a26759979161fc1c_1a0c07c85e6b00cfd2a26759979161fc1c" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>%<sp/>b;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="582" refid="d1/d6f/a00063_a7958bca152122020b061e41db09dacad_1a7958bca152122020b061e41db09dacad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="d1/d6f/a00063_a7958bca152122020b061e41db09dacad_1a7958bca152122020b061e41db09dacad" kindref="member">magnitude</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>out<sp/>=<sp/>T();</highlight><highlight class="comment">//assuming<sp/>its<sp/>numerical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//basically<sp/>the<sp/>pythagereon<sp/>theorum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d6/d2c/a00072_a5cd2bc023fe3e9f155cb6baf56f045d9_1a5cd2bc023fe3e9f155cb6baf56f045d9" kindref="member">Index</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="d1/d6f/a00063_ab0bb1980b03f7b6994e80b0b8e732579_1ab0bb1980b03f7b6994e80b0b8e732579" kindref="member">sqr</ref>(a[i]));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(out);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>Size<sp/>N&gt;</highlight></codeline>
<codeline lineno="602" refid="d1/d6f/a00063_ad11a3dbb6a8527a40a6fdd83fc654490_1ad11a3dbb6a8527a40a6fdd83fc654490" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="d1/d6f/a00063_ad11a3dbb6a8527a40a6fdd83fc654490_1ad11a3dbb6a8527a40a6fdd83fc654490" kindref="member">normalize</ref>(<ref refid="d4/d8c/a00035" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector<sp/>/<sp/><ref refid="d1/d6f/a00063_a7958bca152122020b061e41db09dacad_1a7958bca152122020b061e41db09dacad" kindref="member">magnitude</ref>(vector);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//Vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight><highlight class="comment">//mc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/MACE/Utility/Vector.h"/>
  </compounddef>
</doxygen>
